"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[54052],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},93999:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return d}});var r=n(83117),a=n(80102),i=(n(67294),n(3905)),o=["components"],c={title:"Magnetic Field Sensor",sidebar_label:"Magnetic Field Sensor"},s=void 0,l={unversionedId:"compass/magnetic-field-sensor",id:"compass/magnetic-field-sensor",title:"Magnetic Field Sensor",description:"The raw magnetic field values can be retrieved using this extension.",source:"@site/docs/compass/magnetic-field-sensor.md",sourceDirName:"compass",slug:"/compass/magnetic-field-sensor",permalink:"/docs/compass/magnetic-field-sensor",draft:!1,tags:[],version:"current",frontMatter:{title:"Magnetic Field Sensor",sidebar_label:"Magnetic Field Sensor"},sidebar:"compass",previous:{title:"Request Authorisation",permalink:"/docs/compass/request-authorisation"},next:{title:"changelog",permalink:"/docs/compass/changelog"}},u={},d=[],p={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The raw magnetic field values can be retrieved using this extension.\nYou can listen for the MagneticFieldEvent for changes in the magnetic field.\nThere are 2 important events, both indicating the magnetic field, one in the\ncalibrated state and the other the raw uncalibrated data."),(0,i.kt)("p",null,"The functionality is accessed through the ",(0,i.kt)("inlineCode",{parentName:"p"},"Compass.service.magneticFieldSensor")," instance.\nThere are also checks to see if the data updates are available on the current device.\nThis checks whether there is a magnetometer on the device and whether the particular\ndata updates (calibrated or uncalibrated) are available. (Uncalibrated data was only\nintroduced on Android v18)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (Compass.service.magneticFieldSensor.isCalibratedDataAvailable)\n{\n    Compass.service.magneticFieldSensor.addEventListener( MagneticFieldEvent.MAGNETIC_FIELD_UPDATED, magneticFieldUpdatedHandler );\n\n    // The true here indicates the request for calibrated data\n    Compass.service.magneticFieldSensor.register( SensorRate.SENSOR_DELAY_NORMAL, true );\n}\n")),(0,i.kt)("p",null,"Then you retrieve information in the update events:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'private function magneticFieldUpdatedHandler( event:MagneticFieldEvent ):void\n{\n    trace( "calibrated\\nx:"+ event.fieldX + "\\ny:"+event.fieldY  +"\\nz:"+ event.fieldZ +"\\na:"+ event.accuracy; );\n}\n')),(0,i.kt)("p",null,"Similarly to stop the updates call the ",(0,i.kt)("inlineCode",{parentName:"p"},"unregister")," function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"Compass.service.magneticFieldSensor.unregister();\n")))}m.isMDXComponent=!0}}]);
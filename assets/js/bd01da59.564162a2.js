(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[5347],{3905:function(e,n,i){"use strict";i.d(n,{Zo:function(){return c},kt:function(){return u}});var o=i(67294);function t(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function a(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,o)}return i}function r(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?a(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function s(e,n){if(null==e)return{};var i,o,t=function(e,n){if(null==e)return{};var i,o,t={},a=Object.keys(e);for(o=0;o<a.length;o++)i=a[o],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)i=a[o],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var d=o.createContext({}),l=function(e){var n=o.useContext(d),i=n;return e&&(i="function"==typeof e?e(n):r(r({},n),e)),i},c=function(e){var n=l(e.components);return o.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var i=e.components,t=e.mdxType,a=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(i),u=t,g=m["".concat(d,".").concat(u)]||m[u]||p[u]||a;return i?o.createElement(g,r(r({ref:n},c),{},{components:i})):o.createElement(g,r({ref:n},c))}));function u(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=i.length,r=new Array(a);r[0]=m;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s.mdxType="string"==typeof e?e:t,r[1]=s;for(var l=2;l<a;l++)r[l]=i[l];return o.createElement.apply(null,r)}return o.createElement.apply(null,i)}m.displayName="MDXCreateElement"},87890:function(e,n,i){"use strict";i.r(n),i.d(n,{frontMatter:function(){return r},metadata:function(){return s},toc:function(){return d},default:function(){return c}});var o=i(22122),t=i(19756),a=(i(67294),i(3905)),r={title:"Firebase Cloud Messaging",sidebar_label:"Firebase Cloud Messaging"},s={unversionedId:"pushnotifications/firebase/firebase-cloud-messaging",id:"pushnotifications/firebase/firebase-cloud-messaging",isDocsHomePage:!1,title:"Firebase Cloud Messaging",description:"Required ANEs",source:"@site/docs/pushnotifications/firebase/firebase-cloud-messaging.md",sourceDirName:"pushnotifications/firebase",slug:"/pushnotifications/firebase/firebase-cloud-messaging",permalink:"/docs/pushnotifications/firebase/firebase-cloud-messaging",version:"current",sidebar_label:"Firebase Cloud Messaging",frontMatter:{title:"Firebase Cloud Messaging",sidebar_label:"Firebase Cloud Messaging"},sidebar:"pushnotifications",previous:{title:"Apple Push Notification Service",permalink:"/docs/pushnotifications/apple/apple-push-notification-service"},next:{title:"Firebase InApp Messaging",permalink:"/docs/pushnotifications/firebase/firebase-inapp-messaging"}},d=[{value:"Required ANEs",id:"required-anes",children:[{value:"Google Play Services",id:"google-play-services",children:[]},{value:"Firebase",id:"firebase",children:[]}]},{value:"Extension IDs",id:"extension-ids",children:[]},{value:"Manifest Additions",id:"manifest-additions",children:[{value:"MultiDex Applications",id:"multidex-applications",children:[]}]},{value:"Info Additions and Entitlements",id:"info-additions-and-entitlements",children:[]}],l={toc:d};function c(e){var n=e.components,r=(0,t.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,o.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"required-anes"},"Required ANEs"),(0,a.kt)("p",null,"To use this service add ",(0,a.kt)("inlineCode",{parentName:"p"},"com.distriqt.PushNotifications.FCM.ane")," variant of the extension to your project in place of  ",(0,a.kt)("inlineCode",{parentName:"p"},"com.distriqt.PushNotifications.ane"),". You should only add one of the variants to your project. If you need to support multiple services please use the All Services variant."),(0,a.kt)("p",null,"All variants of the Push Notifications extension have the same extension id: ",(0,a.kt)("inlineCode",{parentName:"p"},"com.distriqt.PushNotifications")," so you should add this to your extensions list in your application descriptor:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<extensions>\n    ...\n    \n    <extensionID>com.distriqt.PushNotifications</extensionID>\n    \n    ...\n</extensions>\n")),(0,a.kt)("p",null,"Make sure you have added the common ANEs from the ",(0,a.kt)("a",{parentName:"p",href:"../add-the-extension"},"Add the Extension")," section first. This includes the Core and Android Support ANEs."),(0,a.kt)("h3",{id:"google-play-services"},"Google Play Services"),(0,a.kt)("p",null,"This ANE requires usage of certain aspects of the Google Play Services client library.\nThe client library is available as a series of ANEs that you add into your applications packaging options.\nEach separate ANE provides a component from the Play Services client library and are used by different ANEs.\nThese client libraries aren't packaged with this ANE as they are used by multiple ANEs and separating them\nwill avoid conflicts, allowing you to use multiple ANEs in the one application."),(0,a.kt)("p",null,"This ANE requires the following Google Play Services:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.distriqt.playservices.Base.ane"},(0,a.kt)("inlineCode",{parentName:"a"},"com.distriqt.playservices.Base"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.distriqt.playservices.CloudMessaging.ane"},(0,a.kt)("inlineCode",{parentName:"a"},"com.distriqt.playservices.CloudMessaging")))),(0,a.kt)("p",null,"You must include the above native extensions in your application along with this extension,\nand you need to ensure they are packaged with your application."),(0,a.kt)("p",null,"You can access the Google Play Services client library extensions here: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-GooglePlayServices"},"https://github.com/distriqt/ANE-GooglePlayServices"),"."),(0,a.kt)("h3",{id:"firebase"},"Firebase"),(0,a.kt)("p",null,"To use Firebase Cloud Messaging you must include the core Firebase libraries and configure\nyour Firebase application. The core libraries are available in the ",(0,a.kt)("inlineCode",{parentName:"p"},"com.google.firebase.core")," extension alongside the Google Play Services:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.google.firebase.core.ane"},(0,a.kt)("inlineCode",{parentName:"a"},"com.google.firebase.core")))),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.airnativeextensions.com/docs/firebase/setup/configuration-files/"},"Firebase configuration documentation")," on how to configure your application."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note")),(0,a.kt)("p",{parentName:"blockquote"},'If you wish to use Firebase on iOS you must disable the "Hide ANE-Library-Symbols" option in your packaging settings.'),(0,a.kt)("p",{parentName:"blockquote"},"We highly discourage usage of this setting as it can increase the size of your application by\nnot correctly identifying code that is shared between extensions. "),(0,a.kt)("p",{parentName:"blockquote"},"Any good ANE should not require this setting. ")),(0,a.kt)("h2",{id:"extension-ids"},"Extension IDs"),(0,a.kt)("p",null,"The following should be added to your ",(0,a.kt)("inlineCode",{parentName:"p"},"extensions")," node in your application descriptor to identify all the required ANEs in your application:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<extensions>\n    <extensionID>com.distriqt.PushNotifications</extensionID>\n    <extensionID>com.distriqt.Core</extensionID>\n\n    <extensionID>com.distriqt.playservices.Base</extensionID>\n    <extensionID>com.distriqt.playservices.CloudMessaging</extensionID>\n\n    <extensionID>com.google.firebase.core</extensionID>\n    <extensionID>com.google.android.datatransport</extensionID>\n    <extensionID>com.google.dagger</extensionID>\n    <extensionID>com.google.protobuflite</extensionID>\n\n    <extensionID>androidx.core</extensionID>\n    <extensionID>androidx.browser</extensionID>\n    <extensionID>androidx.appcompat</extensionID>\n    <extensionID>androidx.cardview</extensionID>\n    <extensionID>androidx.constraintlayout</extensionID>\n    <extensionID>androidx.vectordrawable</extensionID>\n</extensions>\n")),(0,a.kt)("h1",{id:"android"},"Android"),(0,a.kt)("h2",{id:"manifest-additions"},"Manifest Additions"),(0,a.kt)("p",null,"You must add all the Firebase related manifest additions along with several additions for Cloud Messaging. "),(0,a.kt)("p",null,"The following shows the complete manifest additions node. You must replace ",(0,a.kt)("inlineCode",{parentName:"p"},"APPLICATION_PACKAGE")," with your\nAIR application's Java package name, something like ",(0,a.kt)("inlineCode",{parentName:"p"},"air.com.distriqt.test"),".\nGenerally this is your AIR application id prefixed by ",(0,a.kt)("inlineCode",{parentName:"p"},"air.")," unless you have specified no air flair in your build options."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest android:installLocation="auto">\n    \n    <uses-permission android:name="android.permission.INTERNET" />\n    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\n    <uses-permission android:name="android.permission.WAKE_LOCK" />\n    \n    \x3c!-- OPTIONAL --\x3e\n    <uses-permission android:name="android.permission.VIBRATE"/>\n    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />\n    \n    <uses-permission android:name="com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE" /> \n    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />\n    <permission android:name="APPLICATION_PACKAGE.permission.C2D_MESSAGE" android:protectionLevel="signature" />\n    <uses-permission android:name="APPLICATION_PACKAGE.permission.C2D_MESSAGE" />\n    \n    <application>\n        <meta-data android:name="com.google.android.gms.version" android:value="@integer/google_play_services_version" />\n\n        <activity android:name="com.google.android.gms.common.api.GoogleApiActivity" \n            android:theme="@android:style/Theme.Translucent.NoTitleBar" \n            android:exported="false"/>\n\n\n        \x3c!-- NOTIFICATIONS --\x3e\n        <receiver android:name="com.distriqt.extension.pushnotifications.notifications.receivers.NotificationReceiver">\n            <intent-filter>\n                <action android:name="APPLICATION_PACKAGE.NOTIFICATION_SELECTED" />\n                <action android:name="APPLICATION_PACKAGE.NOTIFICATION_DELETED" />\n                <action android:name="APPLICATION_PACKAGE.NOTIFICATION_ACTION" />\n                <data android:scheme="dtpn" />\n            </intent-filter>\n            <intent-filter>\n                <action android:name="android.intent.action.BOOT_COMPLETED" />\n            </intent-filter>\n        </receiver>\n        <provider\n            android:name="com.distriqt.extension.pushnotifications.content.FileProvider"\n            android:authorities="APPLICATION_PACKAGE.pushnotificationsfileprovider"\n            android:grantUriPermissions="true"\n            android:exported="false">\n            <meta-data\n                android:name="android.support.FILE_PROVIDER_PATHS"\n                android:resource="@xml/distriqt_pushnotifications_paths" />\n        </provider>\n\n\n\n        \x3c!-- FIREBASE CLOUD MESSAGING --\x3e\n        <meta-data android:name="com.google.firebase.messaging.default_notification_icon" android:resource="@drawable/ic_stat_distriqt" />\n        <meta-data android:name="com.google.firebase.messaging.default_notification_color" android:resource="@color/blue" />\n        <meta-data android:name="com.google.firebase.messaging.default_notification_channel_id" android:value="test_sound_res_channel"/>\n\n        <service android:name="com.distriqt.extension.pushnotifications.fcm.FcmMessagingService">\n            <intent-filter>\n                <action android:name="com.google.firebase.MESSAGING_EVENT"/>\n            </intent-filter>\n        </service>\n        <service\n            android:name="com.distriqt.extension.pushnotifications.fcm.FcmInstanceIDService"\n            android:exported="true">\n            <intent-filter>\n                <action android:name="com.google.firebase.INSTANCE_ID_EVENT"/>\n            </intent-filter>\n        </service>\n        <receiver\n            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"\n            android:exported="true"\n            android:permission="com.google.android.c2dm.permission.SEND" >\n            <intent-filter>\n                <action android:name="com.google.android.c2dm.intent.RECEIVE" />\n            </intent-filter>\n        </receiver>\n\n\n\n        \x3c!-- FIREBASE CORE --\x3e\n        <receiver\n            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"\n            android:enabled="true"\n            android:exported="false" >\n        </receiver>\n\n        <service\n            android:name="com.google.android.gms.measurement.AppMeasurementService"\n            android:enabled="true"\n            android:exported="false" />\n        <service\n            android:name="com.google.android.gms.measurement.AppMeasurementJobService"\n            android:enabled="true"\n            android:exported="false"\n            android:permission="android.permission.BIND_JOB_SERVICE" />\n        <service\n            android:name="com.google.firebase.components.ComponentDiscoveryService"\n            android:directBootAware="true"\n            android:exported="false" >\n            <meta-data\n                android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar"\n                android:value="com.google.firebase.components.ComponentRegistrar" />\n            <meta-data\n                android:name="com.google.firebase.components:com.google.firebase.installations.FirebaseInstallationsRegistrar"\n                android:value="com.google.firebase.components.ComponentRegistrar" />\n\n            <meta-data\n                android:name="com.google.firebase.components:com.google.firebase.dynamicloading.DynamicLoadingRegistrar"\n                android:value="com.google.firebase.components.ComponentRegistrar" />\n\n            \x3c!-- Firebase Cloud Messaging --\x3e\n            <meta-data\n                android:name="com.google.firebase.components:com.google.firebase.iid.Registrar"\n                android:value="com.google.firebase.components.ComponentRegistrar" />\n            <meta-data\n                android:name="com.google.firebase.components:com.google.firebase.messaging.FirebaseMessagingRegistrar"\n                android:value="com.google.firebase.components.ComponentRegistrar" />\n            <meta-data\n                android:name="com.google.firebase.components:com.google.firebase.datatransport.TransportRegistrar"\n                android:value="com.google.firebase.components.ComponentRegistrar" />\n            \n        </service>\n\n        <provider\n            android:name="com.google.firebase.provider.FirebaseInitProvider"\n            android:authorities="APPLICATION_PACKAGE.firebaseinitprovider"\n            android:exported="false"\n            android:initOrder="100" />\n\n\n        \x3c!-- datatransport --\x3e\n        <service\n            android:name="com.google.android.datatransport.runtime.backends.TransportBackendDiscovery"\n            android:exported="false" >\n            <meta-data\n                android:name="backend:com.google.android.datatransport.cct.CctBackendFactory"\n                android:value="cct" />\n        </service>\n        <service\n            android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService"\n            android:exported="false"\n            android:permission="android.permission.BIND_JOB_SERVICE" >\n        </service>\n        <receiver\n            android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver"\n            android:exported="false" />\n        \n        \n        \n    </application>\n    \n</manifest>\n')),(0,a.kt)("h4",{id:"component-discovery-service"},"Component Discovery Service"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"com.google.firebase.components.ComponentDiscoveryService")," is particularly important for Firebase configuration."),(0,a.kt)("p",null,"The meta-data tags that are added to this service specify the components that should be initialised by Firebase and you must ensure that you have added the appropriate tags for the services you are using."),(0,a.kt)("p",null,"Firebase Messaging depends on Analytics so you must at least include the following tags:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Analytics:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<meta-data\n    android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar"\n    android:value="com.google.firebase.components.ComponentRegistrar" />\n<meta-data\n    android:name="com.google.firebase.components:com.google.firebase.installations.FirebaseInstallationsRegistrar"\n    android:value="com.google.firebase.components.ComponentRegistrar" />\n<meta-data\n    android:name="com.google.firebase.components:com.google.firebase.dynamicloading.DynamicLoadingRegistrar"\n    android:value="com.google.firebase.components.ComponentRegistrar" />\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Messaging (FCM):")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<meta-data\n    android:name="com.google.firebase.components:com.google.firebase.iid.Registrar"\n    android:value="com.google.firebase.components.ComponentRegistrar" />\n<meta-data\n    android:name="com.google.firebase.components:com.google.firebase.messaging.FirebaseMessagingRegistrar"\n    android:value="com.google.firebase.components.ComponentRegistrar" />\n<meta-data\n    android:name="com.google.firebase.components:com.google.firebase.datatransport.TransportRegistrar"\n    android:value="com.google.firebase.components.ComponentRegistrar" />\n')),(0,a.kt)("h3",{id:"multidex-applications"},"MultiDex Applications"),(0,a.kt)("p",null,"If you have a large application and are supporting Android 4.x then you will need to ensure you enable your application to correctly support MultiDex to allow the application to be broken up into smaller dex packages."),(0,a.kt)("p",null,"This is enabled by default with releases of AIR v25+, except in the Android 4.x case where you need to change the manifest additions for the application tag to match the following and use the ",(0,a.kt)("inlineCode",{parentName:"p"},"MultiDexApplication"),"."),(0,a.kt)("h4",{id:"using-androidx"},"Using AndroidX"),(0,a.kt)("p",null,"This will require the addition of the ",(0,a.kt)("inlineCode",{parentName:"p"},"androidx.multidex")," extension which contains the ",(0,a.kt)("inlineCode",{parentName:"p"},"androidx.multidex.MultiDexApplication")," implementation."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest android:installLocation="auto">\n    \x3c!-- PERMISSIONS --\x3e\n\n    <application android:name="androidx.multidex.MultiDexApplication">\n\n        \x3c!-- ACTIVITIES / RECEIVERS / SERVICES --\x3e\n\n    </application>\n</manifest>\n')),(0,a.kt)("h1",{id:"ios"},"iOS"),(0,a.kt)("p",null,"Firebase on iOS uses APNS certificates and APNS notifications to deliver messages.\nSo you'll need to go through the process of setting up your APNS certificates and enabling APNS for your application. "),(0,a.kt)("p",null,'Once you have setup your APNS certificates you must add them to your Firebase application.\nNavigate to your application and click on settings, then the "Cloud Messaging" tab and upload your certificates.'),(0,a.kt)("p",null,(0,a.kt)("img",{src:i(73208).Z})),(0,a.kt)("p",null,"You can find more information on setting up the certificates in the ",(0,a.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/cloud-messaging/ios/certs"},"Firebase documentation"),"."),(0,a.kt)("h2",{id:"info-additions-and-entitlements"},"Info Additions and Entitlements"),(0,a.kt)("p",null,"In order for the Firebase system to work well with AIR and other extensions we need\nto disable the automatic delegate proxy that Firebase implements on iOS. To do so\nyou must add the following to your InfoAdditions:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<key>FirebaseAppDelegateProxyEnabled</key>\n<false/>\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<InfoAdditions><![CDATA[\n    \n    <key>FirebaseAppDelegateProxyEnabled</key>\n    <false/>\n\n]]></InfoAdditions>\n<requestedDisplayResolution>high</requestedDisplayResolution>\n<Entitlements><![CDATA[\n    \n    \x3c!-- DEVELOPMENT --\x3e\n    <key>get-task-allow</key>\n    <true/>\n    <key>aps-environment</key>\n    <string>development</string>\n    \n    \x3c!-- PRODUCTION --\x3e\n    \x3c!--\n    <key>get-task-allow</key>\n    <false/>\n    <key>aps-environment</key>\n    <string>production</string>\n    --\x3e\n    \n    <key>application-identifier</key>\n    <string>X5LW23Q6CJ.com.distriqt.test</string>\n    <key>keychain-access-groups</key>\n    <array>\n        <string>X5LW23Q6CJ.*</string>\n    </array>\n    \n]]></Entitlements>\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note the difference between a development and production / adhoc entitlements. The ",(0,a.kt)("inlineCode",{parentName:"p"},"get-task-allow")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"aps-environment")," must be set correctly for your build.")),(0,a.kt)("p",null,"The first entitlement field is the ",(0,a.kt)("inlineCode",{parentName:"p"},"aps-environment"),". This field indicates whether we are using the ",(0,a.kt)("inlineCode",{parentName:"p"},"development")," or the ",(0,a.kt)("inlineCode",{parentName:"p"},"production")," environment. It must be either development or production and depends on which configuration you are using. If you are running a debug build you should use ",(0,a.kt)("inlineCode",{parentName:"p"},"development"),". If you are looking to publish the application to the AppStore, you should use ",(0,a.kt)("inlineCode",{parentName:"p"},"production"),"."),(0,a.kt)("p",null,"Also note the ",(0,a.kt)("inlineCode",{parentName:"p"},"get-task-allow")," field should be set to ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," or removed for production builds."))}c.isMDXComponent=!0},73208:function(e,n,i){"use strict";n.Z=i.p+"assets/images/setup_fcm_ios_apns-certs-f6db1fabffb3b9e9f598f97d7076a834.png"}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[25586],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(a),u=r,f=c["".concat(d,".").concat(u)]||c[u]||m[u]||i;return a?n.createElement(f,o(o({ref:t},s),{},{components:a})):n.createElement(f,o({ref:t},s))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},15711:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"Adding Images and Video",sidebar_label:"Adding Images and Video"},o=void 0,l={unversionedId:"camerarollextended/adding-files",id:"camerarollextended/adding-files",title:"Adding Images and Video",description:"Adding BitmapData",source:"@site/docs/camerarollextended/adding-files.mdx",sourceDirName:"camerarollextended",slug:"/camerarollextended/adding-files",permalink:"/docs/camerarollextended/adding-files",draft:!1,tags:[],version:"current",frontMatter:{title:"Adding Images and Video",sidebar_label:"Adding Images and Video"},sidebar:"camerarollextended",previous:{title:"File Access",permalink:"/docs/camerarollextended/file-access"},next:{title:"Migrating to v6.4",permalink:"/docs/camerarollextended/migrating-to-v6.4"}},d={},p=[{value:"Adding BitmapData",id:"adding-bitmapdata",level:2},{value:"Adding files",id:"adding-files",level:2},{value:"Android",id:"android",level:2}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},c=s("Tabs"),m=s("TabItem"),u={toc:p},f="wrapper";function g(e){let{components:t,...a}=e;return(0,r.kt)(f,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"adding-bitmapdata"},"Adding BitmapData"),(0,r.kt)("p",null,"With the standard ",(0,r.kt)("inlineCode",{parentName:"p"},"CameraRoll")," implementation you can easily add a ",(0,r.kt)("inlineCode",{parentName:"p"},"BitmapData")," reference to the camera roll, using the ",(0,r.kt)("inlineCode",{parentName:"p"},"addBitmapData")," function. "),(0,r.kt)("p",null,"This functionality is also duplicated in this extension:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var bd:BitmapData = ...;\n\nCameraRollExtended.service.addBitmapData( bd );\n")),(0,r.kt)("p",null,"We have added some additional options around this function that allow you to control the format, quality and filename."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'CameraRollExtended.service.addBitmapData( bd, "png", 1, "plane.png" );\n')),(0,r.kt)("p",null,"The format can either be ",(0,r.kt)("inlineCode",{parentName:"p"},'"png"')," or ",(0,r.kt)("inlineCode",{parentName:"p"},'"jpg"')," and the quality should be a number between 0 (lowest quality) and 1 (highest quality). The default is ",(0,r.kt)("inlineCode",{parentName:"p"},'"jpg"')," at ",(0,r.kt)("inlineCode",{parentName:"p"},"0.8")),(0,r.kt)("p",null,"The filename is used as the name of the file on Android."),(0,r.kt)("h2",{id:"adding-files"},"Adding files"),(0,r.kt)("p",null,"You may have image files that you wish to add to the camera roll without have to load the bitmap data into memory, and you may also have video content that you want to add to the camera roll."),(0,r.kt)("p",null,"To achieve this you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"addFile()")," function, passing the ",(0,r.kt)("inlineCode",{parentName:"p"},"File")," reference to the file you wish to add to the camera roll."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var video:File = File.applicationDirectory.resolvePath("assets/video.mp4");\n\nvar success:Boolean = CameraRollExtended.service.addFile( video, Asset.VIDEO );\n')),(0,r.kt)("p",null,"If the functionality is not supported or there was an error initiating the transfer to the camera roll then this function may return ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),". If it returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", the process was started successfully and you can expect one of the following events:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CameraRollExtendedEvent.ADD_FILE_COMPLETE"),": When the file was successfully transferred to the camera roll;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CameraRollExtendedEvent.ADD_FILE_ERROR"),": If there was an error.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'CameraRollExtended.service.addEventListener( CameraRollExtendedEvent.ADD_FILE_COMPLETE, addFile_completeHandler );\nCameraRollExtended.service.addEventListener( CameraRollExtendedEvent.ADD_FILE_ERROR, addFile_errorHandler );\n                \nCameraRollExtended.service.addFile( video, Asset.VIDEO );\n\nfunction addFile_completeHandler( event:CameraRollExtendedEvent ):void\n{\n    trace( "addFile_completeHandler()" );\n}\n\nfunction addFile_errorHandler( event:CameraRollExtendedEvent ):void\n{\n    trace( "addFile_errorHandler(): ["+event.errorCode+"] :: " + event.message );\n}\n')),(0,r.kt)("h2",{id:"android"},"Android"),(0,r.kt)("p",null,"If you are supporting Android < API v28 then you will need to ensure you add the ",(0,r.kt)("inlineCode",{parentName:"p"},"WRITE_EXTERNAL_FILES")," permission to your application."),(0,r.kt)(c,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,r.kt)(m,{value:"apm",mdxType:"TabItem"},(0,r.kt)("p",null,"If you are using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/airsdk/apm"},(0,r.kt)("inlineCode",{parentName:"a"},"apm"))," all you can generate a custom configuration manifest and then add the additional permission to that. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apm generate config android \n")),(0,r.kt)("p",null,"Open the file generated at ",(0,r.kt)("inlineCode",{parentName:"p"},"config/android/AndroidManfiest.xml")," and ensure you add the following line:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" android:maxSdkVersion="28" />\n')),(0,r.kt)("p",null,"Then regenerate your application descriptor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apm generate app-descriptor src/MyApp-app.xml\n"))),(0,r.kt)(m,{value:"manual",mdxType:"TabItem"},(0,r.kt)("p",null,"If you are manually managing your application descriptor (and manifest additions) then you will need to add the following line to the ",(0,r.kt)("inlineCode",{parentName:"p"},"<manifestAdditions>")," tag in your application descriptor: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" android:maxSdkVersion="28" />\n')))))}g.isMDXComponent=!0}}]);
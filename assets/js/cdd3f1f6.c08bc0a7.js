"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[30340],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return v}});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=i.createContext({}),p=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),v=r,h=d["".concat(o,".").concat(v)]||d[v]||u[v]||l;return t?i.createElement(h,a(a({ref:n},c),{},{components:t})):i.createElement(h,a({ref:n},c))}));function v(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,a=new Array(l);a[0]=d;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var p=2;p<l;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},26198:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var i=t(87462),r=t(63366),l=(t(67294),t(3905)),a=["components"],s={title:"Setup Billing Service",sidebar_label:"Setup Billing Service"},o=void 0,p={unversionedId:"inappbilling/billing-service",id:"inappbilling/billing-service",title:"Setup Billing Service",description:"Billing Service",source:"@site/docs/inappbilling/billing-service.md",sourceDirName:"inappbilling",slug:"/inappbilling/billing-service",permalink:"/docs/inappbilling/billing-service",tags:[],version:"current",frontMatter:{title:"Setup Billing Service",sidebar_label:"Setup Billing Service"},sidebar:"inappbilling",previous:{title:"Testing",permalink:"/docs/inappbilling/samsung/testing"},next:{title:"Products",permalink:"/docs/inappbilling/products"}},c=[{value:"Billing Service",id:"billing-service",children:[],level:2},{value:"Events",id:"events",children:[],level:2},{value:"Service Type",id:"service-type",children:[],level:2},{value:"Pending Purchases",id:"pending-purchases",children:[],level:2}],u={toc:c};function d(e){var n=e.components,t=(0,r.Z)(e,a);return(0,l.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"billing-service"},"Billing Service"),(0,l.kt)("p",null,"Before starting here you should make sure you have already setup the service for your application\nas outlined in earlier sections.\nThis is where you would have added products to your application in the appropriate developer console."),(0,l.kt)("p",null,"The next step to using the functionality in this extension is to setup a billing (or purchasing) service.\nThis simply requires you to set the service you plan on using and calling ",(0,l.kt)("inlineCode",{parentName:"p"},"setup")," with the service key (if required)."),(0,l.kt)("p",null,"The following uses the default for the current platform and specifies the Google Play Billing Public License key:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-actionscript"},"var service:BillingService = new BillingService()\n    .setGooglePlayPublicKey( GOOGLE_PLAY_INAPP_BILLING_KEY );\n\nvar success:Boolean = InAppBilling.service.setup( service );\n")),(0,l.kt)("p",null,"This call performs a few things internally "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Initialises the billing service"),(0,l.kt)("li",{parentName:"ul"},"Initialises the purchase queue "),(0,l.kt)("li",{parentName:"ul"},"Adds appropriate purchase handlers"),(0,l.kt)("li",{parentName:"ul"},"Checks the state of any pending purchases")),(0,l.kt)("p",null,"The return value of the ",(0,l.kt)("inlineCode",{parentName:"p"},"setup")," function indicates if the configured service type is supported on\nthe current device. This may return ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," if you have for example requests Apple In-App Purchases on\nan Android device. "),(0,l.kt)("p",null,"Once this is complete the ",(0,l.kt)("inlineCode",{parentName:"p"},"InAppBillingEvent.SETUP_SUCCESS")," event will be dispatched and the service\nis available for queries."),(0,l.kt)("p",null,"If an error occurred then the ",(0,l.kt)("inlineCode",{parentName:"p"},"InAppBillingEvent.SETUP_FAILURE")," event will be dispatched. This is a fatal\nevent and will stop any other functionality from working successfully. Generally this only occurs due\nto a misconfiguration and is to help you get an application working correctly however you should make\nsure that you handle the event appropriately."),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("p",null,"We suggest you listen to the following four events before calling setup:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"InAppBillingEvent.SETUP_SUCCESS"),": Dispatched when setup is successfully completed;"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"InAppBillingEvent.SETUP_FAILURE"),": Dispatched when there was an error during setup;"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PurchaseEvent.PURCHASES_UPDATED"),": Dispatched if there are pending purchases needing to be processed;"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PurchaseRequestEvent.SHOULD_ADD_PURCHASE"),": Dispatched if the app was launched from an AppStore promotional purchase (see ",(0,l.kt)("a",{parentName:"li",href:"/docs/inappbilling/promotions"},"Promotions"),").")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-actionscript"},"InAppBilling.service.addEventListener( InAppBillingEvent.SETUP_SUCCESS, setup_successHandler );\nInAppBilling.service.addEventListener( InAppBillingEvent.SETUP_FAILURE, setup_failureHandler );\nInAppBilling.service.addEventListener( PurchaseEvent.PURCHASES_UPDATED, purchases_updatedHandler );\nInAppBilling.service.addEventListener( PurchaseRequestEvent.SHOULD_ADD_PURCHASE, purchaseRequest_shouldAddPurchaseHandler );\n                        \nInAppBilling.service.setup(\n        new BillingService()\n                .setGooglePlayPublicKey( GOOGLE_PLAY_INAPP_BILLING_KEY )\n);\n")),(0,l.kt)("h2",{id:"service-type"},"Service Type"),(0,l.kt)("p",null,"The billing service type will be automatically selected based on the default of the current device platform. However we suggest you specify the service type in your ",(0,l.kt)("inlineCode",{parentName:"p"},"BillingService")," using ",(0,l.kt)("inlineCode",{parentName:"p"},"setServiceType()")," to specify a particular service:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-actionscript"},"var service:BillingService = new BillingService(  )\n    .setServiceType( InAppBillingServiceTypes.GOOGLE_PLAY_INAPP_BILLING )\n    .setGooglePlayPublicKey( GOOGLE_PLAY_INAPP_BILLING_KEY );\n\nvar success:Boolean = InAppBilling.service.setup( service );\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"You do not need to call ",(0,l.kt)("inlineCode",{parentName:"p"},"setServiceType"),".\nIf you do not call it then the default for the current platform will be used,\ni.e. Apple InApp Purchases on iOS and Google's Play InApp Billing on Android."),(0,l.kt)("p",{parentName:"div"},"We suggest that you do specify a service type, particularly on Android where there are multiple stores involved.\nThis is so that you ensure you are utilising the correct store for your application, otherwise you may find that the extension incorrectly assumes you are using the default store on the device (eg Huawei AppGallery on a Huawei device), which may not be what you intend."))),(0,l.kt)("h2",{id:"pending-purchases"},"Pending Purchases"),(0,l.kt)("p",null,"Note that the pending purchases may not be available to you at the  ",(0,l.kt)("inlineCode",{parentName:"p"},"InAppBillingEvent.SETUP_SUCCESS")," event, as they may be updated after setup has completed. This is particularly true on iOS/tvOS where the payment queue update (which populates the pending purchases) will occur a short time after setup succeeds."),(0,l.kt)("p",null,"This update will be indicated by a ",(0,l.kt)("inlineCode",{parentName:"p"},"PurchaseEvent.PURCHASES_UPDATED"),", indicating there are purchases to process."))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[58193],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),f=r,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||o;return t?a.createElement(m,i(i({ref:n},p),{},{components:t})):a.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},90530:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=t(87462),r=(t(67294),t(3905));const o={title:"Firebase Cloud Message",sidebar_label:"Firebase Cloud Message"},i=void 0,s={unversionedId:"pushnotifications/firebase/firebase-cloud-message",id:"pushnotifications/firebase/firebase-cloud-message",title:"Firebase Cloud Message",description:"Sending a message with Firebase is very similar (if not exactly the same) as GCM apart from the endpoint.",source:"@site/docs/pushnotifications/firebase/firebase-cloud-message.md",sourceDirName:"pushnotifications/firebase",slug:"/pushnotifications/firebase/firebase-cloud-message",permalink:"/docs/pushnotifications/firebase/firebase-cloud-message",draft:!1,tags:[],version:"current",frontMatter:{title:"Firebase Cloud Message",sidebar_label:"Firebase Cloud Message"},sidebar:"pushnotifications",previous:{title:"iOS APNS Message",permalink:"/docs/pushnotifications/apple/ios-apns-message"},next:{title:"Windows WNS Message",permalink:"/docs/pushnotifications/windows/windows-wns-message"}},c={},l=[{value:"PHP Example",id:"php-example",level:3}],p={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Sending a message with Firebase is very similar (if not exactly the same) as GCM apart from the endpoint. "),(0,r.kt)("p",null,"Firebase Cloud Messaging has a server-side APIs that you can call to send messages.\nSee ",(0,r.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/cloud-messaging/server"},"https://firebase.google.com/docs/cloud-messaging/server"),"."),(0,r.kt)("p",null,"Sending a message can be as simple as using curl to call a HTTP end-point.\nSee ",(0,r.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/cloud-messaging/server#implementing-http-connection-server-protocol"},"https://firebase.google.com/docs/cloud-messaging/server#implementing-http-connection-server-protocol")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'curl -X POST --header "Authorization: key=<API_ACCESS_KEY>" --Header "Content-Type: application/json" https://fcm.googleapis.com/fcm/send -d "{\\"to\\":\\"<YOUR_DEVICE_ID_TOKEN>\\",\\"notification\\":{\\"body\\":\\"Yellow\\"},\\"priority":10}"\n')),(0,r.kt)("h3",{id:"php-example"},"PHP Example"),(0,r.kt)("p",null,"Simple PHP script demonstrating the same:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$registrationId = \"YOUR_DEVICE_ID_TOKEN\";\n$apiKey = \"API_ACCESS_KEY\";\n\n$dataPayload = array(\n    'notification' => array(\n        'icon' => 'ic_utrofi_notification',\n        'alert' => \"ticker text 2\", \n        'title' => \"content title 2\", \n        'body' => \"body copy 2\",\n        'sound' => 'default'\n));\n\n$response = sendNotification( \n    $apiKey, \n    array($registrationId), \n    $dataPayload,\n    null\n);\necho $response;\n\n\n////////////////////////////////////////////////////////////////////////////////\n//  \n//\n\n/**\n * The following function will send a FCM notification using curl.\n * \n * @param $apiKey               [string]    The Browser API key string for your GCM account\n * @param $registrationIdsArray [array]     An array of registration ids to send this notification to\n * @param $messageData          [array]     An named array of data to send as the notification payload\n */\nfunction sendNotification( $apiKey, $registrationIdsArray, $customData, $notification  )\n{\n    $headers = array(\"Content-Type:\" . \"application/json\", \"Authorization:\" . \"key=\" . $apiKey);\n    $data = array(\n        'registration_ids' => $registrationIdsArray,\n    );\n    if ($customData != null)    $data['data'] = $customData;\n    if ($notification != null)  $data['notification'] = $notification;\n\n    $post = json_encode($data);\n    \n    print( $post );\n\n    $ch = curl_init();\n\n    curl_setopt( $ch, CURLOPT_HTTPHEADER, $headers ); \n    curl_setopt( $ch, CURLOPT_URL, \"https://fcm.googleapis.com/fcm/send\" );\n    curl_setopt( $ch, CURLOPT_SSL_VERIFYHOST, 0 );\n    curl_setopt( $ch, CURLOPT_SSL_VERIFYPEER, 0 );\n    curl_setopt( $ch, CURLOPT_RETURNTRANSFER, true );\n    curl_setopt( $ch, CURLOPT_POSTFIELDS, $post );\n\n    $response = curl_exec($ch);\n    curl_close($ch);\n\n    return $response;\n}\n\n\n")))}d.isMDXComponent=!0}}]);
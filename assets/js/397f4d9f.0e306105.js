"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[56201],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:function(e,t,n){n.d(t,{Z:function(){return l}});var a=n(67294),o=n(86010),r="tabItem_Ymn6";function l(e){var t=e.children,n=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,l),hidden:n},t)}},65488:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(87462),o=n(67294),r=n(86010),l=n(72389),i=n(67392),u=n(7094),s=n(12466),c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,n,l=e.lazy,d=e.block,m=e.defaultValue,f=e.values,g=e.groupId,b=e.className,v=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=f?f:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),k=(0,i.l)(y,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var h=null===m?m:null!=(t=null!=m?m:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:v[0].props.value;if(null!==h&&!y.some((function(e){return e.value===h})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var E=(0,u.U)(),T=E.tabGroupChoices,w=E.setTabGroupChoices,N=(0,o.useState)(h),A=N[0],O=N[1],x=[],D=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var I=T[g];null!=I&&I!==A&&y.some((function(e){return e.value===I}))&&O(I)}var C=function(e){var t=e.currentTarget,n=x.indexOf(t),a=y[n].value;a!==A&&(D(t),O(a),null!=g&&w(g,String(a)))},j=function(e){var t,n=null;switch(e.key){case"Enter":C(e);break;case"ArrowRight":var a,o=x.indexOf(e.currentTarget)+1;n=null!=(a=x[o])?a:x[0];break;case"ArrowLeft":var r,l=x.indexOf(e.currentTarget)-1;n=null!=(r=x[l])?r:x[x.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",c)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":d},b)},y.map((function(e){var t=e.value,n=e.label,l=e.attributes;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:A===t?0:-1,"aria-selected":A===t,key:t,ref:function(e){return x.push(e)},onKeyDown:j,onClick:C},l,{className:(0,r.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":A===t})}),null!=n?n:t)}))),l?(0,o.cloneElement)(v.filter((function(e){return e.props.value===A}))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},v.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==A})}))))}function m(e){var t=(0,l.Z)();return o.createElement(d,(0,a.Z)({key:String(t)},e))}},57353:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var a=n(87462),o=n(63366),r=(n(67294),n(3905)),l=n(65488),i=n(85162),u=["components"],s={title:"Automatic Logging",sidebar_label:"Automatic Logging"},c=void 0,p={unversionedId:"facebookapi/core/app-events/automatic-logging",id:"facebookapi/core/app-events/automatic-logging",title:"Automatic Logging",description:"When you use the Facebook SDK, certain events in your app are automatically logged and collected for Facebook Analytics unless you disable automatic event logging. These events are relevant for all use cases - targeting, measurement and optimization.",source:"@site/docs/facebookapi/core/app-events/automatic-logging.mdx",sourceDirName:"facebookapi/core/app-events",slug:"/facebookapi/core/app-events/automatic-logging",permalink:"/docs/facebookapi/core/app-events/automatic-logging",draft:!1,tags:[],version:"current",frontMatter:{title:"Automatic Logging",sidebar_label:"Automatic Logging"},sidebar:"facebookapi",previous:{title:"User Properties",permalink:"/docs/facebookapi/core/app-events/user-properties"},next:{title:"Logging",permalink:"/docs/facebookapi/core/app-events/logging"}},d={},m=[{value:"Disable Automatically Logged Events",id:"disable-automatically-logged-events",level:2},{value:"Disable Collection of Advertiser IDs",id:"disable-collection-of-advertiser-ids",level:2}],f={toc:m};function g(e){var t=e.components,n=(0,o.Z)(e,u);return(0,r.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When you use the Facebook SDK, certain events in your app are automatically logged and collected for Facebook Analytics unless you disable automatic event logging. These events are relevant for all use cases - targeting, measurement and optimization."),(0,r.kt)("h2",{id:"disable-automatically-logged-events"},"Disable Automatically Logged Events"),(0,r.kt)("p",null,"To disable automatic logging you must add certain fields to the manifest and info additions in your application descriptor."),(0,r.kt)(l.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"apm",mdxType:"TabItem"},(0,r.kt)("p",null,"This value is set by configuration parameters in your project configuration. You most likely set this value initially when you ran through the extension configuration, but this will allow you to change it easily."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apm project config set facebookAutoLogAppEventsEnabled true\n")),(0,r.kt)("p",null,"Once you have added this configuration run the steps to update / generate your ",(0,r.kt)("a",{parentName:"p",href:"/docs/facebookapi/core/add-the-extension#application-descriptor"},"application descriptor"),". This will apply to both iOS and Android.")),(0,r.kt)(i.Z,{value:"manual",mdxType:"TabItem"},(0,r.kt)("p",null,"For Android add the following line to your manifest additions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<meta-data android:name="com.facebook.sdk.AutoLogAppEventsEnabled"\n           android:value="false"/>\n')),(0,r.kt)("p",null,"This must be added inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"application")," node of your manifest additions."),(0,r.kt)("p",null,"For iOS add the following to your info additions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<key>FacebookAutoLogAppEventsEnabled</key>\n<false/>\n")))),(0,r.kt)("p",null,"In some cases, you want to only delay the collection of automatically logged events, such as to obtain User consent or fulfill legal obligations. In this case disable the automatic logging as above and then once you have been provided consent call the ",(0,r.kt)("inlineCode",{parentName:"p"},"setAutoLogAppEventsEnabled()")," function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"Facebook.instance.setAutoLogAppEventsEnabled( true );\n")),(0,r.kt)("p",null,"Similarly to suspend collection again for any reasons:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"Facebook.instance.setAutoLogAppEventsEnabled( false );\n")),(0,r.kt)("h2",{id:"disable-collection-of-advertiser-ids"},"Disable Collection of Advertiser IDs"),(0,r.kt)("p",null,"To disable collection of the advertiser id, you must add certain fields to the manifest and info additions in your application descriptor."),(0,r.kt)(l.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"apm",mdxType:"TabItem"},(0,r.kt)("p",null,"This value is set by configuration parameters in your project configuration. You most likely set this value initially when you ran through the extension configuration, but this will allow you to change it easily."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apm project config set facebookAdvertiserIDCollectionEnabled true\n")),(0,r.kt)("p",null,"Once you have added this configuration run the steps to update / generate your ",(0,r.kt)("a",{parentName:"p",href:"/docs/facebookapi/core/add-the-extension#application-descriptor"},"application descriptor"),".")),(0,r.kt)(i.Z,{value:"manual",mdxType:"TabItem"},(0,r.kt)("p",null,"For Android add the following line to your manifest additions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<meta-data android:name="com.facebook.sdk.AdvertiserIDCollectionEnabled"\n           android:value="false"/>\n')),(0,r.kt)("p",null,"This must be added inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"application")," node of your manifest additions."),(0,r.kt)("p",null,"For iOS add the following to your info additions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<key>FacebookAdvertiserIDCollectionEnabled</key>\n<false/>\n")))),(0,r.kt)("p",null,"In some cases, you want to delay the collection of the advertiser id, such as to obtain User consent or fulfill legal obligations, instead of disabling it.\nIn this case disable the collection of the advertiser id as above and then once you have been provided consent call the ",(0,r.kt)("inlineCode",{parentName:"p"},"setAdvertiserIDCollectionEnabled")," function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"Facebook.instance.setAdvertiserIDCollectionEnabled( true );\n")),(0,r.kt)("p",null,"Similarly to suspend collection again for any reasons:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"Facebook.instance.setAdvertiserIDCollectionEnabled( false );\n")))}g.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[38218],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return p}});var i=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=i.createContext({}),c=function(e){var n=i.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},l=function(e){var n=c(e.components);return i.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(t),p=o,h=m["".concat(d,".").concat(p)]||m[p]||u[p]||a;return t?i.createElement(h,r(r({ref:n},l),{},{components:t})):i.createElement(h,r({ref:n},l))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,r=new Array(a);r[0]=m;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var c=2;c<a;c++)r[c]=t[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},70682:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return r},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var i=t(87462),o=t(63366),a=(t(67294),t(3905)),r={title:"Auth - Add the extensions",sidebar_label:"Add the extensions"},s=void 0,d={unversionedId:"firebase/auth/add-the-extensions",id:"firebase/auth/add-the-extensions",isDocsHomePage:!1,title:"Auth - Add the extensions",description:"Required Extensions",source:"@site/docs/firebase/auth/add-the-extensions.md",sourceDirName:"firebase/auth",slug:"/firebase/auth/add-the-extensions",permalink:"/docs/firebase/auth/add-the-extensions",tags:[],version:"current",frontMatter:{title:"Auth - Add the extensions",sidebar_label:"Add the extensions"},sidebar:"firebase",previous:{title:"Introduction",permalink:"/docs/firebase/auth/introduction"},next:{title:"Initialise",permalink:"/docs/firebase/auth/initialise"}},c=[{value:"Required Extensions",id:"required-extensions",children:[{value:"Firebase Auth",id:"firebase-auth",children:[]}]},{value:"Extension IDs",id:"extension-ids",children:[]},{value:"Android Manifest Additions",id:"android-manifest-additions",children:[]},{value:"iOS Info Additions",id:"ios-info-additions",children:[]}],l={toc:c};function u(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,i.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"required-extensions"},"Required Extensions"),(0,a.kt)("p",null,"You should have been through the setup of the Firebase Core before attempting to proceed with Authentication."),(0,a.kt)("p",null,"Make sure you have added all the extensions required for the Firebase Core extension as outlined ",(0,a.kt)("a",{parentName:"p",href:"../core/add-the-extensions"},"here"),"."),(0,a.kt)("h3",{id:"firebase-auth"},"Firebase Auth"),(0,a.kt)("p",null,"The only required additional ANE is the Auth ANE located in this repository:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-Firebase/raw/master/lib/com.distriqt.firebase.Auth.ane"},(0,a.kt)("inlineCode",{parentName:"a"},"com.distriqt.firebase.Auth")))),(0,a.kt)("p",null,"This ANE contains all the required libraries for the main Firebase authentication functionality,\nhowever some of the authentication providers (such as Facebook and Google) may require additional\nextensions. We list these in the documentation in each of the specific providers so you only\ninclude the required extensions for your situation."),(0,a.kt)("p",null,"You can access all the Firebase extensions here: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-Firebase"},"https://github.com/distriqt/ANE-Firebase"),"."),(0,a.kt)("h2",{id:"extension-ids"},"Extension IDs"),(0,a.kt)("p",null,"The following should be added to your ",(0,a.kt)("inlineCode",{parentName:"p"},"extensions")," node in your application descriptor to identify all the required ANEs in your application:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<extensions>\n    <extensionID>com.distriqt.Core</extensionID>\n    <extensionID>com.distriqt.playservices.Base</extensionID>\n    <extensionID>com.distriqt.playservices.AdsIdentifier</extensionID>\n\n    <extensionID>com.google.protobuflite</extensionID>\n    <extensionID>com.google.firebase.core</extensionID>\n    <extensionID>androidx.appcompat</extensionID>\n    <extensionID>androidx.core</extensionID>\n    <extensionID>androidx.multidex</extensionID>\n\n    <extensionID>com.distriqt.Firebase</extensionID>\n    <extensionID>com.distriqt.firebase.Auth</extensionID>\n\n    <extensionID>com.distriqt.CustomResources</extensionID>\n</extensions>\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"android-manifest-additions"},"Android Manifest Additions"),(0,a.kt)("p",null,"There are some small additions required to the manifest for Firebase Auth."),(0,a.kt)("p",null,"Firstly add the following activity to the application node in the manifest additions:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- FIREBASE AUTH --\x3e\n<activity\n    android:name="com.google.firebase.auth.internal.GenericIdpActivity"\n    android:excludeFromRecents="true"\n    android:exported="true"\n    android:launchMode="singleTask"\n    android:theme="@android:style/Theme.Translucent.NoTitleBar" >\n    <intent-filter>\n        <action android:name="android.intent.action.VIEW" />\n\n        <category android:name="android.intent.category.DEFAULT" />\n        <category android:name="android.intent.category.BROWSABLE" />\n\n        <data\n            android:host="firebase.auth"\n            android:path="/"\n            android:scheme="genericidp" />\n    </intent-filter>\n</activity>\n<activity\n    android:name="com.google.firebase.auth.internal.RecaptchaActivity"\n    android:excludeFromRecents="true"\n    android:exported="true"\n    android:launchMode="singleTask"\n    android:theme="@android:style/Theme.Translucent.NoTitleBar" >\n    <intent-filter>\n        <action android:name="android.intent.action.VIEW" />\n        <category android:name="android.intent.category.DEFAULT" />\n        <category android:name="android.intent.category.BROWSABLE" />\n        <data\n            android:host="firebase.auth"\n            android:path="/"\n            android:scheme="recaptcha" />\n    </intent-filter>\n</activity>\n<service\n    android:name="com.google.firebase.auth.api.fallback.service.FirebaseAuthFallbackService"\n    android:enabled="true"\n    android:exported="false" >\n    <intent-filter>\n        <action android:name="com.google.firebase.auth.api.gms.service.START" />\n        <category android:name="android.intent.category.DEFAULT" />\n    </intent-filter>\n</service>\n')),(0,a.kt)("p",null,"Then locate the ",(0,a.kt)("inlineCode",{parentName:"p"},"ComponentDiscoveryService")," service you added as part of the core Firebase manfiest additions and add the following meta data tag:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<meta-data\n    android:name="com.google.firebase.components:com.google.firebase.auth.FirebaseAuthRegistrar"\n    android:value="com.google.firebase.components.ComponentRegistrar" />\n')),(0,a.kt)("p",null,"It should now appear like the following at a minimum (it may have other meta-data tags from other components):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<service android:name="com.google.firebase.components.ComponentDiscoveryService" \n        android:directBootAware="true"\n        android:exported="false">\n    <meta-data\n        android:name="com.google.firebase.components:com.google.firebase.auth.FirebaseAuthRegistrar"\n        android:value="com.google.firebase.components.ComponentRegistrar" />\n\n    <meta-data\n        android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar"\n        android:value="com.google.firebase.components.ComponentRegistrar" />\n    <meta-data\n        android:name="com.google.firebase.components:com.google.firebase.installations.FirebaseInstallationsRegistrar"\n        android:value="com.google.firebase.components.ComponentRegistrar" />\n    <meta-data\n        android:name="com.google.firebase.components:com.google.firebase.dynamicloading.DynamicLoadingRegistrar"\n        android:value="com.google.firebase.components.ComponentRegistrar" />\n</service>\n')),(0,a.kt)("h2",{id:"ios-info-additions"},"iOS Info Additions"),(0,a.kt)("p",null,"No additional additions are required. There is an exception with Phone Authentication\nand the details of these additions are in the documentation for that method."))}u.isMDXComponent=!0}}]);
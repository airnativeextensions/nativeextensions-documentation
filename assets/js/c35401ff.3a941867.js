"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[80887],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=i,y=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(y,a(a({ref:t},p),{},{components:n})):r.createElement(y,a({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},86481:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var r=n(83117),i=n(80102),o=(n(67294),n(3905)),a=["components"],s={title:"Proximity",sidebar_label:"Proximity"},l=void 0,c={unversionedId:"sensormanager/proximity",id:"sensormanager/proximity",title:"Proximity",description:"The proximity sensor is a sensor that lets you determine how close the face of a device is to an object (known as the proximity sensor). Most commonly this is used to detect if the user is holding the device to their face (eg during a phone call) so that the device can deactivate the screen and controls.",source:"@site/docs/sensormanager/proximity.md",sourceDirName:"sensormanager",slug:"/sensormanager/proximity",permalink:"/docs/sensormanager/proximity",draft:!1,tags:[],version:"current",frontMatter:{title:"Proximity",sidebar_label:"Proximity"},sidebar:"sensormanager",previous:{title:"Add the Extension",permalink:"/docs/sensormanager/add-the-extension"},next:{title:"changelog",permalink:"/docs/sensormanager/changelog"}},p={},m=[{value:"Monitoring Proximity",id:"monitoring-proximity",level:2},{value:"Stop Monitoring",id:"stop-monitoring",level:2}],u={toc:m};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The proximity sensor is a sensor that lets you determine how close the face of a device is to an object (known as the proximity sensor). Most commonly this is used to detect if the user is holding the device to their face (eg during a phone call) so that the device can deactivate the screen and controls."),(0,o.kt)("p",null,"The proximity sensor is accessed through the ",(0,o.kt)("inlineCode",{parentName:"p"},"proximity")," property on the ",(0,o.kt)("inlineCode",{parentName:"p"},"SensorManager")," singleton:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"SensorManager.service.proximity \n")),(0,o.kt)("p",null,"This object dispatches events and provides the interface for you to access the proximity sensor."),(0,o.kt)("h2",{id:"monitoring-proximity"},"Monitoring Proximity"),(0,o.kt)("p",null,"In order to start monitoring proximity you need to call ",(0,o.kt)("inlineCode",{parentName:"p"},"startMonitoring()"),". This function will initiate proximity detection."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"SensorManager.service.proximity.startMonitoring();\n")),(0,o.kt)("p",null,"After this has been called ",(0,o.kt)("inlineCode",{parentName:"p"},"ProximityEvent.CHANGED")," events will be dispatched whenever the proximity state changes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'SensorManager.service.proximity.addEventListener( ProximityEvent.CHANGED, proximity_changedHandler );\n\n\nfunction proximity_changedHandler( event:ProximityEvent ):void\n{\n    trace( "proximity changed: " + event.state );\n}\n')),(0,o.kt)("p",null,"You can also directly access the current state at any time using the ",(0,o.kt)("inlineCode",{parentName:"p"},"proximityState")," property:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"var state:String = SensorManager.service.proximity.proximityState;\n")),(0,o.kt)("p",null,"The values of the proximity state are definded in the ",(0,o.kt)("inlineCode",{parentName:"p"},"ProximityState")," class:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ProximityState.UNKNOWN"),": The state has yet to be determined or is unavailable;"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ProximityState.NEAR"),": The user is near to the device;"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ProximityState.FAR"),": The user is far from the device;")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},'On iOS the screen will be automatically dimmed when the proximity sensor is enabled and the proximity state is determined to be "near" (close to the user).')),(0,o.kt)("h2",{id:"stop-monitoring"},"Stop Monitoring"),(0,o.kt)("p",null,"To stop proximity monitoring you call the ",(0,o.kt)("inlineCode",{parentName:"p"},"stopMonitoring()")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"SensorManager.service.proximity.startMonitoring();\n")),(0,o.kt)("p",null,"After calling this the proximity state will be invalid."),(0,o.kt)("p",null,"You should also remove any proximity event listeners you may have added."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"SensorManager.service.proximity.removeEventListener( ProximityEvent.CHANGED, proximity_changedHandler );\n")))}d.isMDXComponent=!0}}]);
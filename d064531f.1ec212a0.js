(window.webpackJsonp=window.webpackJsonp||[]).push([[607],{662:function(e,n,o){"use strict";o.r(n),o.d(n,"frontMatter",(function(){return a})),o.d(n,"metadata",(function(){return r})),o.d(n,"rightToc",(function(){return s})),o.d(n,"default",(function(){return l}));var t=o(2),i=(o(0),o(812));const a={title:"Facebook Login",sidebar_label:"Facebook Login"},r={unversionedId:"facebookapi/login/facebook-login",id:"facebookapi/login/facebook-login",isDocsHomePage:!1,title:"Facebook Login",description:"In order to log a user in you will be calling the logInWithReadPermissions() function and awaiting a login event. This function takes an array of Facebook permission strings as the parameter.",source:"@site/docs/facebookapi/login/facebook-login.md",slug:"/facebookapi/login/facebook-login",permalink:"/docs/facebookapi/login/facebook-login",version:"current",sidebar_label:"Facebook Login",sidebar:"facebookapi",previous:{title:"Add the Extension",permalink:"/docs/facebookapi/login/add-the-extension"},next:{title:"Access Token",permalink:"/docs/facebookapi/login/access-token"}},s=[{value:"Events",id:"events",children:[]},{value:"Existing Login",id:"existing-login",children:[]},{value:"Logout",id:"logout",children:[]},{value:"Permissions",id:"permissions",children:[{value:"When to ask for Permissions",id:"when-to-ask-for-permissions",children:[]},{value:"Revoked Permissions",id:"revoked-permissions",children:[]},{value:"Request More Permissions",id:"request-more-permissions",children:[]}]},{value:"Profile",id:"profile",children:[]}],c={rightToc:s};function l({components:e,...n}){return Object(i.b)("wrapper",Object(t.a)({},c,n,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,"In order to log a user in you will be calling the ",Object(i.b)("inlineCode",{parentName:"p"},"logInWithReadPermissions()")," function and awaiting a login event. This function takes an array of Facebook permission strings as the parameter."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),'if (FacebookLogin.isSupported)\n{\n    FacebookLogin.instance.logInWithReadPermissions( [ "public_profile", "email" ] );\n}\n')),Object(i.b)("p",null,"For the prefined permissions you can see the constants defined in the ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://docs.airnativeextensions.com/asdocs/facebookapi/com/distriqt/extension/facebook/login/FacebookPermissions.html"}),Object(i.b)("inlineCode",{parentName:"a"},"FacebookPermissions")," class"),"."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"As of April 24,2018, the ",Object(i.b)("inlineCode",{parentName:"p"},"pubish_actions")," permission has been removed. Please see the ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://developers.facebook.com/docs/graph-api/changelog/breaking-changes#login-4-24"}),"Breaking Changes Changelog")," for more details. To provide a way for your app users to share content to Facebook, you should use Facebook's ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"../share/overview"}),"Sharing products")," instead.")),Object(i.b)("h2",{id:"events"},"Events"),Object(i.b)("p",null,"After calling ",Object(i.b)("inlineCode",{parentName:"p"},"logInWithReadPermissions()")," one of the following events will be dispatched:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"FacebookLoginEvent.SUCCESS"),": The login was successful and the user is now logged in; "),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"FacebookLoginEvent.CANCEL"),": The user cancelled the login process;"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"FacebookLoginErrorEvent.ERROR"),": There was an error during login, check the event properties for details.")),Object(i.b)("p",null,"When the user is successully logged in you will have access to the access token and to the requested user details (profile, email etc)."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"FacebookLoginEvent")," class on success contains:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"accessToken"),": An instance of ",Object(i.b)("inlineCode",{parentName:"li"},"AccessToken")," containing details about the token"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"profile"),": An instance of ",Object(i.b)("inlineCode",{parentName:"li"},"Profile")," containing details about the current user")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"profile")," may be ",Object(i.b)("inlineCode",{parentName:"p"},"null")," if the profile information hasn't been retrieved or requested yet. Both will be ",Object(i.b)("inlineCode",{parentName:"p"},"null")," for a cancel event."),Object(i.b)("p",null,"For example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),'FacebookLogin.instance.addEventListener( FacebookLoginEvent.SUCCESS, successHandler );\nFacebookLogin.instance.addEventListener( FacebookLoginEvent.CANCEL, cancelHandler );\nFacebookLogin.instance.addEventListener( FacebookLoginErrorEvent.ERROR, errorHandler );\n\nFacebookLogin.instance.logInWithReadPermissions( [ "public_profile", "email" ] );\n\n\nfunction successHandler( event:FacebookLoginEvent ):void\n{\n    trace( "successHandler()" );\n    // You can now access the user\n}\n\nfunction cancelHandler( event:FacebookLoginEvent ):void\n{\n    trace( "cancelHandler()" );\n}\n\nfunction errorHandler( event:FacebookLoginErrorEvent ):void\n{\n    trace( "errorHandler() code :    " + event.errorID  );\n    trace( "errorHandler() message : " + event.text  );\n}\n')),Object(i.b)("h2",{id:"existing-login"},"Existing Login"),Object(i.b)("p",null,"You can check if your user is already logged in by calling the ",Object(i.b)("inlineCode",{parentName:"p"},"isLoggedIn()")," function. This will return ",Object(i.b)("inlineCode",{parentName:"p"},"true")," if your user is already logged in."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"if (FacebookLogin.instance.isLoggedIn())\n{\n    // User logged in\n}\n")),Object(i.b)("p",null,"You can also check for a valid access token, as this will only be available if the user is logged in:"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"var accessToken:AccessToken = FacebookLogin.instance.getAccessToken();\nif (accessToken != null)\n{\n    // User logged in\n}\n")),Object(i.b)("h2",{id:"logout"},"Logout"),Object(i.b)("p",null,"To logout the current user call the ",Object(i.b)("inlineCode",{parentName:"p"},"logout()")," function."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"FacebookLogin.instance.logout();\n")),Object(i.b)("h2",{id:"permissions"},"Permissions"),Object(i.b)("p",null,"When a person logs into your app via Facebook Login you can access a subset of that person's data stored on Facebook. Permissions are how you ask someone if you can access that data. A person's privacy settings combined with what you ask for will determine what you can access."),Object(i.b)("p",null,"Permissions are strings that are passed along with a login request or an API call. Here are two examples of permissions:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"email")," - Access to a person's primary email address."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"user_likes")," - Access to the list of things a person likes.")),Object(i.b)("p",null,"You can get the list of granted and denied permissions at any time by using the current ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"access-token"}),Object(i.b)("inlineCode",{parentName:"a"},"AccessToken")),"."),Object(i.b)("h3",{id:"when-to-ask-for-permissions"},"When to ask for Permissions"),Object(i.b)("p",null,"During basic login, your app receives access to a person's public profile. To access additional profile information or to publish content to Facebook on their behalf, you need to request additional permissions, see ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://developers.facebook.com/docs/facebook-login/permissions/"}),"Permissions with Facebook Login"),"."),Object(i.b)("p",null,"Your app should manage permissions as follows:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Graph API Requests - Before you send Graph API requests, you should check for necessary permissions and request them if needed.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Missing and Revoked Permissions - Your app needs to deal with missing or revoked permissions errors from Facebook such as by asking for permissions and retrying. See Error-Handling, iOS SDK.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Timing Requests - You will get better conversion if you ask for permissions only when they are needed and provide functionality without requiring all permissions."))),Object(i.b)("p",null,"Permissions only need to be granted once per app, i.e. permissions granted on one platform are effectively granted on all the platforms your app supports."),Object(i.b)("h3",{id:"revoked-permissions"},"Revoked Permissions"),Object(i.b)("p",null,"People can also revoke permissions granted to your app in Facebook's interface at any time after they have logged in. It is important that your app regularly checks which permissions have been granted, especially when launching on a new platform. We provide methods for you to check what permissions are currently\ngranted to your app."),Object(i.b)("h3",{id:"request-more-permissions"},"Request More Permissions"),Object(i.b)("p",null,"Use ",Object(i.b)("inlineCode",{parentName:"p"},"FacebookLogin")," to request additional permissions or request previously declined permissions using the same ",Object(i.b)("inlineCode",{parentName:"p"},"logInWithReadPermission()")," method. The SDK will see it's a re-request by the availability of the permissions in the current access token."),Object(i.b)("h2",{id:"profile"},"Profile"),Object(i.b)("p",null,"Once the user is logged in you can get the user's details through the ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"http://docs.airnativeextensions.com/asdocs/facebookapi/com/distriqt/extension/facebook/login/Profile.html"}),Object(i.b)("inlineCode",{parentName:"a"},"Profile"))," (assuming you requested profile read permissions). "),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"var profile:Profile = FacebookLogin.instance.getProfile();\nif (profile != null)\n{\n    trace( profile.name );\n}\n")),Object(i.b)("p",null,"The ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"http://docs.airnativeextensions.com/asdocs/facebookapi/com/distriqt/extension/facebook/login/Profile.html"}),Object(i.b)("inlineCode",{parentName:"a"},"Profile"))," contains information about the user such as ",Object(i.b)("inlineCode",{parentName:"p"},"firstName"),", ",Object(i.b)("inlineCode",{parentName:"p"},"lastName"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"pictureUrl"),"."))}l.isMDXComponent=!0},812:function(e,n,o){"use strict";o.d(n,"a",(function(){return p})),o.d(n,"b",(function(){return m}));var t=o(0),i=o.n(t);function a(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function r(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function s(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?r(Object(o),!0).forEach((function(n){a(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function c(e,n){if(null==e)return{};var o,t,i=function(e,n){if(null==e)return{};var o,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(i[o]=e[o]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}var l=i.a.createContext({}),b=function(e){var n=i.a.useContext(l),o=n;return e&&(o="function"==typeof e?e(n):s(s({},n),e)),o},p=function(e){var n=b(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},d=i.a.forwardRef((function(e,n){var o=e.components,t=e.mdxType,a=e.originalType,r=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=b(o),d=t,m=p["".concat(r,".").concat(d)]||p[d]||u[d]||a;return o?i.a.createElement(m,s(s({ref:n},l),{},{components:o})):i.a.createElement(m,s({ref:n},l))}));function m(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=o.length,r=new Array(a);r[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:t,r[1]=s;for(var l=2;l<a;l++)r[l]=o[l];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,o)}d.displayName="MDXCreateElement"}}]);
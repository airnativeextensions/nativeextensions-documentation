"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[28993],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>m});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),p=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),u=r,m=d["".concat(s,".").concat(u)]||d[u]||y[u]||i;return a?t.createElement(m,l(l({ref:n},c),{},{components:a})):t.createElement(m,l({ref:n},c))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},62149:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>y,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var t=a(87462),r=(a(67294),a(3905));const i={title:"Migrating from version 1",sidebar_label:"Migrating from version 1"},l=void 0,o={unversionedId:"mediaplayer/migrating-from-version-1",id:"mediaplayer/migrating-from-version-1",title:"Migrating from version 1",description:"Version 2 completely changes the way media players are created and displayed. Migration is simple as laid out below.",source:"@site/docs/mediaplayer/migrating-from-version-1.md",sourceDirName:"mediaplayer",slug:"/mediaplayer/migrating-from-version-1",permalink:"/docs/mediaplayer/migrating-from-version-1",draft:!1,tags:[],version:"current",frontMatter:{title:"Migrating from version 1",sidebar_label:"Migrating from version 1"},sidebar:"mediaplayer",previous:{title:"Migrating to AndroidX",permalink:"/docs/mediaplayer/migrating-to-androidx"},next:{title:"changelog",permalink:"/docs/mediaplayer/changelog"}},s={},p=[{value:"Dependencies",id:"dependencies",level:2},{value:"Creating a Player",id:"creating-a-player",level:2},{value:"Events",id:"events",level:2},{value:"Control",id:"control",level:2},{value:"Resize",id:"resize",level:2},{value:"Destroying the player",id:"destroying-the-player",level:2}],c={toc:p},d="wrapper";function y(e){let{components:n,...a}=e;return(0,r.kt)(d,(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Version 2 completely changes the way media players are created and displayed. Migration is simple as laid out below. "),(0,r.kt)("p",null,"The major difference is that you now will create an ",(0,r.kt)("inlineCode",{parentName:"p"},"MediaPlayerView")," instance and use this to configure, load and control media playback. Whereas you used to only have access to a single player, you can now create multiple and use as required. This means that you will need to hold onto an instance of your ",(0,r.kt)("inlineCode",{parentName:"p"},"MediaPlayerView")," to set properties, listen for events, load, and control media playback."),(0,r.kt)("h2",{id:"dependencies"},"Dependencies"),(0,r.kt)("p",null,"There are new ANE dependencies with version 2. In particular the Android support libraries are now required. Check the details in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/mediaplayer/add-the-extension"},"Add the Extension")," section."),(0,r.kt)("h2",{id:"creating-a-player"},"Creating a Player"),(0,r.kt)("p",null,"Previously there was only one instance of a player handled internally to the ANE. You now have to retrieve a reference to a player and hold onto a reference, by changing any calls to ",(0,r.kt)("inlineCode",{parentName:"p"},"createPlayer")," to the new ",(0,r.kt)("inlineCode",{parentName:"p"},"createPlayerView"),"."),(0,r.kt)("p",null,"So the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var path:String = "...";\nvar view:Rectangle = new Rectangle( 0, 0, stage.stageWidth, 480 );\n\nMediaPlayer.service.createPlayer(\n        path,\n        view.x,\n        view.y,\n        view.width,\n        view.height,\n        false,\n        MediaPlayer.CONTROLS_NONE,\n        false \n);\n')),(0,r.kt)("p",null,"becomes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var path:String = "...";\nvar view:Rectangle = new Rectangle( 0, 0, stage.stageWidth, 480 );\n\nvar player:MediaPlayerView = MediaPlayer.service.createPlayerView(\n        new MediaPlayerOptions()\n            .setViewport( view )\n            .showControls( false )\n);\nplayer.load( path );\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: we have separated the loading call (",(0,r.kt)("inlineCode",{parentName:"p"},"load()"),") from the creation (",(0,r.kt)("inlineCode",{parentName:"p"},"createPlayerView()"),"). This means you no longer need to pass the path when creating a player. However you can call load immediately if you wish initialise your player with media.")),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("p",null,"Events are now dispatched by the ",(0,r.kt)("inlineCode",{parentName:"p"},"MediaPlayerView")," instance rather than from the extension ",(0,r.kt)("inlineCode",{parentName:"p"},"service"),"."),(0,r.kt)("p",null,"So for example the following events listeners:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"MediaPlayer.service.addEventListener( MediaPlayerEvent.COMPLETE, completeHandler );\nMediaPlayer.service.addEventListener( MediaProgressEvent.PROGRESS, progressHandler );\nMediaPlayer.service.addEventListener( MediaErrorEvent.ERROR, errorHandler );\n")),(0,r.kt)("p",null,"should now be attached to your ",(0,r.kt)("inlineCode",{parentName:"p"},"player")," instance:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"player.addEventListener( MediaPlayerEvent.COMPLETE, completeHandler );\nplayer.addEventListener( MediaProgressEvent.PROGRESS, progressHandler );\nplayer.addEventListener( MediaErrorEvent.ERROR, errorHandler );\n")),(0,r.kt)("h2",{id:"control"},"Control"),(0,r.kt)("p",null,"Playback control is now controlled through the ",(0,r.kt)("inlineCode",{parentName:"p"},"player")," instance. "),(0,r.kt)("p",null,"To start playback of your video:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"MediaPlayer.service.play();\n")),(0,r.kt)("p",null,"becomes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"player.play();\n")),(0,r.kt)("p",null,"Similarly for the other playback controls such as:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pause()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stop()"))),(0,r.kt)("h2",{id:"resize"},"Resize"),(0,r.kt)("p",null,"Player resizing is now done with the ",(0,r.kt)("inlineCode",{parentName:"p"},"resize")," function on the player."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"MediaPlayer.service.resize( 0, 0, stage.stageWidth, 500 );\n")),(0,r.kt)("p",null,"Becomes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"player.resize( 0, 0, stage.stageWidth, 500 );\n")),(0,r.kt)("h2",{id:"destroying-the-player"},"Destroying the player"),(0,r.kt)("p",null,"Previously calling ",(0,r.kt)("inlineCode",{parentName:"p"},"removePlayer()")," would remove and destroy the player. This is now changed to the clearer ",(0,r.kt)("inlineCode",{parentName:"p"},"destroy()")," function on the player instance."),(0,r.kt)("p",null,"So"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"MediaPlayer.service.removePlayer();\n")),(0,r.kt)("p",null,"becomes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"player.destroy();\n")),(0,r.kt)("p",null,"After you call ",(0,r.kt)("inlineCode",{parentName:"p"},"destroy()")," on a player instance the player will no longer function. You should remove all event listeners and clear any references to this object. If you need to use a player again, then you'll need to call ",(0,r.kt)("inlineCode",{parentName:"p"},"createPlayerView()")," again to create a new player instance."))}y.isMDXComponent=!0}}]);
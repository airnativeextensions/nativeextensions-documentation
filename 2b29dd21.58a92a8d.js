(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{190:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return o})),t.d(r,"metadata",(function(){return c})),t.d(r,"rightToc",(function(){return l})),t.d(r,"default",(function(){return d}));var n=t(2),a=t(6),i=(t(0),t(850)),o={title:"Firestore - Order and limit data",sidebar_label:"Order and limit data"},c={unversionedId:"firebase/firestore/order-and-limit-data",id:"firebase/firestore/order-and-limit-data",isDocsHomePage:!1,title:"Firestore - Order and limit data",description:"Cloud Firestore provides powerful query functionality for specifying which documents you want to retrieve from a collection. These queries can also be used with either query() or addSnapshotListener(), as described in Get Data.",source:"@site/docs/firebase/firestore/order-and-limit-data.md",slug:"/firebase/firestore/order-and-limit-data",permalink:"/docs/firebase/firestore/order-and-limit-data",version:"current",sidebar_label:"Order and limit data",sidebar:"firebase",previous:{title:"Firestore - Perform simple and compound queries",permalink:"/docs/firebase/firestore/perform-simple-and-compound-queries"},next:{title:"Firestore - Paginate data with query cursors",permalink:"/docs/firebase/firestore/paginate-data-with-query-cursors"}},l=[{value:"Order and limit data",id:"order-and-limit-data",children:[]}],s={rightToc:l};function d(e){var r=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,t,{components:r,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Cloud Firestore provides powerful query functionality for specifying which documents you want to retrieve from a collection. These queries can also be used with either ",Object(i.b)("inlineCode",{parentName:"p"},"query()")," or ",Object(i.b)("inlineCode",{parentName:"p"},"addSnapshotListener()"),", as described in ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"get-data"}),"Get Data"),"."),Object(i.b)("h2",{id:"order-and-limit-data"},"Order and limit data"),Object(i.b)("p",null,"By default, a query retrieves all documents that satisfy the query in ascending order by document ID. You can specify the sort order for your data using ",Object(i.b)("inlineCode",{parentName:"p"},"orderBy()"),", and you can limit the number of documents retrieved using ",Object(i.b)("inlineCode",{parentName:"p"},"limit()"),"."),Object(i.b)("p",null,"For example, you could query for the first 3 cities alphabetically with:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),'var query:Query = citiesRef.orderBy("name").limit(3);\n')),Object(i.b)("p",null,"You could also sort in descending order to get the last 3 cities:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),'var query:Query = citiesRef.orderBy( "name", QueryDirection.DESCENDING ).limit(3);\n')),Object(i.b)("p",null,"You can also order by multiple fields. For example, if you wanted to order by state, and within each state order by population in descending order:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),'var query:Query = citiesRef.orderBy("state").orderBy("population", QueryDirection.DESCENDING);\n')),Object(i.b)("p",null,"You can combine where() filters with orderBy() and limit(). In the following example, the queries define a population threshold, sort by population in ascending order, and return only the first few results that exceed the threshold:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),'citiesRef.whereGreaterThan("population", 100000).orderBy("population").limit(2);\n')),Object(i.b)("p",null,"However, if you have a filter with a range comparison (<, <=, >, >=), your first ordering must be on the same field:"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Valid"),": Range filter and orderBy on the same field"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),'citiesRef.whereGreaterThan("population", 100000).orderBy("population");\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Invalid"),": Range filter and first orderBy on different fields"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),'citiesRef.whereGreaterThan("population", 100000).orderBy("country");\n')))}d.isMDXComponent=!0},850:function(e,r,t){"use strict";t.d(r,"a",(function(){return u})),t.d(r,"b",(function(){return f}));var n=t(0),a=t.n(n);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),d=function(e){var r=a.a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},u=function(e){var r=d(e.components);return a.a.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},b=a.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(t),b=n,f=u["".concat(o,".").concat(b)]||u[b]||p[b]||i;return t?a.a.createElement(f,c(c({ref:r},s),{},{components:t})):a.a.createElement(f,c({ref:r},s))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=b;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);
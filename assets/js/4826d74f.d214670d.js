"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[26302],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(r),m=o,y=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(y,i(i({ref:t},c),{},{components:r})):n.createElement(y,i({ref:t},c))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},22283:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const a={title:"Google Maps",sidebar_label:"Google Maps"},i=void 0,l={unversionedId:"nativemaps/google-maps",id:"nativemaps/google-maps",title:"Google Maps",description:"Add Your Application to the Developer Console",source:"@site/docs/nativemaps/google-maps.md",sourceDirName:"nativemaps",slug:"/nativemaps/google-maps",permalink:"/docs/nativemaps/google-maps",draft:!1,tags:[],version:"current",frontMatter:{title:"Google Maps",sidebar_label:"Google Maps"},sidebar:"nativemaps",previous:{title:"Apple Maps",permalink:"/docs/nativemaps/apple-maps"},next:{title:"Add the Extension",permalink:"/docs/nativemaps/add-the-extension"}},p={},s=[{value:"Add Your Application to the Developer Console",id:"add-your-application-to-the-developer-console",level:2},{value:"Restricting the API Key",id:"restricting-the-api-key",level:2}],c={toc:s},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"add-your-application-to-the-developer-console"},"Add Your Application to the Developer Console"),(0,o.kt)("p",null,"Your application needs an API key to access the Google Maps servers.\nThe type of key you need is an API key with restriction for Android apps.\nThe key is free. You can use it with any of your applications that call the\nGoogle Maps Android API, and it supports an unlimited number of users."),(0,o.kt)("p",null,"The Google Play Developer Console is where you enable the various Google APIs for your application."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://console.developers.google.com"},"https://console.developers.google.com")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Select your project for your application or create a new project"),(0,o.kt)("li",{parentName:"ul"},"Enable the API",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Select Library: A list of available APIs will be shown"),(0,o.kt)("li",{parentName:"ul"},'Select "Google Maps Android API" '),(0,o.kt)("li",{parentName:"ul"},"Click Enable"))),(0,o.kt)("li",{parentName:"ul"},"Create Credentials",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Select Credentials"),(0,o.kt)("li",{parentName:"ul"},'Click "Create credentials" and select "API key"'),(0,o.kt)("li",{parentName:"ul"},"Copy the generated ",(0,o.kt)("strong",{parentName:"li"},"API key")," and use it to configure your application later")))),(0,o.kt)("h2",{id:"restricting-the-api-key"},"Restricting the API Key"),(0,o.kt)("p",null,"At this point your key can be used in any application which is great for testing.\nHowever Google suggests that you restrict your key to your application so that you\ncan limit the requests to this API to your application. This requires limiting the key\nto the application id and the SHA-1 fingerprint of your signing certificate."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Select the API key in Credentials"),(0,o.kt)("li",{parentName:"ul"},'Select "Android apps" in the Key restriction section',(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},'Select "Add package name and fingerprint"'),(0,o.kt)("li",{parentName:"ul"},"Enter your package name eg: ",(0,o.kt)("inlineCode",{parentName:"li"},"air.com.distriqt.test")," (Note the ",(0,o.kt)("inlineCode",{parentName:"li"},"air.")," prefix)"),(0,o.kt)("li",{parentName:"ul"},"Add the SHA-1 fingerprint of your certificate")))),(0,o.kt)("p",null,"You'll need the SHA1 fingerprint of your signing certificate here. This is the certificate you use to sign your application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"keytool -exportcert -keystore [YOUR_CERTIFICATE_PATH] -storepass [YOUR_CERT_PASSWORD]  -list -v -storetype PKCS12\n")),(0,o.kt)("p",null,"If you wish to test debug builds you must use the debug certificate used in Flash Builder and enter this fingerprint here.\nYou should update it when beta testing to your own certificate.\nThe following command retrieves the SHA1 signature for the debug certificate used in Flash Builder (on OSX/macOS):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"keytool -exportcert -keystore /Applications/Adobe\\ Flash\\ Builder\\ 4.7/eclipse/plugins/com.adobe.flexide.multiplatform.android_4.7.0.349722/resources/debug-certificate-android.p12 -storepass debug  -list -v -storetype PKCS12\n")),(0,o.kt)("p",null,"Read more about restricting the API key ",(0,o.kt)("a",{parentName:"p",href:"https://developers.google.com/maps/documentation/android-api/signup#restrict-key"},"here")))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[63051],{3905:function(e,t,o){o.d(t,{Zo:function(){return c},kt:function(){return g}});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function l(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?l(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)o=l[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)o=l[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var u=n.createContext({}),s=function(e){var t=n.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(o),g=r,m=d["".concat(u,".").concat(g)]||d[g]||p[g]||l;return o?n.createElement(m,a(a({ref:t},c),{},{components:o})):n.createElement(m,a({ref:t},c))}));function g(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=o.length,a=new Array(l);a[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var s=2;s<l;s++)a[s]=o[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},57289:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var n=o(87462),r=o(63366),l=(o(67294),o(3905)),a=["components"],i={title:"Setup Google Play Games",sidebar_label:"Setup Google Play Games"},u=void 0,s={unversionedId:"gameservices/setup-google-play-games",id:"gameservices/setup-google-play-games",title:"Setup Google Play Games",description:"You must setup your application for Play Services, the following guide will help you through that.",source:"@site/docs/gameservices/setup-google-play-games.md",sourceDirName:"gameservices",slug:"/gameservices/setup-google-play-games",permalink:"/docs/gameservices/setup-google-play-games",tags:[],version:"current",frontMatter:{title:"Setup Google Play Games",sidebar_label:"Setup Google Play Games"},sidebar:"gameservices",previous:{title:"Setup GameCenter",permalink:"/docs/gameservices/setup-gamecenter"},next:{title:"Add the Extension",permalink:"/docs/gameservices/add-the-extension"}},c=[{value:"Getting the SHA1 signature",id:"getting-the-sha1-signature",children:[{value:"keytool",id:"keytool",children:[],level:3},{value:"Flash Builder Debug Certificate",id:"flash-builder-debug-certificate",children:[],level:3}],level:2},{value:"Add your game in the Google Play Developer Console",id:"add-your-game-in-the-google-play-developer-console",children:[],level:2}],p={toc:c};function d(e){var t=e.components,o=(0,r.Z)(e,a);return(0,l.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"You must setup your application for Play Services, the following guide will help you through that."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"http://developer.android.com/google/play-services/games.html"},"http://developer.android.com/google/play-services/games.html")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://developers.google.com/games/services/console/enabling"},"https://developers.google.com/games/services/console/enabling"))),(0,l.kt)("h2",{id:"getting-the-sha1-signature"},"Getting the SHA1 signature"),(0,l.kt)("p",null,'If you are using the current Play App signing approach you can get the signatures of your certificates directly from the Play console, in the "App integrity" section. '),(0,l.kt)("h3",{id:"keytool"},"keytool"),(0,l.kt)("p",null,"You can use the keytool utility to get the details of your ",(0,l.kt)("inlineCode",{parentName:"p"},"p12")," certificate directly:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"keytool -list -v -keystore /path/to/your/certificate.p12 \n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("code",null,"keytool")," location"),(0,l.kt)("p",null,(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"keytool")," is a key and certificate management utility. "),(0,l.kt)("p",null,"You will find it in ",(0,l.kt)("inlineCode",{parentName:"p"},"$JAVA_HOME/bin/keytool"),"."))),(0,l.kt)("h3",{id:"flash-builder-debug-certificate"},"Flash Builder Debug Certificate"),(0,l.kt)("p",null,"If you are attempting to use the default debug certificate in Flash Builder then it can be useful to add the signature of this certificate to your configuration as well."),(0,l.kt)("p",null,"The following command retrieves the SHA1 signature for the debug certificate used in Flash Builder. This will allow you to test your application from debug builds."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"keytool -list -v \n        -keystore /Applications/Adobe\\ Flash\\ Builder\\ 4.7/eclipse/plugins/com.adobe.flexide.multiplatform.android_4.7.0.349722/resources/debug-certificate-android.p12 \n        -storepass debug \n        -storetype PKCS12\n")),(0,l.kt)("h2",{id:"add-your-game-in-the-google-play-developer-console"},"Add your game in the Google Play Developer Console"),(0,l.kt)("p",null,"Create an entry for your game in the Google Play Developer Console. This enables Game services for your application, and creates an OAuth 2.0 client ID, if you don't have one yet. You must perform this step even if you have created a client ID for your game in the Google Developers Console."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Record the following credential information for later.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Your game's application ID  - you will need to enter this into the apm project config or your manually managed manifest additions"),(0,l.kt)("li",{parentName:"ul"},"Your game's OAuth 2.0 client ID"))),(0,l.kt)("li",{parentName:"ul"},"(Optional) Add achievements and leaderboards to your game by following the steps described in Configuring Achievements and Leaderboards."),(0,l.kt)("li",{parentName:"ul"},"Add test accounts for other members of your team to test your game by following the steps described in Publishing Your Game Changes.")))}d.isMDXComponent=!0}}]);
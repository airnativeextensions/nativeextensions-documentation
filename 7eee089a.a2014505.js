(window.webpackJsonp=window.webpackJsonp||[]).push([[393],{449:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(2),o=t(6),i=(t(0),t(813)),a={title:"AppExtension - Share Extension",sidebar_label:"AppExtension - Share Extension"},s={unversionedId:"share/appextension---share-extension",id:"share/appextension---share-extension",isDocsHomePage:!1,title:"AppExtension - Share Extension",description:"Share Extension Functionality",source:"@site/docs/share/appextension---share-extension.md",slug:"/share/appextension---share-extension",permalink:"/docs/share/appextension---share-extension",version:"current",sidebar_label:"AppExtension - Share Extension",sidebar:"share",previous:{title:"AppExtension - Setup",permalink:"/docs/share/appextension---setup"},next:{title:"Migrating from Message",permalink:"/docs/share/migrating-from-message"}},l=[{value:"Share Extension Functionality",id:"share-extension-functionality",children:[]}],c={rightToc:l};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"share-extension-functionality"},"Share Extension Functionality"),Object(i.b)("p",null,"TODO::"),Object(i.b)("p",null,"Some code for your main App Extension file:"),Object(i.b)("p",null,"Your view controller should look something like the following to start:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-objc"}),"@interface ShareViewController ()\n\n@end\n\n@implementation ShareViewController\n\n- (BOOL)isContentValid {\n    // Do validation of contentText and/or NSExtensionContext attachments here\n    return YES;\n}\n\n- (void)didSelectPost {\n    // This is called after the user selects Post. Do the upload of contentText and/or NSExtensionContext attachments.\n    \n    // Inform the host that we're done, so it un-blocks its UI. Note: Alternatively you could call super's -didSelectPost, which will similarly complete the extension context.\n    [self.extensionContext completeRequestReturningItems:@[] completionHandler:nil];\n}\n\n- (NSArray *)configurationItems {\n    // To add configuration options via table cells at the bottom of the sheet, return an array of SLComposeSheetConfigurationItem here.\n    return @[];\n}\n\n@end\n")),Object(i.b)("p",null,"This is just a rough dump of some code I was playing with to get a url to share "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-objc"}),'@implementation ShareViewController\n{\n    NSUInteger _itemCount;\n    NSString* _invokeArgs;\n}\n\n\n- (BOOL) isContentValid\n{\n    // Do validation of contentText and/or NSExtensionContext attachments here\n    return YES;\n}\n\n- (void) didSelectPost\n{\n    // This is called after the user selects Post. Do the upload of contentText and/or NSExtensionContext attachments.\n    NSLog( @"distriqt:SHAREEXTENSION:didSelectPost" );\n    \n    NSLog( @"distriqt:SHAREEXTENSION:%@", self.contentText );\n    \n    NSExtensionItem* item = self.extensionContext.inputItems.firstObject;\n\n    _invokeArgs = NULL;\n    _itemCount = item.attachments.count;\n    \n    for (NSItemProvider* itemProvider in item.attachments)\n    {\n        if ([itemProvider hasItemConformingToTypeIdentifier: (NSString*)kUTTypeURL])\n        {\n            NSLog( @"distriqt:SHAREEXTENSION:item is url" );\n            [itemProvider loadItemForTypeIdentifier: (NSString*)kUTTypeURL\n                                            options: nil\n                                  completionHandler:^(id<NSSecureCoding>  _Nullable item, NSError * _Null_unspecified error)\n            {\n                NSURL* url = (NSURL*)item;\n                NSLog( @"distriqt:SHAREEXTENSION:loaded:%@", url );\n                if ([url.absoluteString rangeOfString: @"youtube"].location == NSNotFound)\n                {\n                    \n                }\n                else\n                {\n                    \n                }\n                [self invokeApp: url.absoluteString];\n            }];\n        }\n        else if ([itemProvider hasItemConformingToTypeIdentifier: (NSString*)kUTTypeImage])\n        {\n            NSLog( @"distriqt:SHAREEXTENSION:item is image" );\n            [itemProvider loadItemForTypeIdentifier: (NSString*)kUTTypeImage\n                                            options: nil\n                                  completionHandler:^(id<NSSecureCoding>  _Nullable item, NSError * _Null_unspecified error)\n            {\n                [self invokeApp: @""];\n            }];\n        }\n    }\n\n}\n\n\n- (NSArray *) configurationItems\n{\n    // To add configuration options via table cells at the bottom of the sheet, return an array of SLComposeSheetConfigurationItem here.\n    return @[];\n}\n\n\n- (void) invokeApp: (NSString *)invokeArgs\n{\n    // Prepare the URL request\n    // this will use the custom url scheme of your app\n    // and the paths to the photos you want to share:\n    NSString * urlString = [NSString stringWithFormat: @"%@://%@", @"distriqt-test", ( NULL == invokeArgs ? @"" : invokeArgs ) ];\n    NSURL * url = [NSURL URLWithString: urlString];\n    \n    NSString *className = @"UIApplication";\n    if (NSClassFromString( className ))\n    {\n        id object = [ NSClassFromString(className) performSelector: @selector(sharedApplication) ];\n        [object performSelector: @selector(openURL:) withObject: url];\n    }\n    \n    // Now let the host app know we are done, so that it unblocks its UI:\n    [super didSelectPost];\n}\n\n@end\n')),Object(i.b)("p",null,"This code uses a custom url scheme to launch the application so you'll need to add the following to your InfoAdditions in your application descriptor:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-xml"}),"    <key>CFBundleURLTypes</key>\n    <array>\n        <dict>\n            <key>CFBundleURLSchemes</key>\n            <array>\n                <string>distriqt-test</string>\n            </array>\n        </dict>\n    </array>\n")))}p.isMDXComponent=!0},813:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return f}));var r=t(0),o=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),p=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),m=r,f=u["".concat(a,".").concat(m)]||u[m]||d[m]||i;return t?o.a.createElement(f,s(s({ref:n},c),{},{components:t})):o.a.createElement(f,s({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);
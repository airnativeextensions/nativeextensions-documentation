"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[76498],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return v}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(a),v=r,d=u["".concat(c,".").concat(v)]||u[v]||m[v]||i;return a?n.createElement(d,o(o({ref:t},p),{},{components:a})):n.createElement(d,o({ref:t},p))}));function v(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4788:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return l},default:function(){return m}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),o={title:"Saving BitmapData to File",sidebar_label:"Saving BitmapData to File"},s=void 0,c={unversionedId:"image/saving-bitmapdata-to-file",id:"image/saving-bitmapdata-to-file",isDocsHomePage:!1,title:"Saving BitmapData to File",description:"Encoding bitmap data to a file can be a slow process when using AS3 operations.",source:"@site/docs/image/saving-bitmapdata-to-file.md",sourceDirName:"image",slug:"/image/saving-bitmapdata-to-file",permalink:"/docs/image/saving-bitmapdata-to-file",tags:[],version:"current",frontMatter:{title:"Saving BitmapData to File",sidebar_label:"Saving BitmapData to File"},sidebar:"image",previous:{title:"Request Authorisation",permalink:"/docs/image/request-authorisation"},next:{title:"Loading BitmapData from File",permalink:"/docs/image/loading-bitmapdata-from-file"}},l=[{value:"Caching Internally",id:"caching-internally",children:[]}],p={toc:l};function m(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Encoding bitmap data to a file can be a slow process when using AS3 operations.\nThis extension provides functionality to use the native PNG and JPG encoders to\nsave BitmapData to a file which greatly increases the speed of saving images."),(0,i.kt)("p",null,"Most of the operations provided by this ANE can be performed synchronously or\nasynchronously. Synchronous operations may block your UI if you are dealing\nwith large images so we suggest you use the asynchronous versions wherever possible."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var image:Bitmap = new SampleImage() as Bitmap;\nvar f:File = File.applicationStorageDirectory.resolvePath("test.png");\n\nImage.service.addEventListener( ImageEvent.SAVE_COMPLETE, saveBitmapDataAsync_completeHandler );\nImage.service.addEventListener( ImageEvent.SAVE_ERROR, saveBitmapDataAsync_errorHandler );\n\nvar success:Boolean = Image.service.saveBitmapDataAsync( image.bitmapData, f.nativePath, ImageFormat.PNG );\n')),(0,i.kt)("p",null,"When the save operation completes you will receive either an ",(0,i.kt)("inlineCode",{parentName:"p"},"ImageEvent.SAVE_COMPLETE"),"\nevent or an ",(0,i.kt)("inlineCode",{parentName:"p"},"ImageEvent.SAVE_ERROR")," event:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'function saveBitmapDataAsync_completeHandler( event:ImageEvent ):void\n{\n    trace( "Save successfully: " + event.identifier );\n}\n\nfunction saveBitmapDataAsync_errorHandler( event:ImageEvent ):void\n{\n    trace( "Save failed: " + event.identifier );\n}\n')),(0,i.kt)("h2",{id:"caching-internally"},"Caching Internally"),(0,i.kt)("p",null,"In order to avoid crashes when AIR garbage collects the Bitmap Data we make a copy of the image\nand use this cached version internally. "),(0,i.kt)("p",null,"If you pass a local variable to the ",(0,i.kt)("inlineCode",{parentName:"p"},"saveBitmapDataAsync")," function and we don't cache the\nimage data, AIR isn't aware of the ANE reference and may dealloc the memory we are using\nto save the image. So by default we cache the image internally."),(0,i.kt)("p",null,"This can have a small affect on the performance as we need to create a copy of the image."),(0,i.kt)("p",null,"If you are concerned about the speed of this function you should try to set ",(0,i.kt)("inlineCode",{parentName:"p"},"cacheBitmapInternally"),"\nto ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," and make sure that you hold onto a reference to your bitmap data, for example, as\na class variable. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'// Class variable will hold reference to bitmap\nprivate var image:Bitmap;\n\n\nprivate function saveBitmap():void \n{\n    Image.service.addEventListener( ImageEvent.SAVE_COMPLETE, saveBitmapDataAsync_completeHandler );\n    Image.service.addEventListener( ImageEvent.SAVE_ERROR, saveBitmapDataAsync_errorHandler );\n\n    // Set cacheBitmapInternally to false\n    var success:Boolean = Image.service.saveBitmapDataAsync( image.bitmapData, f.nativePath, ImageFormat.PNG, false );\n}\n\nprivate function saveBitmapDataAsync_completeHandler( event:ImageEvent ):void\n{\n    trace( "Save successfully: " + event.identifier );\n    // dispose image if required.\n}\n\nprivate function saveBitmapDataAsync_errorHandler( event:ImageEvent ):void\n{\n    trace( "Save failed: " + event.identifier );\n    // dispose image if required.\n}\n')))}m.isMDXComponent=!0}}]);
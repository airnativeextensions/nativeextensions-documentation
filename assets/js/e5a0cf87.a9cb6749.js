"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[74963],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return v}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),u=c(n),v=i,m=u["".concat(l,".").concat(v)]||u[v]||s[v]||o;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function v(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d.mdxType="string"==typeof e?e:i,a[1]=d;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},66421:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return d},metadata:function(){return l},toc:function(){return c},default:function(){return s}});var r=n(87462),i=n(63366),o=(n(67294),n(3905)),a={},d=void 0,l={unversionedId:"image/changelog",id:"image/changelog",isDocsHomePage:!1,title:"changelog",description:"2022.01.20 [v5.1.81]",source:"@site/docs/image/changelog.md",sourceDirName:"image",slug:"/image/changelog",permalink:"/docs/image/changelog",tags:[],version:"current",frontMatter:{},sidebar:"image",previous:{title:"Migrating to AndroidX",permalink:"/docs/image/migrating-to-androidx"}},c=[{value:"2022.01.20 v5.1.81",id:"20220120-v5181",children:[]},{value:"2021.10.05 v5.1.79",id:"20211005-v5179",children:[]},{value:"2020.03.21 v5.0.007",id:"20200321-v50007",children:[]},{value:"2019.08.15 v4.0.003",id:"20190815-v40003",children:[]},{value:"2019.03.12 v3.2.098",id:"20190312-v32098",children:[]},{value:"2018.08.21 v3.1.097",id:"20180821-v31097",children:[]},{value:"2018.08.17 v3.1.095",id:"20180817-v31095",children:[]},{value:"2018.01.18 v3.1.089",id:"20180118-v31089",children:[]},{value:"2017.10.12 v3.0.038",id:"20171012-v30038",children:[]},{value:"2017.07.14 v2.6.020",id:"20170714-v26020",children:[]},{value:"2017.07.10 v2.5.016",id:"20170710-v25016",children:[]},{value:"2016.12.29 v2.5.015",id:"20161229-v25015",children:[]},{value:"2016.12.29 v2.5.015",id:"20161229-v25015-1",children:[]},{value:"2016.09.20 v2.4.004",id:"20160920-v24004",children:[]},{value:"2016.09.16 v2.4.003",id:"20160916-v24003",children:[]},{value:"2016.08.01",id:"20160801",children:[]},{value:"2016.07.05",id:"20160705",children:[]},{value:"2016.06.30",id:"20160630",children:[]},{value:"2016.05.10",id:"20160510",children:[]},{value:"2016.02.25",id:"20160225",children:[]},{value:"2015.07.09",id:"20150709",children:[]},{value:"2015.06.16",id:"20150616",children:[]},{value:"2015.02.02",id:"20150202",children:[]},{value:"2014.12.20",id:"20141220",children:[]},{value:"2014.12.05",id:"20141205",children:[]},{value:"2014.12.01",id:"20141201",children:[]}],p={toc:c};function s(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"20220120-v5181"},"2022.01.20 ","[v5.1.81]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Update documentation to use apm\nAdd descriptions for air package parameters\nAdd windows x64 support\n")),(0,o.kt)("h3",{id:"20211005-v5179"},"2021.10.05 ","[v5.1.79]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Add air package\nAdd windows implementation\nAdd default decoding functionality\nRemove ios minimum version flag\nAdd android activity security\n")),(0,o.kt)("h3",{id:"20200321-v50007"},"2020.03.21 ","[v5.0.007]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Android X migration (resolves #49)\n")),(0,o.kt)("h3",{id:"20190815-v40003"},"2019.08.15 ","[v4.0.003]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Android 64bit support (resolves #45)\nUpdated minimum iOS version to 9.0\n")),(0,o.kt)("h3",{id:"20190312-v32098"},"2019.03.12 ","[v3.2.098]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Updated minimum iOS version to 8.0\nEmbedded iOS bitcode\n")),(0,o.kt)("h3",{id:"20180821-v31097"},"2018.08.21 ","[v3.1.097]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Android: Added additional memory checks on large image operations (#42)\n")),(0,o.kt)("h3",{id:"20180817-v31095"},"2018.08.17 ","[v3.1.095]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Added error events when bitmap could not be retrieved (resolves #43)\n")),(0,o.kt)("h3",{id:"20180118-v31089"},"2018.01.18 ","[v3.1.089]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Added ability to take a screenshot (resolves #39)\n")),(0,o.kt)("h3",{id:"20171012-v30038"},"2017.10.12 ","[v3.0.038]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Added rotate and resize transformations (resolves #32, resolves #25)\nAdded checks for directories (resolves #28) \n")),(0,o.kt)("h3",{id:"20170714-v26020"},"2017.07.14 ","[v2.6.020]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Updated documentation to reflect new permissions (resolves #31)\niOS: Added authorisation process for iOS 10+ (resolves #35)\niOS: Cached bitmap data internally to avoid async crash (resolves #30)\n")),(0,o.kt)("h3",{id:"20170710-v25016"},"2017.07.10 ","[v2.5.016]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Updated for compatibility with new Core library (for Notifications/PushNotifications fix)\n")),(0,o.kt)("h3",{id:"20161229-v25015"},"2016.12.29 ","[v2.5.015]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Updated documentation\n")),(0,o.kt)("h3",{id:"20161229-v25015-1"},"2016.12.29 ","[v2.5.015]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Added runtime authorisation for Android, updated SDKs + documentation\n")),(0,o.kt)("h3",{id:"20160920-v24004"},"2016.09.20 ","[v2.4.004]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"iOS: Corrected legacy support for pre Photos framework (#19)\n")),(0,o.kt)("h3",{id:"20160916-v24003"},"2016.09.16 ","[v2.4.003]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Added ability to set filename of file saved to the camera roll (resolves #19)\n")),(0,o.kt)("h3",{id:"20160801"},"2016.08.01"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Added function to rotate bitmap data (resolves #21)\n")),(0,o.kt)("h3",{id:"20160705"},"2016.07.05"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Enhanced saveToCameraRoll enabling format and quality options (resolves #19)\n")),(0,o.kt)("h3",{id:"20160630"},"2016.06.30"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Added the saveToCameraRoll function to save bitmapData to the users photos (resolves #18)\n")),(0,o.kt)("h3",{id:"20160510"},"2016.05.10"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Release v2.0\nAdded native load/decode (resolves #14)\nAndroid: Implemented saveBitmapData function (resolves #17)\nAdded asynchronous versions of all functions\nAdded checks on inputs (resolves #6)\n")),(0,o.kt)("h3",{id:"20160225"},"2016.02.25"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Added checks on the quality value to avoid crashes with extreme values (resolves #10)\n")),(0,o.kt)("h3",{id:"20150709"},"2015.07.09"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Android: Fix for key verification failing for package names starting with a numerical value (resolves #7)\n")),(0,o.kt)("h3",{id:"20150616"},"2015.06.16"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Removed debug code from AS lib\niOS: Updated to latest common lib\nAndroid: Windows: Fix for bug in AIR packager resulting in missing resources\nAndroid: x86 Support\n")),(0,o.kt)("h3",{id:"20150202"},"2015.02.02"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Added check for .debug suffix in application id\n")),(0,o.kt)("h3",{id:"20141220"},"2014.12.20"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"iOS: Included arm64 support (resolves #2) \nAndroid: Corrected application id check when doesn't contain air prefix \n")),(0,o.kt)("h3",{id:"20141205"},"2014.12.05"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Corrected missing EventDispatcher functions from base class\niOS: Implemented autoreleasepools for all C function calls\n")),(0,o.kt)("h3",{id:"20141201"},"2014.12.01"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"New application based key check, removing server checks\n")))}s.isMDXComponent=!0}}]);
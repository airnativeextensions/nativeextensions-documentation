"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[62809],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>v});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},f=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,f=o(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,v=p["".concat(s,".").concat(d)]||p[d]||u[d]||l;return n?r.createElement(v,i(i({ref:t},f),{},{components:n})):r.createElement(v,i({ref:t},f))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},24172:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const l={title:"Offerwall",sidebar_label:"Offerwall"},i=void 0,o={unversionedId:"ironsource/offerwall",id:"ironsource/offerwall",title:"Offerwall",description:"The offerwall is an in-app advertising unit that app developers use to monetize their apps. It acts like a mini-store in an app, listing multiple \u201coffers\u201d that users can complete in exchange for receiving an in-app reward. For example, users can receive extra in-app coins if they choose to register a username, get to level 25 on a game, make an in-app purchase, and more on the offerwall.",source:"@site/docs/ironsource/offerwall.md",sourceDirName:"ironsource",slug:"/ironsource/offerwall",permalink:"/docs/ironsource/offerwall",draft:!1,tags:[],version:"current",frontMatter:{title:"Offerwall",sidebar_label:"Offerwall"},sidebar:"ironsource",previous:{title:"Banner Ads",permalink:"/docs/ironsource/banner-ads"},next:{title:"Errors",permalink:"/docs/ironsource/errors"}},s={},c=[{value:"Availability",id:"availability",level:2},{value:"Present the Offerwall",id:"present-the-offerwall",level:2},{value:"Reward the User",id:"reward-the-user",level:2},{value:"Client side",id:"client-side",level:3},{value:"Proactive polling",id:"proactive-polling",level:4},{value:"Automatic Events",id:"automatic-events",level:4},{value:"Server side",id:"server-side",level:3},{value:"Errors",id:"errors",level:2}],f={toc:c},p="wrapper";function u(e){let{components:t,...l}=e;return(0,a.kt)(p,(0,r.Z)({},f,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The offerwall is an in-app advertising unit that app developers use to monetize their apps. It acts like a mini-store in an app, listing multiple \u201coffers\u201d that users can complete in exchange for receiving an in-app reward. For example, users can receive extra in-app coins if they choose to register a username, get to level 25 on a game, make an in-app purchase, and more on the offerwall."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(3307).Z,width:"676",height:"600"})),(0,a.kt)("h2",{id:"availability"},"Availability"),(0,a.kt)("p",null,"You can check whether the offerwall is currently available at any time by checking the ",(0,a.kt)("inlineCode",{parentName:"p"},"isOfferwallAvailable()")," method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (IronSource.instance.isOfferwallAvailable())\n{\n    // Offerwall is available\n}\n")),(0,a.kt)("p",null,"You can also listen for the ",(0,a.kt)("inlineCode",{parentName:"p"},"OfferwallEvent.AVAILABLE")," to respond to changes in the availability of the offerwall."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"IronSource.instance.addEventListener( OfferwallEvent.AVAILABLE, offerwallAvailabilityHandler );\n\nfunction offerwallAvailabilityHandler( event:OfferwallEvent ):void \n{\n    // Offerwall availability has changed\n\n    if (IronSource.instance.isOfferwallAvailable())\n    {\n        // Offerwall is available\n    }\n}\n")),(0,a.kt)("h2",{id:"present-the-offerwall"},"Present the Offerwall"),(0,a.kt)("p",null,"Once the Offerwall is available you can call ",(0,a.kt)("inlineCode",{parentName:"p"},"showOfferwall()")," to present the offerwall to your user (typically done after a user clicks on some in-app button)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"IronSource.instance.showOfferwall();\n")),(0,a.kt)("p",null,"You should always check if the offerwall is available before showing and react accordingly:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (IronSource.instance.isOfferwallAvailable())\n{\n    IronSource.instance.showOfferwall();\n}\nelse \n{\n    // Inform user feature not available currently\n}\n")),(0,a.kt)("p",null,"There are several events associated with the display of the offerwall:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"OfferwallEvent.OPENED"),": Dispatched when the Offerwall is opened;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"OfferwallEvent.CLOSED"),": Dispatched when the Offerwall is closed;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"OfferwallEvent.SHOW_FAILED"),": Dispatched if the Offerwall failed to show;")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"IronSource.instance.addEventListener( OfferwallEvent.OPENED, openedHandler );\nIronSource.instance.addEventListener( OfferwallEvent.CLOSED, closedHandler );\nIronSource.instance.addEventListener( OfferwallEvent.SHOW_FAILED, errorHandler );\n\nif (IronSource.instance.isOfferwallAvailable())\n{\n    IronSource.instance.showOfferwall();\n}\n\n\nfunction openedHandler( event:OfferwallEvent ):void \n{\n    // Offerwall opened\n}\n\nfunction closedHandler( event:OfferwallEvent ):void \n{\n    // Offerwall closed\n}\n\nfunction errorHandler( event:OfferwallEvent ):void \n{\n    // Check event details for error information\n}\n")),(0,a.kt)("h2",{id:"reward-the-user"},"Reward the User"),(0,a.kt)("p",null,"There are 2 methods of rewarding your user, using:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Client side callbacks;"),(0,a.kt)("li",{parentName:"ul"},"Server side callbacks;")),(0,a.kt)("h3",{id:"client-side"},"Client side"),(0,a.kt)("h4",{id:"proactive-polling"},"Proactive polling"),(0,a.kt)("p",null,"You can poll at any time to retrieve the user's total credits and any new credits."),(0,a.kt)("p",null,"To do this call the ",(0,a.kt)("inlineCode",{parentName:"p"},"getOfferwallCredits()")," function and await the following events:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"OfferwallEvent.AD_CREDITED"),": Dispatched when the call completes successfully, the event will contain the current user credits;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"OfferwallEvent.GETOFFERWALLCREDITS_FAILED"),": Dispatched if there was an error retrieving the user's credits;")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'IronSource.instance.addEventListener( OfferwallEvent.AD_CREDITED, adCreditedHandler );\nIronSource.instance.addEventListener( OfferwallEvent.GETOFFERWALLCREDITS_FAILED, errorHandler );\n\nIronSource.instance.getOfferwallCredits();\n\n\nfunction adCreditedHandler( event:OfferwallEvent ):void\n{\n    trace( "  credits=" + event.credits );\n    trace( "  totalCredits=" + event.totalCredits );\n    trace( "  totalCreditsFlag=" + event.totalCreditsFlag );\n}\n\nfunction errorHandler( event:OfferwallEvent ):void\n{\n    // Check event details for error information\n}\n')),(0,a.kt)("p",null,"The details retrieved in the event are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"credits")," : The number of credits the user has earned since the last ",(0,a.kt)("inlineCode",{parentName:"li"},"OfferwallEvent.AD_CREDITED")," event. Note that the ",(0,a.kt)("inlineCode",{parentName:"li"},"credits")," may represent multiple completions;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"totalCredits")," : The total number of credits ever earned by the user;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"totalCreditsFlag")," :  In some cases, we won\u2019t be able to provide the exact amount of credits since the last event (specifically if the user clears the app\u2019s data). In this case the ",(0,a.kt)("inlineCode",{parentName:"li"},"credits")," will be equal to the ",(0,a.kt)("inlineCode",{parentName:"li"},"totalCredits"),", and this flag will be ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),";")),(0,a.kt)("h4",{id:"automatic-events"},"Automatic Events"),(0,a.kt)("p",null,"You can also enable automatic client side events by calling ",(0,a.kt)("inlineCode",{parentName:"p"},"setIronSourceClientSideCallbacks( true )")," before you initialise the IronSource SDK."),(0,a.kt)("p",null,"Setting automatic client-side callbacks will make sure that you\u2019re notified about the user\u2019s credit status at specific points in the Offerwall\u2019s lifecycle."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"IronSource.instance.setIronSourceClientSideCallbacks(true);\n\nIronSource.instance.init( ... );\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Important! This code MUST be implemented before calling the init."))),(0,a.kt)("p",null,"Using this method the ",(0,a.kt)("inlineCode",{parentName:"p"},"OfferwallEvent.AD_CREDITED")," will be dispatched automatically as part of the offerwall lifecycle."),(0,a.kt)("h3",{id:"server-side"},"Server side"),(0,a.kt)("p",null,"See the ironSource documentation for details on server side callbacks and rewarding users."),(0,a.kt)("p",null,"If you turn on server-to-server callbacks in addition to the client-side callbacks, remember not to reward the user more than once for the same completion. ironSource will fire both the client-side callback and the server-to-server callback. You will get two notifications for each completion."),(0,a.kt)("h2",{id:"errors"},"Errors"),(0,a.kt)("p",null,"See the complete description of the ironSource errors ",(0,a.kt)("a",{parentName:"p",href:"/docs/ironsource/errors"},"here"),"."))}u.isMDXComponent=!0},3307:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/offerwall-50ffe5377411818cd63fe63ff55d76b1.png"}}]);
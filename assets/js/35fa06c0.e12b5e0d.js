(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[27628],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},v=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),v=p(n),d=r,h=v["".concat(s,".").concat(d)]||v[d]||u[d]||i;return n?a.createElement(h,o(o({ref:t},l),{},{components:n})):a.createElement(h,o({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=v;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}v.displayName="MDXCreateElement"},99608:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return c},toc:function(){return s},default:function(){return l}});var a=n(22122),r=n(19756),i=(n(67294),n(3905)),o={title:"Touch Events",sidebar_label:"Touch Events"},c={unversionedId:"nativemaps/touch-events",id:"nativemaps/touch-events",isDocsHomePage:!1,title:"Touch Events",description:"There are several events that will be dispatched by the map to indicate the user is interacting with the map.",source:"@site/docs/nativemaps/touch-events.md",sourceDirName:"nativemaps",slug:"/nativemaps/touch-events",permalink:"/docs/nativemaps/touch-events",version:"current",sidebar_label:"Touch Events",frontMatter:{title:"Touch Events",sidebar_label:"Touch Events"},sidebar:"nativemaps",previous:{title:"Controlling the View",permalink:"/docs/nativemaps/controlling-the-view"},next:{title:"Overlays",permalink:"/docs/nativemaps/overlays"}},s=[{value:"Touch Events",id:"touch-events",children:[]},{value:"Drag Events",id:"drag-events",children:[]}],p={toc:s};function l(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"There are several events that will be dispatched by the map to indicate the user is interacting with the map."),(0,i.kt)("h2",{id:"touch-events"},"Touch Events"),(0,i.kt)("p",null,"There are two main touch events, a simple touch, tap or press represented by ",(0,i.kt)("inlineCode",{parentName:"p"},"NativeMapTouchEvent.TOUCH"),"\nand a long touch or long press represented by ",(0,i.kt)("inlineCode",{parentName:"p"},"NativeMapTouchEvent.TOUCH_LONG"),"."),(0,i.kt)("p",null,"These events will have an associated location attached to them, indicating the geographic location\non the map that the user has touched."),(0,i.kt)("p",null,"The event will contain the ",(0,i.kt)("inlineCode",{parentName:"p"},"location")," as a ",(0,i.kt)("inlineCode",{parentName:"p"},"LatLng")," instance."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"NativeMaps.service.addEventListener( NativeMapTouchEvent.TOUCH, nativeMaps_touchHandler );\nNativeMaps.service.addEventListener( NativeMapTouchEvent.TOUCH_LONG, nativeMaps_touchHandler );\n\n...\n\nprivate function nativeMaps_touchHandler( event:NativeMapTouchEvent ):void\n{\n    trace( event.type );\n    trace( event.location.toString() );\n}\n")),(0,i.kt)("h2",{id:"drag-events"},"Drag Events"),(0,i.kt)("p",null,"Drag events are dispatched whenever the map is moved by the user.\nThis can be done by either using one or two fingers and as such doesn't have a specific location\nattached to it and ",(0,i.kt)("inlineCode",{parentName:"p"},"location")," will be ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),". "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"NativeMaps.service.addEventListener( NativeMapTouchEvent.DRAG_START, nativeMaps_dragHandler );\nNativeMaps.service.addEventListener( NativeMapTouchEvent.DRAG_END, nativeMaps_dragHandler );\n\n...\n\nprivate function nativeMaps_dragHandler( event:NativeMapTouchEvent ):void\n{\n    trace( event.type );\n}\n")))}l.isMDXComponent=!0}}]);
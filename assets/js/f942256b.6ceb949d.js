"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[81886],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return p}});var o=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=o.createContext({}),l=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=l(e.components);return o.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),g=l(t),p=i,f=g["".concat(c,".").concat(p)]||g[p]||u[p]||r;return t?o.createElement(f,a(a({ref:n},d),{},{components:t})):o.createElement(f,a({ref:n},d))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=g;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var l=2;l<r;l++)a[l]=t[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},97040:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var o=t(87462),i=t(63366),r=(t(67294),t(3905)),a={title:"Geofences",sidebar_label:"Geofences"},s=void 0,c={unversionedId:"location/geofences",id:"location/geofences",isDocsHomePage:!1,title:"Geofences",description:"Authorisation",source:"@site/docs/location/geofences.md",sourceDirName:"location",slug:"/location/geofences",permalink:"/docs/location/geofences",tags:[],version:"current",frontMatter:{title:"Geofences",sidebar_label:"Geofences"},sidebar:"location",previous:{title:"Location Monitoring",permalink:"/docs/location/location-monitoring"},next:{title:"Geocoding",permalink:"/docs/location/geocoding"}},l=[{value:"Authorisation",id:"authorisation",children:[]},{value:"Start Monitoring a Geofence Region",id:"start-monitoring-a-geofence-region",children:[{value:"Android",id:"android",children:[]}]},{value:"Stop Monitoring a Geofence Region",id:"stop-monitoring-a-geofence-region",children:[]},{value:"Operation Notes and Caveats",id:"operation-notes-and-caveats",children:[{value:"iOS",id:"ios",children:[]},{value:"Android",id:"android-1",children:[]}]}],d={toc:l};function u(e){var n=e.components,t=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"authorisation"},"Authorisation"),(0,r.kt)("p",null,"In order to use Geofences you should request the ",(0,r.kt)("inlineCode",{parentName:"p"},"ALWAYS")," authorisation. Apps with geofencing capabilities should use Always authorization due to the need to monitor geofences even when the app isn\u2019t running in the foreground."),(0,r.kt)("p",null,"Additionally you need to have added the location ",(0,r.kt)("inlineCode",{parentName:"p"},"UIBackgroundModes")," on iOS. "),(0,r.kt)("h2",{id:"start-monitoring-a-geofence-region"},"Start Monitoring a Geofence Region"),(0,r.kt)("p",null,"To start monitoring a region you create a ",(0,r.kt)("inlineCode",{parentName:"p"},"Region")," instance representing the Geofenced region.\nThis object has a location (latitude and longitude) and a radius to specify the location and size of the region, and you should also assign a region a unique identifier so you can later identify the region that was entered/exited. "),(0,r.kt)("p",null,"The radius represents the distance in ",(0,r.kt)("strong",{parentName:"p"},"meters")," from the specified location, at which the system will trigger the notification."),(0,r.kt)("p",null,"Once you have defined your region you start monitoring by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"startMonitoringRegion"),".\nYou can call this multiple times if you wish to monitor several regions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'Location.service.geofences.addEventListener( RegionEvent.START_MONITORING, startMonitoringHandler );\nLocation.service.geofences.addEventListener( RegionEvent.ENTER, enterHandler );\nLocation.service.geofences.addEventListener( RegionEvent.EXIT, exitHandler );\n\nvar region:Region = new Region();\nregion.identifier   = "some-unique-id";\nregion.latitude     = 14.123456;\nregion.longitude    = 12.345678;\nregion.radius       = 100;\n\nvar success:Boolean = Location.service.geofences.startMonitoringRegion( region );\n\nfunction startMonitoringHandler( event:RegionEvent ):void\n{\n    trace( "start monitor: "+event.region.identifier );\n}\n\n\nfunction enterHandler( event:RegionEvent ):void\n{\n    trace( "region enter: "+event.region.identifier );\n}\n\nfunction exitHandler( event:RegionEvent ):void\n{\n    trace( "region exit: "+event.region.identifier );\n}\n')),(0,r.kt)("h3",{id:"android"},"Android"),(0,r.kt)("p",null,"On Android you can trigger your application to start if it is not running by setting the ",(0,r.kt)("inlineCode",{parentName:"p"},"startApplicationOnEnter")," flag on the region. If you set this flag to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," then when the device enters the region your application will be automatically started."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var region:Region = new Region();\nregion.startApplicationOnEnter = true;\n")),(0,r.kt)("p",null,"The default is ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("h2",{id:"stop-monitoring-a-geofence-region"},"Stop Monitoring a Geofence Region"),(0,r.kt)("p",null,"Stopping location updates is simply a matter of calling ",(0,r.kt)("inlineCode",{parentName:"p"},"stopMonitoringRegion")," and passing the same ",(0,r.kt)("inlineCode",{parentName:"p"},"Region")," used to start monitoring the region. This will dispatch a ",(0,r.kt)("inlineCode",{parentName:"p"},"RegionEvent.STOP_MONITORING")," event when successful. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'Location.service.geofences.addEventListener( RegionEvent.STOP_MONITORING, stopMonitoringHandler );\n\nvar success:Boolean = Location.service.geofences.stopMonitoringRegion( region );\n\n\nfunction stopMonitoringHandler( event:RegionEvent ):void\n{\n    trace( "stop monitor: "+event.region.identifier );\n}\n')),(0,r.kt)("p",null,"If you have finished listening to geofences you should also remove any ",(0,r.kt)("inlineCode",{parentName:"p"},"RegionEvent")," listeners you may have been using."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"Location.service.geofences.removeEventListener( RegionEvent.START_MONITORING, startMonitoringHandler );\nLocation.service.geofences.removeEventListener( RegionEvent.STOP_MONITORING, stopMonitoringHandler );\nLocation.service.geofences.removeEventListener( RegionEvent.ENTER, enterHandler );\nLocation.service.geofences.removeEventListener( RegionEvent.EXIT, exitHandler );\n")),(0,r.kt)("h2",{id:"operation-notes-and-caveats"},"Operation Notes and Caveats"),(0,r.kt)("p",null,"The entry and exit events are generated whenever the OS determines that a region is entered or exited. The conditions for this vary on the operating systems and can vary from a few seconds to a few minutes."),(0,r.kt)("h3",{id:"ios"},"iOS"),(0,r.kt)("p",null,"An app can register up to 20 regions at a time. In order to report region changes in a timely manner, the region monitoring service requires network connectivity."),(0,r.kt)("p",null,"To work around this limit, consider registering only those regions in the user\u2019s immediate vicinity. As the user\u2019s location changes, you can remove regions that are now farther way and add regions coming up on the user\u2019s path. "),(0,r.kt)("p",null,"Regions with a radius between 1 and 400 meters work better on iPhone 4S or later devices. On these devices, an app can expect to receive the appropriate region entered or region exited notification within 3 to 5 minutes on average, if not sooner."),(0,r.kt)("p",null,"The system doesn\u2019t report boundary crossings until the boundary plus a system-defined cushion distance is exceeded. This cushion value prevents the system from generating numerous entered and exited events in quick succession while the user is traveling close the edge of the boundary."),(0,r.kt)("h3",{id:"android-1"},"Android"),(0,r.kt)("p",null,"Android entry/exit events are dispatched somewhat faster than on iOS."))}u.isMDXComponent=!0}}]);
(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[22255],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return p},kt:function(){return d}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function u(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),m=c(a),d=n,g=m["".concat(l,".").concat(d)]||m[d]||s[d]||i;return a?r.createElement(g,o(o({ref:t},p),{},{components:a})):r.createElement(g,o({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=m;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:n,o[1]=u;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},77597:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},metadata:function(){return u},toc:function(){return l},default:function(){return p}});var r=a(22122),n=a(19756),i=(a(67294),a(3905)),o={title:"Capturing Images",sidebar_label:"Capturing Images"},u={unversionedId:"camera/capturing-images",id:"camera/capturing-images",isDocsHomePage:!1,title:"Capturing Images",description:"There are two parts to image capture, a request and a result.",source:"@site/docs/camera/capturing-images.md",sourceDirName:"camera",slug:"/camera/capturing-images",permalink:"/docs/camera/capturing-images",version:"current",sidebar_label:"Capturing Images",frontMatter:{title:"Capturing Images",sidebar_label:"Capturing Images"},sidebar:"camera",previous:{title:"Preview Frames",permalink:"/docs/camera/preview-frames"},next:{title:"Camera Modes",permalink:"/docs/camera/camera-modes"}},l=[{value:"Capture Request",id:"capture-request",children:[]},{value:"Capture Result",id:"capture-result",children:[]}],c={toc:l};function p(e){var t=e.components,a=(0,n.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"There are two parts to image capture, a request and a result. "),(0,i.kt)("h3",{id:"capture-request"},"Capture Request"),(0,i.kt)("p",null,"To capture an image we start by creating an instance of the ",(0,i.kt)("inlineCode",{parentName:"p"},"CaptureImageRequest")," class.\nThis object encapsulates all the information about the image capture you wish to make\nand you will pass this to the ",(0,i.kt)("inlineCode",{parentName:"p"},"captureImage")," function of a device for processing."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"var request:CaptureImageRequest = new CaptureImageRequest();\nrequest.saveToCameraRoll = true;\nrequest.waitForAdjustments = true;\n\ndevice.captureImage( request );\n")),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"CaptureImageRequest")," allows you to control several options, such as whether the\ncaptured image is saved to the camera roll, and whether we should wait for camera\nadjustments to complete before capturing the image. "),(0,i.kt)("p",null,"This process will potentially dispatch several events:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CameraCaptureEvent.COMPLETE"),": When capture completes"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CameraCaptureEvent.ERROR"),": If an error occurs"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CameraCaptureEvent.IMAGE_SAVE_COMPLETE"),": When the image is saved to the camera roll"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CameraCaptureEvent.IMAGE_SAVE_ERROR"),": If an error occurs when saving the image")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"device.addEventListener( CameraCaptureEvent.COMPLETE, captureComplete_Handler );\ndevice.addEventListener( CameraCaptureEvent.ERROR, captureHandler );\ndevice.addEventListener( CameraCaptureEvent.IMAGE_SAVE_COMPLETE, captureHandler );\ndevice.addEventListener( CameraCaptureEvent.IMAGE_SAVE_ERROR, captureHandler );\n")),(0,i.kt)("h3",{id:"capture-result"},"Capture Result"),(0,i.kt)("p",null,"Once the capture request is complete, you will be able to access the captured image\nthrough the ",(0,i.kt)("inlineCode",{parentName:"p"},"captureImageResult()")," function. This function returns an instance of the\n",(0,i.kt)("inlineCode",{parentName:"p"},"CaptureImageResult")," class containing the ",(0,i.kt)("inlineCode",{parentName:"p"},"BitmapData")," captured along with any other\nrelevant information."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"private function captureComplete_Handler( event:CameraCaptureEvent ):void \n{\n    var result:CaptureImageResult = device.captureImageResult();\n    if (result != null && result.data != null)\n    {\n        // result.data will contain the BitmapData object captured\n    }\n}\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note"),": The capture image result will be cleared as soon as it is retrieved or\nanother request is made so you should hold onto the reference if you wish to use\nit in other places.")))}p.isMDXComponent=!0}}]);
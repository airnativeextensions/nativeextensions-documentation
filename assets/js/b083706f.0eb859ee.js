"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[79200],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||o;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},38946:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"iOS APNS Message",sidebar_label:"iOS APNS Message"},s=void 0,i={unversionedId:"pushnotifications/apple/ios-apns-message",id:"pushnotifications/apple/ios-apns-message",title:"iOS APNS Message",description:"There are many ways to send notifications to your devices.",source:"@site/docs/pushnotifications/apple/ios-apns-message.md",sourceDirName:"pushnotifications/apple",slug:"/pushnotifications/apple/ios-apns-message",permalink:"/docs/pushnotifications/apple/ios-apns-message",draft:!1,tags:[],version:"current",frontMatter:{title:"iOS APNS Message",sidebar_label:"iOS APNS Message"},sidebar:"pushnotifications",previous:{title:"Pushy Payload",permalink:"/docs/pushnotifications/pushy/pushy-payload"},next:{title:"Firebase Cloud Message",permalink:"/docs/pushnotifications/firebase/firebase-cloud-message"}},p={},c=[{value:"PHP Example",id:"php-example",level:3}],l={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"There are many ways to send notifications to your devices."),(0,a.kt)("p",null,"The basic procedure is once your application has sent the device token (registration id) to your server,\nyour server will send a message to the appropriate service (APNS/GCM) which will deliver the notification\nto the registered device."),(0,a.kt)("h3",{id:"php-example"},"PHP Example"),(0,a.kt)("p",null,"The following is a very basic PHP example, sending a message to a single device."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n// Put your device token here (without spaces):\n$deviceToken = 'DEVICE_TOKEN';\n\n// Put your private key's passphrase here:\n$passphrase = 'passphrase';\n$pemfilename = 'ck.pem';\n\n// SIMPLE PUSH \n$body['aps'] = array(\n    'alert' => array(\n        'title' => \"You have a notification\",\n        'body' => \"Body of the message\",\n    ),\n    'badge' => 1,\n    'sound' => 'default',\n    ); // Create the payload body\n\n////////////////////////////////////////////////////////////////////////////////\n\n$ctx = stream_context_create();\nstream_context_set_option($ctx, 'ssl', 'local_cert', $pemfilename);\nstream_context_set_option($ctx, 'ssl', 'passphrase', $passphrase);\n\n$fp = stream_socket_client(\n    'ssl://gateway.sandbox.push.apple.com:2195', $err,\n    $errstr, 60, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, $ctx); // Open a connection to the APNS server\nif (!$fp)\n    exit(\"Failed to connect: $err $errstr\" . PHP_EOL);\necho 'Connected to APNS' . PHP_EOL;\n$payload = json_encode($body); // Encode the payload as JSON\n$msg = chr(0) . pack('n', 32) . pack('H*', $deviceToken) . pack('n', strlen($payload)) . $payload; // Build the binary notification\n$result = fwrite($fp, $msg, strlen($msg)); // Send it to the server\nif (!$result)\n    echo 'Message not delivered' . PHP_EOL;\nelse\n    echo 'Message successfully delivered' . PHP_EOL;\nfclose($fp); // Close the connection to the server\n")),(0,a.kt)("p",null,"You run these scripts using php:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"php script.php\n")))}d.isMDXComponent=!0}}]);
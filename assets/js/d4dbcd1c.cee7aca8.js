"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[18291],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?i.createElement(f,a(a({ref:t},c),{},{components:n})):i.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},89568:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var i=n(87462),r=(n(67294),n(3905));const o={title:"Products",sidebar_label:"Products"},a=void 0,s={unversionedId:"inappbilling/products",id:"inappbilling/products",title:"Products",description:"At the core of the InAppBilling functionality is a list of products.",source:"@site/docs/inappbilling/products.md",sourceDirName:"inappbilling",slug:"/inappbilling/products",permalink:"/docs/inappbilling/products",draft:!1,tags:[],version:"current",frontMatter:{title:"Products",sidebar_label:"Products"},sidebar:"inappbilling",previous:{title:"Setup Billing Service",permalink:"/docs/inappbilling/billing-service"},next:{title:"Make a Purchase",permalink:"/docs/inappbilling/make-a-purchase"}},l={},p=[{value:"Subscriptions",id:"subscriptions",level:2},{value:"Subscription Offers",id:"subscription-offers",level:2},{value:"Example code",id:"example-code",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"At the core of the InAppBilling functionality is a list of products.\nBefore making any purchases or restoring any transactions you must retrieve a list of the\nproducts you support in your application from the payment service by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"getProducts"),"."),(0,r.kt)("p",null,"This will initialise the list of products available, retrieving information about the product such as: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"price, "),(0,r.kt)("li",{parentName:"ul"},"title, "),(0,r.kt)("li",{parentName:"ul"},"description etc.")),(0,r.kt)("p",null,"Generally we advise immediately retrieving this list as soon as the service is setup,\nhowever you can make this call wherever you see fit, as long as it's done before any\npurchase operations are attempted."),(0,r.kt)("p",null,"If there are any invalid product codes in the specified array the ",(0,r.kt)("inlineCode",{parentName:"p"},"InAppBillingEvent.INVALID_PRODUCT")," event\nwill be dispatched. This error occurs when there was an invalid product ID requested.\nIf this error occurs you should check that you have correctly specified a product ID and\nthat it matches an ID that was setup in the store.\nIn this case the ",(0,r.kt)("inlineCode",{parentName:"p"},"errorCode")," variable of event will contain the invalid product ID.\nYou should not display invalid products to your user. "),(0,r.kt)("p",null,"When this operation completes successfully the ",(0,r.kt)("inlineCode",{parentName:"p"},"InAppBillingEvent.PRODUCTS_LOADED")," event be dispatched.\nThe data in the event contains an array of the successfully loaded products."),(0,r.kt)("p",null,"When this operation fails the ",(0,r.kt)("inlineCode",{parentName:"p"},"InAppBillingEvent.PRODUCTS_FAILED")," event be dispatched.\nWhen this happens you are advised to wait a small interval and retry the call.\nYou may also wish to check if the user has a valid network connection using the\n",(0,r.kt)("a",{parentName:"p",href:"http://airnativeextensions.com/extension/com.distriqt.NetworkInfo"},"NetworkInfo ANE"),"\nor other such method and inform the user of the problem."),(0,r.kt)("p",null,"To retrieve the list of products you call ",(0,r.kt)("inlineCode",{parentName:"p"},"getProducts")," with an array of\nproduct ids eg ",(0,r.kt)("inlineCode",{parentName:"p"},"com.distriqt.testProduct"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"InAppBilling.service.getProducts( [ `com.distriqt.testProduct` ] );\n")),(0,r.kt)("p",null,"More than likely you will have more than one product in your application\nso you must pass all of your product ids to this function."),(0,r.kt)("h2",{id:"subscriptions"},"Subscriptions"),(0,r.kt)("p",null,"Subscriptions are treated slightly differently internally so we need to specify the list\nof subscription product ids separately from the single purchase products."),(0,r.kt)("p",null,"If you have subscriptions in your application you need to pass a second array of\nids to the ",(0,r.kt)("inlineCode",{parentName:"p"},"getProducts")," for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"InAppBilling.service.getProducts( \n    [ `com.distriqt.testProduct` ],\n    [ `com.distriqt.testSubscription` ] \n);\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If you provide a subscription product id in the product array you may receive an\ninvalid product event for that subscription and vice-versa.")),(0,r.kt)("p",null,'A subscription product may contain information about the subscription period. This is only supported through stores that return this information.\nSome stores assume you "know" this information (eg Apple In-App Purchasing) and don\'t return the information. '),(0,r.kt)("p",null,"If it is available ",(0,r.kt)("inlineCode",{parentName:"p"},"product.subscriptionPeriod")," will be a valid instance of the ",(0,r.kt)("inlineCode",{parentName:"p"},"SubscriptionPeriod")," class. If it is unavailable the ",(0,r.kt)("inlineCode",{parentName:"p"},"subscriptionPeriod")," will be ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,r.kt)("p",null,"This class contains two properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"numberOfUnits"),": The number of units per subscription period"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"unit"),": The increment of time that a subscription period is specified in (available values are defined in the class eg : ",(0,r.kt)("inlineCode",{parentName:"li"},"SubscriptionPeriod.UNIT_DAY"),")")),(0,r.kt)("p",null,"For example, if the ",(0,r.kt)("inlineCode",{parentName:"p"},"numberOfUnits")," was ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"unit")," was  ",(0,r.kt)("inlineCode",{parentName:"p"},"SubscriptionPeriod.UNIT_WEEK")," then the subscription payment recurs every 2 weeks (fortnightly). Or if the ",(0,r.kt)("inlineCode",{parentName:"p"},"numberOfUnits")," was ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"unit")," was  ",(0,r.kt)("inlineCode",{parentName:"p"},"SubscriptionPeriod.UNIT_MONTH"),", then the payment recurs every 3 months (or quarterly)."),(0,r.kt)("h2",{id:"subscription-offers"},"Subscription Offers"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"Product")," that represents a subscription will contain information about available offers for the subscription. "),(0,r.kt)("p",null,"See the section on ",(0,r.kt)("a",{parentName:"p",href:"/docs/inappbilling/subscription-offers"},"Subscription Offers")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/inappbilling/introductory-prices"},"Introductory Prices")," for more information."),(0,r.kt)("h2",{id:"example-code"},"Example code"),(0,r.kt)("p",null,"The following demonstrates calling ",(0,r.kt)("inlineCode",{parentName:"p"},"setup")," and then ",(0,r.kt)("inlineCode",{parentName:"p"},"getProducts")," on setup success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var products : Array;\nvar productIds : Array = [ "com.distriqt.testProduct1", "com.distriqt.testProduct2" ];\nvar subscriptionIds : Array = [ "com.distriqt.testSubscription1", "com.distriqt.testSubscription2" ];\n\nInAppBilling.service.addEventListener( InAppBillingEvent.SETUP_SUCCESS,         setup_successHandler );\nInAppBilling.service.addEventListener( InAppBillingEvent.SETUP_FAILURE,         setup_failureHandler );\n\nInAppBilling.service.addEventListener( InAppBillingEvent.PRODUCTS_LOADED,       products_loadedHandler );\nInAppBilling.service.addEventListener( InAppBillingEvent.PRODUCTS_FAILED,       products_failedHandler );\nInAppBilling.service.addEventListener( InAppBillingEvent.INVALID_PRODUCT,       product_invalidHandler );\n\nInAppBilling.service.setup(\n        new BillingService()\n                .setGooglePlayPublicKey( GOOGLE_PLAY_INAPP_BILLING_KEY )\n);\n\n\n\n\nfunction setup_successHandler( event:InAppBillingEvent ):void\n{\n    // Retrieve the product list\n    InAppBilling.service.getProducts( productIds, subscriptionIds );\n}\n\nfunction products_loadedHandler( event:InAppBillingEvent ):void\n{\n    // event.data will be an Array of Product instances for each product and subscription successfully loaded\n    for each (var product:Product in event.data)\n    {\n        trace( product.toString() );\n    }\n    products = event.data;\n}\n')))}d.isMDXComponent=!0}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[769],{827:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return o})),a.d(n,"metadata",(function(){return s})),a.d(n,"rightToc",(function(){return l})),a.d(n,"default",(function(){return c}));var t=a(2),i=a(6),r=(a(0),a(885)),o={title:"Share Files",sidebar_label:"Share Files"},s={unversionedId:"share/share-files",id:"share/share-files",isDocsHomePage:!1,title:"Share Files",description:"There are two operations regarding files exposed by this ANE, referred to as sharing a file (shareFile) and opening a file (showOpenIn).",source:"@site/docs/share/share-files.md",slug:"/share/share-files",permalink:"/docs/share/share-files",version:"current",sidebar_label:"Share Files",sidebar:"share",previous:{title:"Simple Share",permalink:"/docs/share/simple-share"},next:{title:"Launch Applications",permalink:"/docs/share/launch-applications"}},l=[{value:"Sharing a File",id:"sharing-a-file",children:[{value:"AIR",id:"air",children:[]},{value:"Unity",id:"unity",children:[]}]},{value:"Opening a File",id:"opening-a-file",children:[{value:"AIR",id:"air-1",children:[]},{value:"Unity",id:"unity-1",children:[]}]},{value:"Opening a File: Example",id:"opening-a-file-example",children:[{value:"AIR",id:"air-2",children:[]},{value:"Unity",id:"unity-2",children:[]}]}],p={rightToc:l};function c(e){var n=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(t.a)({},p,a,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"There are two operations regarding files exposed by this ANE, referred to as sharing a file (",Object(r.b)("inlineCode",{parentName:"p"},"shareFile"),") and opening a file (",Object(r.b)("inlineCode",{parentName:"p"},"showOpenIn"),")."),Object(r.b)("p",null,"Both of these will display a list of applications however they are subtly different."),Object(r.b)("p",null,"The major difference here is that sharing just attaches the file to an activity whereas opening will actually pass the file data for opening.\nYou will probably want to use the open method in most cases, however feel free to experiment with the different methods\nto see which suits your requirements better."),Object(r.b)("p",null,"To distinguish these methods you should consider ",Object(r.b)("inlineCode",{parentName:"p"},"shareFile")," to be used to send a file to someone, via mail, message etc\nwhereas ",Object(r.b)("inlineCode",{parentName:"p"},"showOpenIn")," is used to open a file in an application, for playback, editing or even to post to social networks."),Object(r.b)("h2",{id:"sharing-a-file"},"Sharing a File"),Object(r.b)("p",null,"Displaying an action to share a file is simply a process of calling ",Object(r.b)("inlineCode",{parentName:"p"},"shareFile")," with the path of the file you wish to share.\nYou control which applications are displayed in the share dialog by setting the ",Object(r.b)("inlineCode",{parentName:"p"},"mimeType"),".\nThe system will then only display applications that can handle that type of file."),Object(r.b)("p",null,"On iOS this uses the ",Object(r.b)("inlineCode",{parentName:"p"},"UIActivityViewController")," to display a list of services that support the supplied data."),Object(r.b)("h3",{id:"air"},"AIR"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),'Share.service.addEventListener( ShareEvent.COMPLETE,    share_shareHandler );\nShare.service.addEventListener( ShareEvent.CANCELLED,   share_shareHandler );\nShare.service.addEventListener( ShareEvent.FAILED,      share_shareHandler );\nShare.service.addEventListener( ShareEvent.CLOSED,      share_shareHandler );\n\n// Here we have packaged a file "TestDocument.pdf" in an "assets" folder in our AS application project\nvar path:String = File.applicationDirectory.nativePath + File.separator + "assets" + File.separator + "TestDocument.pdf";\n\nShare.service.shareFile( path, "TestDocument.pdf", "application/pdf" );\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),'private function share_shareHandler( event:ShareEvent ):void\n{\n    trace( event.type + "::" + event.activityType + "::" + event.error );\n}\n')),Object(r.b)("h3",{id:"unity"},"Unity"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-csharp"}),'// Here we have an image file in the streaming assets (iOS only)\nstring filePath = Path.Combine(\n    UnityEngine.Application.streamingAssetsPath, \n    "image.png"\n);\n\nShare.Instance.OnComplete += Share_OnComplete;\n\nShare.Instance.shareFile( filePath, "image.png", "image/png" );\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-csharp"}),'private void Share_OnComplete(ShareEvent e)\n{\n    Debug.Log("Share_OnComplete");\n}\n')),Object(r.b)("h2",{id:"opening-a-file"},"Opening a File"),Object(r.b)("p",null,'Similarly to "Sharing a File", opening a file can be used to pass a file to another application, for opening,\neditting or posting to a social network. The major difference here is that sharing just attaches the file to\nan activity whereas opening will actually pass the file data for opening. '),Object(r.b)("p",null,"Generally this operation gives better functionality than the share file."),Object(r.b)("p",null,"On iOS this uses the ",Object(r.b)("inlineCode",{parentName:"p"},"UIDocumentInteractionController")," to display a list of applications that can open the specified file."),Object(r.b)("h3",{id:"air-1"},"AIR"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),'var path:String = File.applicationDirectory.nativePath + File.separator + "assets" + File.separator + "TestDocument.pdf";\n\nShare.service.showOpenIn( path, "TestDocument.pdf", "application/pdf" );\n')),Object(r.b)("h3",{id:"unity-1"},"Unity"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-csharp"}),'// Here we have an image file in the streaming assets (iOS only)\nstring filePath = Path.Combine(\n    UnityEngine.Application.streamingAssetsPath, \n    "image.png"\n);\n\nShare.Instance.OnComplete += Share_OnComplete;\n\nShare.Instance.showOpenIn( filePath, "image.png", "image/png" );\n')),Object(r.b)("h2",{id:"opening-a-file-example"},"Opening a File: Example"),Object(r.b)("p",null,"The below shows an example of opening an ",Object(r.b)("inlineCode",{parentName:"p"},"igo")," (instagram only file) and setting the packageName and UTI to limit the applications\ndisplayed to only be Instagram. We also use the ",Object(r.b)("inlineCode",{parentName:"p"},"isApplicationInstalled")," to check that Instagram is installed.\nMore on this function in the ",Object(r.b)("a",Object(t.a)({parentName:"p"},{href:"launch-applications"}),"Launch Applications")," section."),Object(r.b)("h3",{id:"air-2"},"AIR"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),'if (Share.service.isApplicationInstalled( "com.instagram.android", "instagram://app" ))\n{\n    var instagramImage:File = File.applicationStorageDirectory.resolvePath( "assets/instagram.igo" );\n    \n    var options:ShareOptions = new ShareOptions();\n    options.packageName = "com.instagram.android";\n    options.UTI = "com.instagram.photo";\n    \n    Share.service.showOpenIn( instagramImage.nativePath, "", "image/*", options );\n}\n')),Object(r.b)("h3",{id:"unity-2"},"Unity"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-csharp"}),'plugins.share.applications.Application app\n        = new plugins.share.applications.Application(\n            "com.instagram.android",\n            "instagram://");\n\nif (Share.Instance.Applications.IsInstalled(app))\n{\n    string filePath = Path.Combine(UnityEngine.Application.streamingAssetsPath, "instagram.igo");\n    \n    ShareOptions options = new ShareOptions();\n    options.packageName = "com.instagram.android";\n    options.UTI = "com.instagram.photo";\n    \n    Share.Instance.showOpenIn( filePath, "", "image/*", options );\n}\n')))}c.isMDXComponent=!0},885:function(e,n,a){"use strict";a.d(n,"a",(function(){return h})),a.d(n,"b",(function(){return u}));var t=a(0),i=a.n(t);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=i.a.createContext({}),c=function(e){var n=i.a.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},h=function(e){var n=c(e.components);return i.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},b=i.a.forwardRef((function(e,n){var a=e.components,t=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=c(a),b=t,u=h["".concat(o,".").concat(b)]||h[b]||d[b]||r;return a?i.a.createElement(u,s(s({ref:n},p),{},{components:a})):i.a.createElement(u,s({ref:n},p))}));function u(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=a.length,o=new Array(r);o[0]=b;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:t,o[1]=s;for(var p=2;p<r;p++)o[p]=a[p];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"}}]);
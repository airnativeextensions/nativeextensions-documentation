(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[30743],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=s(n),m=i,d=f["".concat(l,".").concat(m)]||f[m]||p[m]||o;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},20237:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var r=n(22122),i=n(19756),o=(n(67294),n(3905)),a={title:"Testing",sidebar_label:"Testing"},c={unversionedId:"branch/testing",id:"branch/testing",isDocsHomePage:!1,title:"Testing",description:"If you're going to test, I'd say testing the following should be a minimum:",source:"@site/docs/branch/testing.md",sourceDirName:"branch",slug:"/branch/testing",permalink:"/docs/branch/testing",version:"current",sidebar_label:"Testing",frontMatter:{title:"Testing",sidebar_label:"Testing"}},l=[],s={toc:l};function u(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you're going to test, I'd say testing the following should be a minimum:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Deferred deep linking"),(0,o.kt)("li",{parentName:"ul"},"Regular deep linking"),(0,o.kt)("li",{parentName:"ul"},"Event tracking"),(0,o.kt)("li",{parentName:"ul"},"Link creation")),(0,o.kt)("p",null,"Here's a sample guide to test deep linking. I'd say manual tests are OK in handling this. Let me know if you need more clarification! "),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.branch.io/pages/apps/ios/#test-deep-link"},"https://docs.branch.io/pages/apps/ios/#test-deep-link")))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[80849],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),u=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return i.createElement(l.Provider,{value:n},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(t),p=r,m=d["".concat(l,".").concat(p)]||d[p]||h[p]||o;return t?i.createElement(m,a(a({ref:n},c),{},{components:t})):i.createElement(m,a({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:r,a[1]=s;for(var u=2;u<o;u++)a[u]=t[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},61075:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var i=t(87462),r=(t(67294),t(3905));const o={title:"Auth - Provider - Phone",sidebar_label:"Phone"},a=void 0,s={unversionedId:"firebase/auth/provider/phone",id:"firebase/auth/provider/phone",title:"Auth - Provider - Phone",description:"You can use Firebase Authentication to sign in a user by sending an SMS message to the user's phone.",source:"@site/docs/firebase/auth/provider/phone.md",sourceDirName:"firebase/auth/provider",slug:"/firebase/auth/provider/phone",permalink:"/docs/firebase/auth/provider/phone",draft:!1,tags:[],version:"current",frontMatter:{title:"Auth - Provider - Phone",sidebar_label:"Phone"},sidebar:"firebase",previous:{title:"Twitter",permalink:"/docs/firebase/auth/provider/twitter"},next:{title:"Custom Auth",permalink:"/docs/firebase/auth/provider/custom-auth"}},l={},u=[{value:"Security Concerns",id:"security-concerns",level:3},{value:"Enable Phone Number sign-in",id:"enable-phone-number-sign-in",level:2},{value:"iOS Info Additions and Entitlements",id:"ios-info-additions-and-entitlements",level:3},{value:"Development Example",id:"development-example",level:4},{value:"Production Example",id:"production-example",level:4},{value:"Send a Verification Code",id:"send-a-verification-code",level:2},{value:"Create a Credential",id:"create-a-credential",level:2},{value:"Sign In",id:"sign-in",level:2},{value:"Next",id:"next",level:2},{value:"Example",id:"example",level:2}],c={toc:u},d="wrapper";function h(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"You can use Firebase Authentication to sign in a user by sending an SMS message to the user's phone.\nThe user signs in using a one-time code contained in the SMS message."),(0,r.kt)("h3",{id:"security-concerns"},"Security Concerns"),(0,r.kt)("p",null,"Authentication using only a phone number, while convenient, is less secure than the other available methods, because possession of a phone number can be easily transferred between users. Also, on devices with multiple user profiles, any user that can receive SMS messages can sign in to an account using the device's phone number."),(0,r.kt)("p",null,"If you use phone number based sign-in in your app, you should offer it alongside more secure sign-in methods, and inform users of the security tradeoffs of using phone number sign-in."),(0,r.kt)("h2",{id:"enable-phone-number-sign-in"},"Enable Phone Number sign-in"),(0,r.kt)("p",null,"To sign in users by SMS, you must first enable the Phone Number sign-in method for your Firebase project:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In the ",(0,r.kt)("a",{parentName:"li",href:"https://console.firebase.google.com/"},"Firebase console"),", open the ",(0,r.kt)("strong",{parentName:"li"},"Authentication")," section."),(0,r.kt)("li",{parentName:"ol"},"On the ",(0,r.kt)("strong",{parentName:"li"},"Sign-in Method")," page, enable the ",(0,r.kt)("strong",{parentName:"li"},"Phone Number")," sign-in method."),(0,r.kt)("li",{parentName:"ol"},"Ensure you have setup your APNs certificates for iOS"),(0,r.kt)("li",{parentName:"ol"},"Add the application descriptor additions below")),(0,r.kt)("h3",{id:"ios-info-additions-and-entitlements"},"iOS Info Additions and Entitlements"),(0,r.kt)("p",null,"With iOS your app must be able to receive APNs notifications from Firebase.\nWhen you sign in a user with their phone number for the first time on a device,\nFirebase Authentication sends a silent push notification to the device to verify\nthat the phone number sign-in request comes from your app. (For this reason, phone\nnumber sign-in cannot be used on a simulator.)"),(0,r.kt)("p",null,"So it's important that you've been through the steps to add your APNs certificates\nto your application in the Firebase console."),(0,r.kt)("p",null,"If you are using FCM or Push Notifications you will already have already added these\nto your application descriptor however if you aren't you need to add the following\ntags to your iPhone Entitlements section in your application descriptor."),(0,r.kt)("h4",{id:"development-example"},"Development Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<InfoAdditions><![CDATA[\n]]></InfoAdditions>\n<requestedDisplayResolution>high</requestedDisplayResolution>\n<Entitlements><![CDATA[\n    \n    <key>get-task-allow</key>\n    <true/>\n    <key>aps-environment</key>\n    <string>development</string>\n    \n    <key>application-identifier</key>\n    <string>X5LW23Q6CJ.com.distriqt.test</string>\n    <key>keychain-access-groups</key>\n    <array>\n        <string>X5LW23Q6CJ.*</string>\n    </array>\n    \n]]></Entitlements>\n")),(0,r.kt)("h4",{id:"production-example"},"Production Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<InfoAdditions><![CDATA[\n]]></InfoAdditions>\n<requestedDisplayResolution>high</requestedDisplayResolution>\n<Entitlements><![CDATA[\n    \n    <key>aps-environment</key>\n    <string>production</string>\n    \n    <key>application-identifier</key>\n    <string>X5LW23Q6CJ.com.distriqt.test</string>\n    <key>keychain-access-groups</key>\n    <array>\n        <string>X5LW23Q6CJ.*</string>\n    </array>\n    \n]]></Entitlements>\n")),(0,r.kt)("h2",{id:"send-a-verification-code"},"Send a Verification Code"),(0,r.kt)("p",null,"To initiate phone number sign-in, present the user an interface that prompts them to type their phone number.\nLegal requirements vary, but as a best practice and to set expectations for your users, you should inform them\nthat if they use phone sign-in, they might receive an SMS message for verification and standard rates apply."),(0,r.kt)("p",null,"Then, pass their phone number to the PhoneAuthProvider.verifyPhoneNumber method to request that Firebase\nverify the user's phone number. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"FirebaseAuth.service.verifyPhoneNumber( phoneNumber, 60 );\n")),(0,r.kt)("p",null,"This call will dispatch one of 3 potential events from ",(0,r.kt)("inlineCode",{parentName:"p"},"FirebaseAuthEvent"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"VERIFY_PHONE_NUMBER_FAILED"),": An error occurred. You can check the event for more details"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"VERIFY_PHONE_NUMBER_CODE_SENT"),": The SMS code has been sent to the specified phone number - you should ask the user to enter this number as below"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SIGNIN_WITH_CREDENTIAL_COMPLETE"),": It is possible at this point that the authentication completes due to either:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Instant verification"),": In some cases the phone number can be instantly verified without needing to send or enter a verification code."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Auto-retrieval"),": On some devices Google Play services can automatically detect the incoming verification SMS and perform verificaiton without user action")))),(0,r.kt)("h2",{id:"create-a-credential"},"Create a Credential"),(0,r.kt)("p",null,"After the user enters the verification code that Firebase sent to the user's phone, create a ",(0,r.kt)("inlineCode",{parentName:"p"},"PhoneAuthCredential")," object, using the verification code and the verification ID that was returned."),(0,r.kt)("p",null,"To create a credential call ",(0,r.kt)("inlineCode",{parentName:"p"},"PhoneAuthProvider.getCredential"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var credential:PhoneAuthCredential = PhoneAuthProvider.getCredential( verificationId, code );\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"To prevent abuse, Firebase enforces a limit on the number of SMS messages that can be sent to a single\nphone number within a period of time. If you exceed this limit, phone number verification requests might\nbe throttled. If you encounter this issue during development, use a different phone number for testing,\nor try the request again later.")),(0,r.kt)("h2",{id:"sign-in"},"Sign In"),(0,r.kt)("p",null,"After you get a PhoneAuthCredential object you can call:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"FirebaseAuth.service.signInWithCredential( credential );\n")),(0,r.kt)("p",null,"This will dispatch a ",(0,r.kt)("inlineCode",{parentName:"p"},"FirebaseAuthEvent.SIGNIN_WITH_CREDENTIAL_COMPLETE")," event when complete\nand you can check the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"success")," to see whether it succeeded. "),(0,r.kt)("h2",{id:"next"},"Next"),(0,r.kt)("p",null,"After a user signs in for the first time, a new user account is created and linked to the credentials \u2014\nthat is, the user name and password, phone number, or auth provider information\u2014the user signed in with.\nThis new account is stored as part of your Firebase project, and can be used to identify a user across\nevery app in your project, regardless of how the user signs in."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"The following example shows the complete sign in process, using a simple text input dialog\n(from the Dialog ANE) to gather the SMS code from the user."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'FirebaseAuth.service.addEventListener( FirebaseAuthEvent.VERIFY_PHONE_NUMBER_FAILED, verifyPhoneNumber_failedHandler );\nFirebaseAuth.service.addEventListener( FirebaseAuthEvent.VERIFY_PHONE_NUMBER_CODE_SENT, verifyPhoneNumber_codeSentHandler );\nFirebaseAuth.service.addEventListener( FirebaseAuthEvent.SIGNIN_WITH_CREDENTIAL_COMPLETE, signInWithPhoneNumber_completeHandler );\n\nFirebaseAuth.service.verifyPhoneNumber( phoneNumber, 60 );\n\nvar verificationId:String;\n\nfunction verifyPhoneNumber_failedHandler( event:FirebaseAuthEvent ):void \n{\n    // An error occurred\n}\n\nfunction verifyPhoneNumber_codeSentHandler( event:FirebaseAuthEvent ):void \n{\n    //  Here we should save the verification id somewhere persistent\n    //  in case the application crashes or something else occurs while\n    //  the user is getting the sms code from their message application.\n    //\n    //  Then we should display an input for the sms code\n    \n    verificationId = event.verificationId;\n\n    //\n    //  Then we should display an input for the sms code\n\n    //  Here we use a simple dialog from the Dialog ANE:\n    var dialogView:DialogView = Dialog.service.create(\n            new AlertBuilder(true)\n                    .setTitle("Enter SMS Code")\n                    .addTextField( "", "SMS Code" )\n                    .addOption("OK", DialogAction.STYLE_POSITIVE)\n                    .build()\n    );\n    dialogView.addEventListener( DialogViewEvent.CLOSED, dialogClosedHandler );\n    dialogView.show();\n}\n\nfunction dialogClosedHandler( event:DialogViewEvent ):void\n{\n    var smsCode:String = event.values[0];\n\n    // Start the sign in with the user entered SMS code\n    signInWithPhoneNumber( verificationId, smsCode );\n}\n\n\nfunction signInWithPhoneNumber( verificationId:String, smsCode:String ):void\n{\n    var credential:PhoneAuthCredential = PhoneAuthProvider.getCredential( verificationId, smsCode );\n    FirebaseAuth.service.signInWithCredential( credential );\n}\n\n\nfunction signInWithPhoneNumber_completeHandler( event:FirebaseAuthEvent ):void \n{\n    trace( "signInWithPhoneNumber: complete: " + event.success );\n\n    if (event.success)\n    {\n        // You will now have a valid user\n        var user:FirebaseUser = FirebaseAuth.service.getCurrentUser();\n    }\n}\n')))}h.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[27272],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>h});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=r.createContext({}),d=function(e){var a=r.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},m=function(e){var a=d(e.components);return r.createElement(s.Provider,{value:a},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=d(t),u=n,h=p["".concat(s,".").concat(u)]||p[u]||c[u]||o;return t?r.createElement(h,i(i({ref:a},m),{},{components:t})):r.createElement(h,i({ref:a},m))}));function h(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[p]="string"==typeof e?e:n,i[1]=l;for(var d=2;d<o;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},24695:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=t(87462),n=(t(67294),t(3905));const o={title:"Camera Modes",sidebar_label:"Camera Modes"},i=void 0,l={unversionedId:"camera/camera-modes",id:"camera/camera-modes",title:"Camera Modes",description:"The CameraDevice supports two CameraModes, one for preview frames and another for image capture.",source:"@site/docs/camera/camera-modes.md",sourceDirName:"camera",slug:"/camera/camera-modes",permalink:"/docs/camera/camera-modes",draft:!1,tags:[],version:"current",frontMatter:{title:"Camera Modes",sidebar_label:"Camera Modes"},sidebar:"camera",previous:{title:"Capturing Images",permalink:"/docs/camera/capturing-images"},next:{title:"Parameters-Flash",permalink:"/docs/camera/parameters-flash"}},s={},d=[{value:"Preview Mode",id:"preview-mode",level:2},{value:"Availability",id:"availability",level:3},{value:"Change Mode",id:"change-mode",level:3},{value:"Camera Mode",id:"camera-mode",level:2},{value:"Availability",id:"availability-1",level:3},{value:"Change Mode",id:"change-mode-1",level:3},{value:"iOS Limitations",id:"ios-limitations",level:2}],m={toc:d},p="wrapper";function c(e){let{components:a,...t}=e;return(0,n.kt)(p,(0,r.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"CameraDevice")," supports two ",(0,n.kt)("inlineCode",{parentName:"p"},"CameraMode"),"s, one for preview frames and another for image capture."),(0,n.kt)("p",null,"The extension will automatically switch between the two for preview and capture images so you no\nlonger have to manually change the mode before starting an image capture (which was required by\nprevious versions of the ANE)."),(0,n.kt)("p",null,"Both these modes can be controlled separately. "),(0,n.kt)("p",null,"Generally you should not attempt to create your own ",(0,n.kt)("inlineCode",{parentName:"p"},"CameraMode")," instance. Instead use one of the\nvalues returned either from the ",(0,n.kt)("inlineCode",{parentName:"p"},"CameraDevice.getCameraModes")," / ",(0,n.kt)("inlineCode",{parentName:"p"},"CameraDevice.getPreviewModes")," or\nthe modes returned in the ",(0,n.kt)("inlineCode",{parentName:"p"},"CameraDeviceInfo")," instance when querying the available devices."),(0,n.kt)("p",null,"This ensures that the mode you are using will be of a supported format for the device."),(0,n.kt)("h2",{id:"preview-mode"},"Preview Mode"),(0,n.kt)("p",null,"The preview mode represents the mode that preview video frames are returned to your application."),(0,n.kt)("h3",{id:"availability"},"Availability"),(0,n.kt)("p",null,"You can retrieve the available preview modes for a camera device by calling the ",(0,n.kt)("inlineCode",{parentName:"p"},"getPreviewModes"),"\nfunction. This returns an ",(0,n.kt)("inlineCode",{parentName:"p"},"Array")," of ",(0,n.kt)("inlineCode",{parentName:"p"},"CameraMode")," instances each representing a mode that is\nsupported by the camera preview."),(0,n.kt)("p",null,"For example you can list all the available preview modes as below:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},'for each (var mode:CameraMode in device.getPreviewModes())\n{\n    log( "    mode: " + mode.mode + " ["+mode.width + "x"+mode.height+"]" );\n}\n')),(0,n.kt)("p",null,"You can also check whether a particular mode is supported on the device:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (device.isPreviewModeSupported( mode ))\n{\n    // mode is supported as a preview mode\n}\n")),(0,n.kt)("h3",{id:"change-mode"},"Change Mode"),(0,n.kt)("p",null,"To change the preview mode:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (device.isPreviewModeSupported( mode ))\n{\n    device.setPreviewMode( mode );\n}\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"Note")," : Changing the preview mode will change the size of the image returned in preview\nframes so you should be prepared to handle a bitmap size change in your preview handler.")),(0,n.kt)("h2",{id:"camera-mode"},"Camera Mode"),(0,n.kt)("p",null,"The camera mode is the mode that images will be captured in when triggered by a capture request."),(0,n.kt)("h3",{id:"availability-1"},"Availability"),(0,n.kt)("p",null,"Similarly to preview modes, you can retrieve the available camera modes supported by the device\nby calling the ",(0,n.kt)("inlineCode",{parentName:"p"},"getCameraModes")," function."),(0,n.kt)("p",null,"For example you can list all the available camera modes as below:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},'for each (var mode:CameraMode in device.getCameraModes())\n{\n    log( "    mode: " + mode.mode + " ["+mode.width + "x"+mode.height+"]" );\n}\n')),(0,n.kt)("p",null,"You can also check whether a particular camera mode is supported on the device:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (device.isCameraModeSupported( mode ))\n{\n    // mode is supported as a camera mode \n}\n")),(0,n.kt)("h3",{id:"change-mode-1"},"Change Mode"),(0,n.kt)("p",null,"Changing the camera mode will not directly affect the current operation of the camera. It simply\nsets the mode that will be used for the next capture request."),(0,n.kt)("p",null,"Again it is a simple matter of calling ",(0,n.kt)("inlineCode",{parentName:"p"},"setCameraMode")," with the required ",(0,n.kt)("inlineCode",{parentName:"p"},"CameraMode")," instance."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},"device.setCameraMode( mode );\n")),(0,n.kt)("h2",{id:"ios-limitations"},"iOS Limitations"),(0,n.kt)("p",null,"Currently iOS only supports capture and previewing using the one mode. So in order for us\nto support both settings we internally change the mode just before capturing an image."),(0,n.kt)("p",null,"This has one side affect that you must wait for the camera parameters to adjust automatically\nbefore capturing the image otherwise you will capture a dark / unadjusted image."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},"var request:CaptureImageRequest = new CaptureImageRequest();\nrequest.waitForAdjustments = true;\n")),(0,n.kt)("p",null,"This is the default, but it is important to be aware of."),(0,n.kt)("p",null,"You can get around this on iOS if you require, by setting the preview mode to be the same\nas the camera mode, this way the mode won't be changed just before capture and the preview\nframe will be the same as the captured image. This has the side effect of reducing the preview\nframe rate as much more data needs to be captured and transferred."))}c.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[95608],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),h=i,m=u["".concat(l,".").concat(h)]||u[h]||p[h]||o;return n?a.createElement(m,r(r({ref:t},c),{},{components:n})):a.createElement(m,r({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var d=2;d<o;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},11578:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var a=n(87462),i=n(63366),o=(n(67294),n(3905)),r=["components"],s={title:"Dispatch Mode",sidebar_label:"Dispatch Mode"},l=void 0,d={unversionedId:"nfc/dispatch-mode",id:"nfc/dispatch-mode",title:"Dispatch Mode",description:"Dispatch mode relies on the system dispatching data about the tags and responding to these events. Additionally you can use this method to register your application to launch when specific tags are detected by the system.",source:"@site/docs/nfc/dispatch-mode.md",sourceDirName:"nfc",slug:"/nfc/dispatch-mode",permalink:"/docs/nfc/dispatch-mode",tags:[],version:"current",frontMatter:{title:"Dispatch Mode",sidebar_label:"Dispatch Mode"},sidebar:"nfc",previous:{title:"Overview",permalink:"/docs/nfc/scanning"},next:{title:"Reader Mode",permalink:"/docs/nfc/reader-mode"}},c=[{value:"Android",id:"android",children:[{value:"Introduction",id:"introduction",children:[],level:3},{value:"Application Dispatch",id:"application-dispatch",children:[{value:"AIR",id:"air",children:[],level:4},{value:"Unity",id:"unity",children:[],level:4},{value:"Examples",id:"examples",children:[],level:4}],level:3},{value:"Foreground Dispatch",id:"foreground-dispatch",children:[],level:3}],level:2},{value:"iOS",id:"ios",children:[{value:"Introduction",id:"introduction-1",children:[],level:3},{value:"Background Dispatch",id:"background-dispatch",children:[{value:"Associated Domains",id:"associated-domains",children:[],level:4}],level:3},{value:"Foreground Dispatch",id:"foreground-dispatch-1",children:[],level:3}],level:2},{value:"Launch Events",id:"launch-events",children:[],level:2}],p={toc:c};function u(e){var t=e.components,s=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Dispatch mode relies on the system dispatching data about the tags and responding to these events. Additionally you can use this method to register your application to launch when specific tags are detected by the system."),(0,o.kt)("h2",{id:"android"},"Android"),(0,o.kt)("h3",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Reading NDEF data from an NFC tag is handled with the tag dispatch system, which analyzes discovered NFC tags, appropriately categorizes the data, and starts an application that is interested in the categorized data. An application that wants to handle the scanned NFC tag can declare an intent filter and request to handle the data."),(0,o.kt)("p",null,"Android-powered devices are usually looking for NFC tags when the screen is unlocked, unless NFC is disabled in the device's Settings menu. When an Android-powered device discovers an NFC tag, the desired behavior is to have the most appropriate activity handle the intent without asking the user what application to use. Because devices scan NFC tags at a very short range, it is likely that making users manually select an activity would force them to move the device away from the tag and break the connection. You should develop your activity to only handle the NFC tags that your activity cares about to prevent the Activity Chooser from appearing."),(0,o.kt)("p",null,"To help you with this goal, Android provides a special tag dispatch system that analyzes scanned NFC tags, parses them, and tries to locate applications that are interested in the scanned data. It does this by:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Parsing the NFC tag and figuring out the MIME type or a URI that identifies the data payload in the tag."),(0,o.kt)("li",{parentName:"ul"},"Encapsulating the MIME type or URI and the payload into an intent. These first two steps are described in ",(0,o.kt)("a",{parentName:"li",href:"https://developer.android.com/guide/topics/connectivity/nfc/nfc.html#ndef"},"How NFC tags are mapped to MIME types and URIs"),"."),(0,o.kt)("li",{parentName:"ul"},"Starts an activity based on the intent. This is described in ",(0,o.kt)("a",{parentName:"li",href:"https://developer.android.com/guide/topics/connectivity/nfc/nfc.html#dispatching"},"How NFC Tags are Dispatched to Applications"),".")),(0,o.kt)("h3",{id:"application-dispatch"},"Application Dispatch"),(0,o.kt)("p",null,"The extension provides an activity that you can use to inform your application about the NFC tag, ",(0,o.kt)("inlineCode",{parentName:"p"},"NFCActionActivity"),". "),(0,o.kt)("p",null,"In order to get your application to automatically launch and handle NFC tags without having to be running you need to add the ",(0,o.kt)("inlineCode",{parentName:"p"},"NFCActionActivity")," to your applications Android manifest and apply the appropriate filters for your application. There are some examples below."),(0,o.kt)("h4",{id:"air"},"AIR"),(0,o.kt)("p",null,'You should construct your intent filters in your manifest additions in order to correctly start this activity and launch your application when a tag of interest is detected by Android. Remove the line referenced in the "Add the extension" manifest additions and replace it with your version with intent filters. '),(0,o.kt)("h4",{id:"unity"},"Unity"),(0,o.kt)("p",null,"Adding these additions to your manifest can be achieved in several ways."),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"NFCManifest.androidlib")," directory in our example to simply merge in the additions to your application. Copy this folder, to your application Assets under ",(0,o.kt)("inlineCode",{parentName:"p"},"Plugins/Android")," and edit the ",(0,o.kt)("inlineCode",{parentName:"p"},"AndroidManifest.xml")," file in the directory to match your requirements. "),(0,o.kt)("p",null,"Alternatively, if you are using a custom android manifest file then simply add the activity to that file."),(0,o.kt)("h4",{id:"examples"},"Examples"),(0,o.kt)("p",null,"Some examples of intent filters are below. "),(0,o.kt)("p",null,"An NDEF record with a url pointing to ",(0,o.kt)("inlineCode",{parentName:"p"},"https://airnativeextensions.com"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<activity android:name="com.distriqt.extension.nfc.activities.NFCActionActivity" android:theme="@android:style/Theme.Translucent.NoTitleBar" >\n    <intent-filter>\n        <action android:name="android.nfc.action.NDEF_DISCOVERED"/>\n        <category android:name="android.intent.category.DEFAULT"/>\n        <data android:scheme="https"\n                android:host="airnativeextensions.com"\n        />\n    </intent-filter>\n</application>\n')),(0,o.kt)("p",null,"An NDEF record with a plain text:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<activity android:name="com.distriqt.extension.nfc.activities.NFCActionActivity" android:theme="@android:style/Theme.Translucent.NoTitleBar" >\n    <intent-filter>\n        <action android:name="android.nfc.action.NDEF_DISCOVERED"/>\n        <category android:name="android.intent.category.DEFAULT"/>\n        <data android:mimeType="text/plain" />\n    </intent-filter>\n</application>\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: You can add multiple ",(0,o.kt)("inlineCode",{parentName:"p"},"intent-filter")," nodes to the ",(0,o.kt)("inlineCode",{parentName:"p"},"activity")," to register for several different tag types.")),(0,o.kt)("h3",{id:"foreground-dispatch"},"Foreground Dispatch"),(0,o.kt)("p",null,"If you don't require your application to be launched from a tag, but instead just need active foreground scanning, (reading tags while your application is active in the foreground) you can use the foreground dispatch method."),(0,o.kt)("p",null,"This involves calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"registerForegroundDispatch()")," method to register your application for NFC tag detection at runtime."),(0,o.kt)("p",null,"Similar to the intent filters above, you need to specify the urls or mimetypes that are relevant to your application. This is done through setting the options in an instance of the ",(0,o.kt)("inlineCode",{parentName:"p"},"ScanOptions")," class."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript",metastring:'title="AIR"',title:'"AIR"'},'var options:ScanOptions = new ScanOptions();\noptions.urls.push( "https://airnativeextensions.com" );  \n\nNFC.service.registerForegroundDispatch( options );\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity"',title:'"Unity"'},'ScanOptions options = new ScanOptions();\noptions.urls = new string[] { "https://airnativeextensions.com" };\n\nNFC.Instance.RegisterForegroundDispatch(options);\n')),(0,o.kt)("h2",{id:"ios"},"iOS"),(0,o.kt)("h3",{id:"introduction-1"},"Introduction"),(0,o.kt)("p",null,"iOS NFC reading is available as an active foreground activity from iOS 11 and as a background / system level activity from iOS 12."),(0,o.kt)("h3",{id:"background-dispatch"},"Background Dispatch"),(0,o.kt)("p",null,"On iPhones that support background tag reading, the system scans for and reads NFC data without requiring users to scan tags using an app. The system displays a pop-up notification each time it reads a new tag. After the user taps the notification, the system delivers the tag data to the appropriate app. If the iPhone is locked, the system prompts the user to unlock the phone before providing the tag data to the app."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note"),"\niPhone XS and later support background tag reading.")),(0,o.kt)("p",null,"After the device scans an NFC tag while in background tag reading mode, the system inspects the tag\u2019s NDEF message for a URI record by looking for an payload object with the following property values:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"typeNameFormat equal to ",(0,o.kt)("inlineCode",{parentName:"li"},"NFCTypeNameFormatNFCWellKnown")),(0,o.kt)("li",{parentName:"ul"},"type equal to ",(0,o.kt)("inlineCode",{parentName:"li"},"\u201cU\u201d"))),(0,o.kt)("p",null,"If the NDEF message contains more than one URI record, the system uses the first one. The URI record must contain either a universal link or a supported URL scheme."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You cannot use a custom URL to launch your application, this only works with a predefined set of url schemes mainly for web urls, email, sms etc.")),(0,o.kt)("p",null,"For tags that contain universal links, the system presents a notification and then launches (or brings to the foreground) the app associated with the universal link after the user taps the notification. (This will happen if the application is in the foreground as well, ie. notification will appear and you will receive an event if the user taps the notification)"),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(14933).Z,width:"800",height:"202"})),(0,o.kt)("p",null,"The system sends the NDEF message to the app and the extension receives it. When you call ",(0,o.kt)("inlineCode",{parentName:"p"},"checkStartupData()")," the ",(0,o.kt)("inlineCode",{parentName:"p"},"NFCEvent")," will be dispatched, following the same process as Android.\nIf there are no installed apps associated with the universal link, the system opens the link in Safari."),(0,o.kt)("h4",{id:"associated-domains"},"Associated Domains"),(0,o.kt)("p",null,"In order for this to work you must setup a universal link for your application and included the domain in the ",(0,o.kt)("inlineCode",{parentName:"p"},"com.apple.developer.associated-domains")," entitlements section of your iphone additions."),(0,o.kt)("p",null,"With AIR this is simply a matter of adding the fields to the entitlements section in your application descriptor, (see ",(0,o.kt)("a",{parentName:"p",href:"add-the-extension#ios"},"Add the Extension")," for more details)."),(0,o.kt)("p",null,"With Unity you will need to add your domain to the ",(0,o.kt)("inlineCode",{parentName:"p"},"NFCConfig.cs")," class in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Assets/distriqt/NFCUnity/NFC/Editor")," folder. Set your domains into the ",(0,o.kt)("inlineCode",{parentName:"p"},"associatedAppDomains")," array, for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity: NFCConfig.cs"',title:'"Unity:','NFCConfig.cs"':!0},'public static string[] associatedAppDomains = new string[] \n{\n    // Add your associated App Domains here\n    "applinks:example.com"\n};\n')),(0,o.kt)("p",null,"These domains will be applied to the entitlements for your application by our post build scripts."),(0,o.kt)("h3",{id:"foreground-dispatch-1"},"Foreground Dispatch"),(0,o.kt)("p",null,"To initiate reading tags on iOS you call the ",(0,o.kt)("inlineCode",{parentName:"p"},"registerForegroundDispatch()")," method. There are no filtering methods on iOS so any NDEF formatted tags will be detected and events dispatched to your application, and any options provided (as in the Android case) will be ignored."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript",metastring:'title="AIR"',title:'"AIR"'},"NFC.service.registerForegroundDispatch();\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity"',title:'"Unity"'},"NFC.Instance.RegisterForegroundDispatch();\n")),(0,o.kt)("p",null,"While scanning on iOS the following dialog will be presented to your user: "),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(90892).Z,width:"632",height:"684"})),(0,o.kt)("p",null,"You can customise the message displayed in this dialog by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"message")," in the options passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"registerForegroundDispatch()"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript",metastring:'title="AIR"',title:'"AIR"'},'var options:ScanOptions = new ScanOptions();\noptions.message = "Hold your device near the item to learn more about it.";\n\nNFC.service.registerForegroundDispatch( options );\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity"',title:'"Unity"'},'ScanOptions options = new ScanOptions();\noptions.message = "Hold your device near the item to learn more about it.";\n\nNFC.Instance.RegisterForegroundDispatch(options);\n')),(0,o.kt)("h2",{id:"launch-events"},"Launch Events"),(0,o.kt)("p",null,"If your application is launched from a tag you need to make sure you follow a few steps to ensure you correctly receive the event."),(0,o.kt)("p",null,"The extension will store the information about the tag until you call ",(0,o.kt)("inlineCode",{parentName:"p"},"checkStartupData()")," which will subsequently trigger the event dispatch.\nThis allows you to ensure you are ready to handle the event before it gets dispatched."),(0,o.kt)("p",null,"So on first run of your application, setup your handlers for the events and then call ",(0,o.kt)("inlineCode",{parentName:"p"},"checkStartupData()"),". If the application was launched from a background tag scan then you will immediately receive the appropriate event."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript",metastring:'title="AIR"',title:'"AIR"'},"NFC.service.addEventListener( NFCEvent.ACTION_NDEF_DISCOVERED, discoveredHandler );\n\nNFC.service.checkStartupData();\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity"',title:'"Unity"'},"NFC.Instance.OnNdefDiscovered += Instance_OnNdefDiscovered;\n\nNFC.Instance.CheckStartupData();\n")),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you do not call ",(0,o.kt)("inlineCode",{parentName:"p"},"checkStartupData()")," then the launch tag event will not be dispatched. However any background or foreground events from then on will work as normal. This solely covers the case where your application was not running at the time the tag was scanned and your application was launched as a result of the scan."))))}u.isMDXComponent=!0},14933:function(e,t,n){t.Z=n.p+"assets/images/ios-nfc-scan-notification-035a85b39d6e31e39403f7133f4302f1.png"},90892:function(e,t,n){t.Z=n.p+"assets/images/ios_scanning_dialog-86b9b0493dd49758d63f07bb43c909cd.png"}}]);
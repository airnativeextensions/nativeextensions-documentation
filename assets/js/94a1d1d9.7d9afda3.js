"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[71314],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||p[m]||i;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(87462),r=n(67294),i=n(86010),o=n(12466),l=n(16550),s=n(91980),u=n(67392),d=n(50012);function c(e){return function(e){var t,n;return null!=(t=null==(n=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=null!=t?t:c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=p(e),[o,l]=(0,r.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const r=null!=(t=a.find((e=>e.default)))?t:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:i}))),[s,u]=h({queryString:n,groupId:a}),[c,f]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[a,i]=(0,d.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),g=(()=>{const e=null!=s?s:c;return m({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);l(e),u(e),f(e)}),[u,f,i]),tabValues:i}}var g=n(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:u}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),p=e=>{const t=e.currentTarget,n=d.indexOf(t),a=u[n].value;a!==l&&(c(t),s(a))},m=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{var a;const t=d.indexOf(e.currentTarget)+1;n=null!=(a=d[t])?a:d[0];break}case"ArrowLeft":{var r;const t=d.indexOf(e.currentTarget)-1;n=null!=(r=d[t])?r:d[d.length-1];break}}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:p},o,{className:(0,i.Z)("tabs__item",v.tabItem,null==o?void 0:o.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=f(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",v.tabList)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(b,(0,a.Z)({},e,t)))}function w(e){const t=(0,g.Z)();return r.createElement(k,(0,a.Z)({key:String(t)},e))}},72065:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));n(74866),n(85162);const i={title:"Migrating to version 1.0"},o=void 0,l={unversionedId:"braze/migrating-to-v1.0",id:"braze/migrating-to-v1.0",title:"Migrating to version 1.0",description:"This latest release brings a number of updates to the extension particularly around the Android integration.",source:"@site/docs/braze/migrating-to-v1.0.mdx",sourceDirName:"braze",slug:"/braze/migrating-to-v1.0",permalink:"/docs/braze/migrating-to-v1.0",draft:!1,tags:[],version:"current",frontMatter:{title:"Migrating to version 1.0"},sidebar:"braze",previous:{title:"Push Notifications",permalink:"/docs/braze/push-notifications"},next:{title:"changelog",permalink:"/docs/braze/changelog"}},s={},u=[{value:"Updating code",id:"updating-code",level:2},{value:"Android Integration",id:"android-integration",level:2},{value:"Minimum SDK Version",id:"minimum-sdk-version",level:3},{value:"Gradle Version",id:"gradle-version",level:3},{value:"Gradle Dependencies",id:"gradle-dependencies",level:3},{value:"Updating the manifest",id:"updating-the-manifest",level:3},{value:"Assets",id:"assets",level:3},{value:"iOS Integration",id:"ios-integration",level:2},{value:"Minimum SDK Version",id:"minimum-sdk-version-1",level:3}],d={toc:u},c="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This latest release brings a number of updates to the extension particularly around the Android integration. "),(0,r.kt)("p",null,"Most importantly the underlying Braze SDK has been updated to the latest releases:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Android: v36.0.0"),(0,r.kt)("li",{parentName:"ul"},"iOS: v12.0.0")),(0,r.kt)("p",null,"The implementation remains largely the same however there are some changes to the integration of the extension that you should be aware of."),(0,r.kt)("p",null,"Additionally make sure you update all dependency extensions to the latest versions as well, ",(0,r.kt)("inlineCode",{parentName:"p"},"apm")," will help you with this."),(0,r.kt)("h2",{id:"updating-code"},"Updating code"),(0,r.kt)("p",null,"You should update your code to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ImageOnlyCard")," instead of the ",(0,r.kt)("inlineCode",{parentName:"p"},"BannerImageCard"),". This change was made to better align with the Braze SDK."),(0,r.kt)("p",null,"This should be a simple change in your code, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"import com.distriqt.extension.braze.contentcards.ImageOnlyCard;\n")),(0,r.kt)("p",null,"should now be used to import the ",(0,r.kt)("inlineCode",{parentName:"p"},"ImageOnlyCard")," class, instead of the previous import for ",(0,r.kt)("inlineCode",{parentName:"p"},"BannerImageCard"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"import com.distriqt.extension.braze.contentcards.BannerImageCard;\n")),(0,r.kt)("h2",{id:"android-integration"},"Android Integration"),(0,r.kt)("h3",{id:"minimum-sdk-version"},"Minimum SDK Version"),(0,r.kt)("p",null,"The minimum SDK version has been updated to 25 (Android 7.1 Nougat) and the target SDK version has been updated to 34 (Android 14)."),(0,r.kt)("h3",{id:"gradle-version"},"Gradle Version"),(0,r.kt)("p",null,"We have updated the required gradle version used to build your application to be higher than the default AIR currently uses. "),(0,r.kt)("p",null,"To specify a higher version add the following to your android node in your application descriptor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<android>\n  <gradleVersion>8.9</gradleVersion>\n  <androidGradlePluginVersion>8.7.3</androidGradlePluginVersion>\n\n  ...\n</android>\n")),(0,r.kt)("p",null,"If you don't do this you will see the following error when building your application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Unexpected failure: Unable to run java: com.adobe.air.ADTException: gradle tool failed: \nFAILURE: Build failed with an exception.\n\n...\n\n   > BUG! exception in phase 'semantic analysis' in source unit '_BuildScript_' Unsupported class file major version 65\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"May 2025: This is not currently automatically handled by ",(0,r.kt)("inlineCode",{parentName:"p"},"apm")," so you will need to add this manually to your application descriptor."),(0,r.kt)("p",{parentName:"admonition"},"We are working on an update to handle this.")),(0,r.kt)("h3",{id:"gradle-dependencies"},"Gradle Dependencies"),(0,r.kt)("p",null,"We have moved to using gradle dependencies within our extensions which will improve dependency resolution, reduce update times and improve compatibility with other extensions."),(0,r.kt)("p",null,"This also reduces the amount of work required to manually integrate the extensions, reducing the additions to the manifest in your application descriptor."),(0,r.kt)("p",null,"We highly recommend using the ",(0,r.kt)("a",{parentName:"p",href:"https://airnativeextensions.com/docs/using-apm"},"apm")," tool to manage the integration of the extensions in your application and to generate your application descriptor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"apm update\napm generate app-descriptor\n")),(0,r.kt)("p",null,"However, you can still integrate the manifest additions manually if you prefer. With this update we recommend starting fresh as there have been a lot of entries to be removed."),(0,r.kt)("h3",{id:"updating-the-manifest"},"Updating the manifest"),(0,r.kt)("p",null,"You can simplify the manifest now as well as the gradle implementation will add a significant amount of the required manifest entries for you.\nIf you use the ",(0,r.kt)("inlineCode",{parentName:"p"},"apm")," tool to generate your application descriptor you will see the manifest entries are significantly reduced and simply running the commands above will update the manifest for you."),(0,r.kt)("p",null,"If you manually update the manifest then, as mentioned above, we recommend starting fresh as there have been a lot of entries to be removed.\nThe minimum manifest additions now looks like the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest android:installLocation="auto" >\n  <uses-sdk android:minSdkVersion="25" android:targetSdkVersion="34" />\n  <uses-permission android:name="android.permission.INTERNET" />\n  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\n  <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />\n  <application>\n    <meta-data android:name="android.max_aspect" android:value="2.5" />\n    <meta-data android:name="android.notch_support" android:value="true"/>\n    <activity android:name="com.distriqt.extension.braze.contentcards.BrazeContentCardsActivity" android:exported="false" android:theme="@style/Theme.AppCompat.NoActionBar"/>\n    <service android:name="com.braze.push.BrazeFirebaseMessagingService" android:exported="false">\n      <intent-filter>\n        <action android:name="com.google.firebase.MESSAGING_EVENT" />\n      </intent-filter>\n    </service>\n    <activity android:name="com.distriqt.core.auth.AuthorisationActivity" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n  </application>\n</manifest>\n')),(0,r.kt)("p",null,"You no longer have to manually add all of the braze, and androidx related manifest entries as these are now added automatically by the gradle implementation."),(0,r.kt)("h3",{id:"assets"},"Assets"),(0,r.kt)("p",null,"You used to have to manually add the following files to your application, however these are now automatically added by the gradle implementation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"braze-html-in-app-message-bridge.js\nfontawesome-webfont.ttf\n")),(0,r.kt)("p",null,"You should remove these files from your application and let the gradle implementation add them for you.\n",(0,r.kt)("strong",{parentName:"p"},"If you are using ",(0,r.kt)("inlineCode",{parentName:"strong"},"apm")," you may find there is no longer an ",(0,r.kt)("inlineCode",{parentName:"strong"},"assets/android")," directory so you should remove this from your package."),"  (This may still exist if you have other airpackages that require android assets)."),(0,r.kt)("h2",{id:"ios-integration"},"iOS Integration"),(0,r.kt)("h3",{id:"minimum-sdk-version-1"},"Minimum SDK Version"),(0,r.kt)("p",null,"The minimum SDK version has been updated to 13. "),(0,r.kt)("p",null,"If you are manaully managing the minimum version, check your info additions for the following: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<key>MinimumOSVersion</key>\n<string>13.0</string>\n")))}p.isMDXComponent=!0}}]);
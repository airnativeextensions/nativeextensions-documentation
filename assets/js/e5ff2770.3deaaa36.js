"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[3640],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var s=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,s,i=function(e,t){if(null==e)return{};var n,s,i={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=s.createContext({}),c=function(e){var t=s.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return s.createElement(u.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,u=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),h=c(n),d=i,m=h["".concat(u,".").concat(d)]||h[d]||p[d]||r;return n?s.createElement(m,o(o({ref:t},l),{},{components:n})):s.createElement(m,o({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a[h]="string"==typeof e?e:i,o[1]=a;for(var c=2;c<r;c++)o[c]=n[c];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}d.displayName="MDXCreateElement"},61264:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=n(87462),i=(n(67294),n(3905));const r={title:"Requesting Access",sidebar_label:"Requesting Access"},o=void 0,a={unversionedId:"permissions/requesting-access",id:"permissions/requesting-access",title:"Requesting Access",description:"When you are going to be accessing a 'dangerous' permission you must check that",source:"@site/docs/permissions/requesting-access.md",sourceDirName:"permissions",slug:"/permissions/requesting-access",permalink:"/docs/permissions/requesting-access",draft:!1,tags:[],version:"current",frontMatter:{title:"Requesting Access",sidebar_label:"Requesting Access"},sidebar:"permissions",previous:{title:"Set Permissions",permalink:"/docs/permissions/set-permissions"},next:{title:"File and Folder Access",permalink:"/docs/permissions/file-folder-access"}},u={},c=[{value:"Check Authorisation",id:"check-authorisation",level:2},{value:"Request Authorisation",id:"request-authorisation",level:2},{value:"Example",id:"example",level:2}],l={toc:c},h="wrapper";function p(e){let{components:t,...r}=e;return(0,i.kt)(h,(0,s.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"When you are going to be accessing a 'dangerous' permission you must check that\nyour application has been allowed access."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(68668).Z,width:"1240",height:"930"})),(0,i.kt)("p",null,"On Android these permissions are listed through the manifest additions. On older\nversions of Android these permissions are accepted when the user installs the\napplication. More modern versions (Marshmallow 6 ","[API v23]","+) require that you request\nthe permissions similar to iOS. You will still need to list them in your manifest\nand then follow the same code below."),(0,i.kt)("h2",{id:"check-authorisation"},"Check Authorisation"),(0,i.kt)("p",null,"You can check the current authorisation status by calling the ",(0,i.kt)("inlineCode",{parentName:"p"},"authorisationStatus()")," method:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"switch (Permissions.service.authorisationStatus())\n{\n    case AuthorisationStatus.AUTHORISED:\n        // This device has been authorised.\n        break;\n        \n    case AuthorisationStatus.NOT_DETERMINED:\n    case AuthorisationStatus.SHOULD_EXPLAIN:\n        // You are yet to ask for authorisation or need to further explain\n        // At this point you should consider your strategy to get your \n        // user to authorise by explaining your need for the permissions\n        break;\n        \n    case AuthorisationStatus.DENIED:\n    case AuthorisationStatus.UNKNOWN:\n    case AuthorisationStatus.RESTRICTED:\n        // The user has disabled the permissions\n        // Advise your user of the lack of permissions as you see fit\n        break;\n}\n")),(0,i.kt)("p",null,"You should respect the ",(0,i.kt)("inlineCode",{parentName:"p"},"SHOULD_EXPLAIN")," status by displaying additional information\nto your user about why you require this functionality."),(0,i.kt)("h2",{id:"request-authorisation"},"Request Authorisation"),(0,i.kt)("p",null,"To request authorisation call the ",(0,i.kt)("inlineCode",{parentName:"p"},"requestAuthorisation()")," function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"Permissions.service.addEventListener( AuthorisationEvent.CHANGED, authorisationChangedHandler );\nPermissions.service.requestAuthorisation();\n")),(0,i.kt)("p",null,"You will then receive a change event if the user accepted your permission request:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"function authorisationChangedHandler( event:AuthorisationEvent ):void\n{\n    // Check the authorisation state again (as above)\n}\n")),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"function checkAndRequestAuthorisation():void \n{\n    switch (Permissions.service.authorisationStatus())\n    {\n        case AuthorisationStatus.AUTHORISED:\n            // This device has been authorised.\n            break;\n            \n        case AuthorisationStatus.NOT_DETERMINED:\n            // You are yet to ask for authorisation \n            Permissions.service.addEventListener( AuthorisationEvent.CHANGED, authorisationChangedHandler );\n            Permissions.service.requestAuthorisation();\n            break;\n\n        case AuthorisationStatus.SHOULD_EXPLAIN:\n            // At this point you should consider your strategy to get your \n            // user to authorise by explaining your need for the permissions\n            \n            // You can attempt a request again or show a dialog as to the requirement for the permission\n\n            break;\n\n        case AuthorisationStatus.DENIED:\n        case AuthorisationStatus.UNKNOWN:\n        case AuthorisationStatus.RESTRICTED:\n            // The user has disabled the permissions\n            // Advise your user of the lack of permissions as you see fit\n            break;\n    }\n}\n\nfunction authorisationChangedHandler( event:AuthorisationEvent ):void\n{\n    // Check the authorisation state again (as above)\n    checkAndRequestAuthorisation();\n}\n")))}p.isMDXComponent=!0},68668:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/userflow-d4ecbb827a3dfd60eef5e1f58b30bb5b.png"}}]);
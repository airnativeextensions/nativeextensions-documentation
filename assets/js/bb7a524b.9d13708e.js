"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[840],{3905:(e,n,i)=>{i.d(n,{Zo:()=>u,kt:()=>h});var o=i(67294);function t(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,o)}return i}function a(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function s(e,n){if(null==e)return{};var i,o,t=function(e,n){if(null==e)return{};var i,o,t={},r=Object.keys(e);for(o=0;o<r.length;o++)i=r[o],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)i=r[o],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var l=o.createContext({}),d=function(e){var n=o.useContext(l),i=n;return e&&(i="function"==typeof e?e(n):a(a({},n),e)),i},u=function(e){var n=d(e.components);return o.createElement(l.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var i=e.components,t=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(i),m=t,h=p["".concat(l,".").concat(m)]||p[m]||c[m]||r;return i?o.createElement(h,a(a({ref:n},u),{},{components:i})):o.createElement(h,a({ref:n},u))}));function h(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=i.length,a=new Array(r);a[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:t,a[1]=s;for(var d=2;d<r;d++)a[d]=i[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,i)}m.displayName="MDXCreateElement"},49493:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=i(87462),t=(i(67294),i(3905));const r={title:"Azure Notifications",sidebar_label:"Azure Notifications"},a=void 0,s={unversionedId:"pushnotifications/azure/azure-notifications",id:"pushnotifications/azure/azure-notifications",title:"Azure Notifications",description:"The Azure implementation is currently unmaintained, if you require an update to this service please contact our support and we will look into it for you.",source:"@site/docs/pushnotifications/azure/azure-notifications.md",sourceDirName:"pushnotifications/azure",slug:"/pushnotifications/azure/azure-notifications",permalink:"/docs/pushnotifications/azure/azure-notifications",draft:!1,tags:[],version:"current",frontMatter:{title:"Azure Notifications",sidebar_label:"Azure Notifications"},sidebar:"pushnotifications",previous:{title:"Setup",permalink:"/docs/pushnotifications/windows/windows-notification-service"},next:{title:"Pushy",permalink:"/docs/pushnotifications/pushy/"}},l={},d=[{value:"Required ANEs",id:"required-anes",level:2},{value:"Google Play Services",id:"google-play-services",level:3},{value:"Firebase",id:"firebase",level:3},{value:"Extension IDs",id:"extension-ids",level:2},{value:"Android",id:"android",level:2},{value:"Manifest Additions",id:"manifest-additions",level:2},{value:"Android Gradle Version",id:"android-gradle-version",level:3},{value:"iOS",id:"ios",level:2}],u={toc:d},p="wrapper";function c(e){let{components:n,...i}=e;return(0,t.kt)(p,(0,o.Z)({},u,i,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("admonition",{title:"Unmaintained",type:"warning"},(0,t.kt)("p",{parentName:"admonition"},"The Azure implementation is currently unmaintained, if you require an update to this service please contact our support and we will look into it for you.")),(0,t.kt)("p",null,"Azure Notification Hubs provide an easy-to-use, multi-platform, scaled-out push engine.\nWith a single cross-platform API call, you can easily send targeted and personalized\npush notifications to any mobile platform from any cloud or on-premises backend."),(0,t.kt)("p",null,"You can read more about Azure Notification Hubs ",(0,t.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/notification-hubs/notification-hubs-push-notification-overview"},"here")),(0,t.kt)("p",null,"This ANE implements the requirements to register correctly with your Azure Notification\nHub, sending the required device information so your uses will automatically be registered\nwith Azure when you go through the normal registration process using the Azure version of\nPush Notifications."),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://portal.azure.com"},"https://portal.azure.com")),(0,t.kt)("h2",{id:"required-anes"},"Required ANEs"),(0,t.kt)("p",null,"To use this service add the ",(0,t.kt)("inlineCode",{parentName:"p"},"com.distriqt.PushNotifications.Azure.ane")," variant of the extension to your project in place of  ",(0,t.kt)("inlineCode",{parentName:"p"},"com.distriqt.PushNotifications.ane"),". You should only add one of the variants to your project. If you need to support multiple services please use the All Services variant."),(0,t.kt)("p",null,"All variants of the Push Notifications extension have the same extension id: ",(0,t.kt)("inlineCode",{parentName:"p"},"com.distriqt.PushNotifications")," so you should add this to your extensions list in your application descriptor:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-xml"},"<extensions>\n    ...\n    \n    <extensionID>com.distriqt.PushNotifications</extensionID>\n    \n    ...\n</extensions>\n")),(0,t.kt)("p",null,"Make sure you have added the common ANEs from the ",(0,t.kt)("a",{parentName:"p",href:"../add-the-extension"},"Add the Extension")," section first. This includes the Core and Android Support ANEs."),(0,t.kt)("h3",{id:"google-play-services"},"Google Play Services"),(0,t.kt)("p",null,"This ANE requires usage of certain aspects of the Google Play Services client library.\nThe client library is available as a series of ANEs that you add into your applications packaging options.\nEach separate ANE provides a component from the Play Services client library and are used by different ANEs.\nThese client libraries aren't packaged with this ANE as they are used by multiple ANEs and separating them\nwill avoid conflicts, allowing you to use multiple ANEs in the one application."),(0,t.kt)("p",null,"This ANE requires the following Google Play Services:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.distriqt.playservices.Base.ane"},"com.distriqt.playservices.Base.ane"))),(0,t.kt)("p",null,"You must include the above native extensions in your application along with this extension,\nand you need to ensure they are packaged with your application."),(0,t.kt)("p",null,"You can access the Google Play Services client library extensions here: ",(0,t.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-GooglePlayServices"},"https://github.com/distriqt/ANE-GooglePlayServices"),"."),(0,t.kt)("h3",{id:"firebase"},"Firebase"),(0,t.kt)("p",null,"To use Firebase Cloud Messaging you must include the Firebase core and messaging libraries and configure your Firebase application.\nThe core libraries are available in the following extensions alongside the Google Play Services:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.google.firebase.core.ane"},"com.google.firebase.core")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.google.firebase.messaging.ane"},"com.google.firebase.messaging"))),(0,t.kt)("p",null,"See the ",(0,t.kt)("a",{parentName:"p",href:"https://docs.airnativeextensions.com/docs/firebase/setup/configuration-files/"},"Firebase configuration documentation")," on how to configure your application."),(0,t.kt)("h2",{id:"extension-ids"},"Extension IDs"),(0,t.kt)("p",null,"The following should be added to your ",(0,t.kt)("inlineCode",{parentName:"p"},"extensions")," node in your application descriptor to identify all the required ANEs in your application:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-xml"},"<extensions>\n    <extensionID>com.distriqt.PushNotifications</extensionID>\n    <extensionID>com.distriqt.Core</extensionID>\n    \n    <extensionID>com.distriqt.playservices.Base</extensionID>\n    \n    <extensionID>com.google.firebase.core</extensionID>\n    <extensionID>com.google.firebase.messaging</extensionID>\n    <extensionID>com.google.android.datatransport</extensionID>\n    <extensionID>com.google.dagger</extensionID>\n    <extensionID>androidx.core</extensionID>\n    <extensionID>androidx.browser</extensionID>\n</extensions>\n")),(0,t.kt)("h2",{id:"android"},"Android"),(0,t.kt)("p",null,"Azure uses FCM on Android (not on iOS), so you will need to go through the setup of Firebase for Android\nin your application. See the ",(0,t.kt)("a",{parentName:"p",href:"https://docs.airnativeextensions.com/docs/firebase/"},"Firebase wiki")," on this process\nbut just ignore any iOS references."),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"The Microsoft documentation for this process can be found ",(0,t.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/notification-hubs/notification-hubs-android-push-notification-google-fcm-get-started"},"here"))),(0,t.kt)("h2",{id:"manifest-additions"},"Manifest Additions"),(0,t.kt)("p",null,"You must add all the Firebase related manifest additions along with several additions for Cloud Messaging\nand several particular additions for Azure. Please note that these are very similar to the additions for\nFirebase however they are different."),(0,t.kt)("p",null,"The following shows the complete manifest additions node. You must replace ",(0,t.kt)("inlineCode",{parentName:"p"},"APPLICATION_PACKAGE")," with your\nAIR application's Java package name, something like ",(0,t.kt)("inlineCode",{parentName:"p"},"air.com.distriqt.test"),".\nGenerally this is your AIR application id prefixed by ",(0,t.kt)("inlineCode",{parentName:"p"},"air.")," unless you have specified no air flair in your build options."),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"If any other of our ANEs require the ",(0,t.kt)("inlineCode",{parentName:"p"},"FileProvider")," only add ",(0,t.kt)("strong",{parentName:"p"},"one")," of the references.\nThe file provider will be shared amongst our extensions.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest android:installLocation="auto">\n    <uses-sdk android:minSdkVersion="19" />\n    \n    <uses-permission android:name="android.permission.INTERNET" />\n    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\n    <uses-permission android:name="android.permission.WAKE_LOCK" />\n    \n    \x3c!-- OPTIONAL --\x3e\n    <uses-permission android:name="android.permission.VIBRATE"/>\n    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />\n    \n    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />\n    <permission android:name="APPLICATION_PACKAGE.permission.C2D_MESSAGE" android:protectionLevel="signature" />\n    <uses-permission android:name="APPLICATION_PACKAGE.permission.C2D_MESSAGE" />\n    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />\n\n    \x3c!-- BADGE --\x3e\n    <uses-permission android:name="com.sec.android.provider.badge.permission.READ" />\n    <uses-permission android:name="com.sec.android.provider.badge.permission.WRITE" />\n    <uses-permission android:name="com.htc.launcher.permission.READ_SETTINGS" />\n    <uses-permission android:name="com.htc.launcher.permission.UPDATE_SHORTCUT" />\n    <uses-permission android:name="com.sonyericsson.home.permission.BROADCAST_BADGE" />\n    <uses-permission android:name="com.sonymobile.home.permission.PROVIDER_INSERT_BADGE" />\n    <uses-permission android:name="com.anddoes.launcher.permission.UPDATE_COUNT" />\n    <uses-permission android:name="com.majeur.launcher.permission.UPDATE_BADGE" />\n    <uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE" />\n    <uses-permission android:name="com.huawei.android.launcher.permission.READ_SETTINGS" />\n    <uses-permission android:name="com.huawei.android.launcher.permission.WRITE_SETTINGS" />\n    <uses-permission android:name="android.permission.READ_APP_BADGE" />\n    <uses-permission android:name="com.oppo.launcher.permission.READ_SETTINGS" />\n    <uses-permission android:name="com.oppo.launcher.permission.WRITE_SETTINGS" />\n    <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_READ" />\n    <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_WRITE" />\n    \n    <application>\n        <activity android:name="com.distriqt.core.auth.AuthorisationActivity" android:theme="@android:style/Theme.Translucent.NoTitleBar" android:exported="false" />\n        \n        \x3c!-- AZURE CLOUD MESSAGING --\x3e\n        <service android:name="com.distriqt.extension.pushnotifications.azure.AzureInstanceIDService">\n            <intent-filter>\n                <action android:name="com.google.firebase.INSTANCE_ID_EVENT"/>\n            </intent-filter>\n        </service>\n        <service android:name="com.distriqt.extension.pushnotifications.azure.AzureRegistrationService" android:exported="false" />\n        \n        <service android:name="com.distriqt.extension.pushnotifications.fcm.FcmMessagingService">\n            <intent-filter>\n                <action android:name="com.google.firebase.MESSAGING_EVENT"/>\n            </intent-filter>\n        </service>\n\n\n        \x3c!-- NOTIFICATIONS --\x3e\n        <receiver android:name="com.distriqt.extension.pushnotifications.notifications.receivers.NotificationReceiver">\n            <intent-filter>\n                <action android:name="APPLICATION_PACKAGE.NOTIFICATION_SELECTED" />\n                <action android:name="APPLICATION_PACKAGE.NOTIFICATION_DELETED" />\n                <action android:name="APPLICATION_PACKAGE.NOTIFICATION_ACTION" />\n                <data android:scheme="dtpn" />\n            </intent-filter>\n            <intent-filter>\n                <action android:name="android.intent.action.BOOT_COMPLETED" />\n            </intent-filter>\n        </receiver>\n        <provider\n            android:name="com.distriqt.extension.pushnotifications.content.FileProvider"\n            android:authorities="APPLICATION_PACKAGE.pushnotificationsfileprovider"\n            android:grantUriPermissions="true"\n            android:exported="false">\n            <meta-data \n                android:name="android.support.FILE_PROVIDER_PATHS" \n                android:resource="@xml/distriqt_pushnotifications_paths" />\n        </provider>\n\n            \n    </application>\n    \n</manifest>\n')),(0,t.kt)("h3",{id:"android-gradle-version"},"Android Gradle Version"),(0,t.kt)("p",null,"We have updated the required gradle version used to build your application to be higher than the default AIR currently uses (April 2025). "),(0,t.kt)("p",null,"To specify a higher version add the following to your android node in your application descriptor:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-xml"},"<android>\n    <gradleVersion>8.9</gradleVersion>\n    <androidGradlePluginVersion>8.7.3</androidGradlePluginVersion>\n\n  ...\n</android>\n")),(0,t.kt)("p",null,"If you don't do this you will see the following error when building your application:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Unexpected failure: Unable to run java: com.adobe.air.ADTException: gradle tool failed: \nFAILURE: Build failed with an exception.\n\n...\n\n   > BUG! exception in phase 'semantic analysis' in source unit '_BuildScript_' Unsupported class file major version 65\n")),(0,t.kt)("h2",{id:"ios"},"iOS"),(0,t.kt)("p",null,"Azure uses APNS on iOS so you will have to go through the ",(0,t.kt)("a",{parentName:"p",href:"../apple/apple-push-notification-service"},"setup process of APNS"),"\nbefore using Azure."),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"The Microsoft documentation for this process can be found ",(0,t.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/notification-hubs/notification-hubs-ios-apple-push-notification-apns-get-started"},"here"))),(0,t.kt)("p",null,"APNS requires a few additions to the Info plist and Entitlements section\nof your application to correctly configure your application for push notifications. "),(0,t.kt)("p",null,"You should add the listing below to application descriptor iPhone node."),(0,t.kt)("p",null,"You must replace the ",(0,t.kt)("inlineCode",{parentName:"p"},"BUNDLE_SEED_ID")," and ",(0,t.kt)("inlineCode",{parentName:"p"},"BUNDLE_IDENTIFIER")," with the information you\ngathered when setting up your application. Also make sure you set the environment\ncorrectly either using production or development, both are shown in the example\nbelow with the production version commented out. More on this below."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-xml"},"<iPhone>\n    <InfoAdditions><![CDATA[\n    ]]></InfoAdditions>\n    <requestedDisplayResolution>high</requestedDisplayResolution>\n    <Entitlements><![CDATA[\n        \n        \x3c!-- DEVELOPMENT --\x3e\n        <key>get-task-allow</key>\n        <true/>\n        <key>aps-environment</key>\n        <string>development</string>\n        \n        \x3c!-- PRODUCTION --\x3e\n        \x3c!--\n        <key>get-task-allow</key>\n        <false/>\n        <key>aps-environment</key>\n        <string>production</string>\n        --\x3e\n        \n        <key>application-identifier</key>\n        <string>BUNDLE_SEED_ID.BUNDLE_IDENTIFIER</string>\n        <key>keychain-access-groups</key>\n        <array>\n            <string>BUNDLE_SEED_ID.*</string>\n        </array>\n        \n    ]]></Entitlements>\n</iPhone>\n")),(0,t.kt)("p",null,"The first entitlement field is the ",(0,t.kt)("inlineCode",{parentName:"p"},"aps-environment"),". This field indicates whether\nwe are using the development or the production environment. It must be either\n",(0,t.kt)("inlineCode",{parentName:"p"},"development")," or ",(0,t.kt)("inlineCode",{parentName:"p"},"production")," and depends on which configuration you are using.\nIf you are running a debug build you should use development. If you are looking\nto publish the application to the AppStore, you should use production."),(0,t.kt)("p",null,"You should have noted the ",(0,t.kt)("inlineCode",{parentName:"p"},"BUNDLE_SEED_ID")," (or App ID Prefix) and ",(0,t.kt)("inlineCode",{parentName:"p"},"BUNDLE_IDENTIFIER"),"\nwhen you were setting up your application in the iOS developer center.\nThe seed id should be a unique ten character string and the identifier should be\nsimilar to your AIR application id."))}c.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[49030],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var i=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=i.createContext({}),d=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=d(e.components);return i.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(t),m=o,g=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return t?i.createElement(g,r(r({ref:n},c),{},{components:t})):i.createElement(g,r({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,r=new Array(a);r[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var d=2;d<a;d++)r[d]=t[d];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},43548:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var i=t(87462),o=t(63366),a=(t(67294),t(3905)),r=["components"],s={title:"Google Cloud Messaging",sidebar_label:"Google Cloud Messaging"},l=void 0,d={unversionedId:"pushnotifications/gcm/google-cloud-messaging",id:"pushnotifications/gcm/google-cloud-messaging",title:"Google Cloud Messaging",description:"Google is advising you use Firebase Cloud Messaging in place of GCM and have deprecated the GCM service.",source:"@site/docs/pushnotifications/gcm/google-cloud-messaging.md",sourceDirName:"pushnotifications/gcm",slug:"/pushnotifications/gcm/google-cloud-messaging",permalink:"/docs/pushnotifications/gcm/google-cloud-messaging",tags:[],version:"current",frontMatter:{title:"Google Cloud Messaging",sidebar_label:"Google Cloud Messaging"}},c=[{value:"Required ANEs",id:"required-anes",children:[{value:"Google Play Services",id:"google-play-services",children:[],level:3}],level:2},{value:"Extension IDs",id:"extension-ids",children:[],level:2},{value:"Caveats and Characteristics",id:"caveats-and-characteristics",children:[],level:2},{value:"Set up the GCM Service",id:"set-up-the-gcm-service",children:[{value:"Creating a Google API Project",id:"creating-a-google-api-project",children:[],level:3},{value:"Enabling the GCM Service",id:"enabling-the-gcm-service",children:[],level:3}],level:2},{value:"Sender ID",id:"sender-id",children:[],level:2},{value:"Manifest Additions",id:"manifest-additions",children:[{value:"MultiDex Applications",id:"multidex-applications",children:[{value:"Using AndroidX",id:"using-androidx",children:[],level:4}],level:3}],level:2}],p={toc:c};function u(e){var n=e.components,s=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},p,s,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Google is advising you use ",(0,a.kt)("a",{parentName:"p",href:"../firebase/firebase-cloud-messaging"},"Firebase Cloud Messaging")," in place of GCM and have deprecated the GCM service.\nYou should move to the more powerful FCM platform."),(0,a.kt)("p",{parentName:"blockquote"},"We will no longer be maintaining the development of the GCM service.")),(0,a.kt)("p",null,"Google Cloud Messaging (GCM) is Android\u2019s push notification system.\nThe GCM system is a very simple system to get up and running."),(0,a.kt)("p",null,"Google Cloud Messaging for Android (GCM) is a free service that helps developers\nsend data from servers to their Android applications on Android devices. This\ncould be a lightweight message telling the Android application that there is new\ndata to be fetched from the server (for instance, a movie uploaded by a friend),\nor it could be a message containing up to 4kb of payload data (so apps like\ninstant messaging can consume the message directly). The GCM service handles all\naspects of queueing of messages and delivery to the target Android application\nrunning on the target device."),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(38215).Z,width:"603",height:"457"})),(0,a.kt)("p",null,"Architecturally it\u2019s very similar to the APNS process, though \u201cdevice token\u201d\nis called \u201cregistration ID\u201d the process is relatively identical. The actual\nimplementation is very different though as we will see in the following."),(0,a.kt)("h2",{id:"required-anes"},"Required ANEs"),(0,a.kt)("h3",{id:"google-play-services"},"Google Play Services"),(0,a.kt)("p",null,"This ANE requires usage of certain aspects of the Google Play Services client library.\nThe client library is available as a series of ANEs that you add into your applications packaging options.\nEach separate ANE provides a component from the Play Services client library and are used by different ANEs.\nThese client libraries aren't packaged with this ANE as they are used by multiple ANEs and separating them\nwill avoid conflicts, allowing you to use multiple ANEs in the one application."),(0,a.kt)("p",null,"This ANE requires the following Google Play Services:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.distriqt.playservices.Base.ane"},"com.distriqt.playservices.Base.ane")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.distriqt.playservices.GCM.ane"},"com.distriqt.playservices.GCM.ane"))),(0,a.kt)("p",null,"You must include the above native extensions in your application along with this extension,\nand you need to ensure they are packaged with your application."),(0,a.kt)("p",null,"You can access the Google Play Services client library extensions here: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-GooglePlayServices"},"https://github.com/distriqt/ANE-GooglePlayServices"),"."),(0,a.kt)("h2",{id:"extension-ids"},"Extension IDs"),(0,a.kt)("p",null,"The following should be added to your ",(0,a.kt)("inlineCode",{parentName:"p"},"extensions")," node in your application descriptor to identify all the required ANEs in your application:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<extensions>\n    <extensionID>com.distriqt.PushNotifications</extensionID>\n    <extensionID>com.distriqt.Core</extensionID>\n\n    <extensionID>com.distriqt.playservices.Base</extensionID>\n    <extensionID>com.distriqt.playservices.GCM</extensionID>\n\n    <extensionID>com.google.android.datatransport</extensionID>\n    <extensionID>com.google.dagger</extensionID>\n    <extensionID>androidx.core</extensionID>\n    <extensionID>androidx.browser</extensionID>\n</extensions>\n")),(0,a.kt)("h1",{id:"setup"},"Setup"),(0,a.kt)("h2",{id:"caveats-and-characteristics"},"Caveats and Characteristics"),(0,a.kt)("p",null,"Here are the primary characteristics of Google Cloud Messaging (GCM):"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"It allows 3rd-party application servers to send messages to their Android applications."),(0,a.kt)("li",{parentName:"ul"},"An Android application on an Android device doesn't need to be running to receive messages.\nThe system will wake up the Android application via Intent broadcast when the message\narrives, as long as the application is set up with the proper broadcast receiver and permissions."),(0,a.kt)("li",{parentName:"ul"},"It does not provide any built-in user interface or other handling for message data.\nGCM simply passes raw message data received straight to the Android application, which\nhas full control of how to handle it. For example, the application might post a\nnotification, display a custom user interface, or silently sync data."),(0,a.kt)("li",{parentName:"ul"},"It requires devices running Android 2.2 or higher that also have the Google Play Store\napplication installed, or or an emulator running Android 2.2 with Google APIs. However,\nyou are not limited to deploying your Android applications through Google Play Store."),(0,a.kt)("li",{parentName:"ul"},"It uses an existing connection for Google services. For pre-3.0 devices, this\nrequires users to set up their Google account on their mobile devices. A Google\naccount is not a requirement on devices running Android 4.0.4 or higher.")),(0,a.kt)("p",null,"It\u2019s important to note a few things here. Firstly the device needs to have the\nGoogle Play Store application installed and secondly that there needs to be an\nactive Google account on the device (pre Android v4.0.4). You must be aware of\nthese limitations when designing and testing your application."),(0,a.kt)("h2",{id:"set-up-the-gcm-service"},"Set up the GCM Service"),(0,a.kt)("p",null,'You will need to sign up to the Google Cloud Messaging service. This process is\noutlined in the "Getting Started" section on the Android developer site:'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://developer.android.com/guide/google/gcm/gs.html"},"http://developer.android.com/guide/google/gcm/gs.html"))),(0,a.kt)("p",null,'You need to follow these instructions to get your API keys. If you are using our\nnative extension in AIR then anything further can be ignored (i.e. anything from\n"Install the Helper Libraries"), though you will need it when developing your\nown native application.'),(0,a.kt)("p",null,"We have summarised the instructions below."),(0,a.kt)("h3",{id:"creating-a-google-api-project"},"Creating a Google API Project"),(0,a.kt)("p",null,"To create a Google API project:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Open the Google APIs Console Page")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If you haven't created an API project yet, this page will prompt you to do so: ",(0,a.kt)("img",{src:t(53896).Z,width:"370",height:"337"})," "),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"Note: If you already have existing projects, the first page you see will be the\nDashboard page. From there you can create a new project by opening the project\ndrop-down menu (upper left corner) and choosing ",(0,a.kt)("inlineCode",{parentName:"p"},"Other projects > Create"),"."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Click Create project. Your browser URL will change to something like: ",(0,a.kt)("a",{parentName:"p",href:"https://code.google.com/apis/console/#project:4815162342"},"https://code.google.com/apis/console/#project:4815162342"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Take note of the value after #project: (4815162342 in this example).\nThis is your project number, and it will be used later on as the ",(0,a.kt)("strong",{parentName:"p"},"GCM sender ID"),"."))),(0,a.kt)("h3",{id:"enabling-the-gcm-service"},"Enabling the GCM Service"),(0,a.kt)("p",null,"To obtain an API key:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"In the main Google APIs Console page, select API Access.\nYou will see a screen that resembles the following:  ",(0,a.kt)("img",{src:t(57398).Z,width:"440",height:"238"}))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Click Create new Server key. Either a server key or a browser key should work.\nThe advantage to using a server key is that it allows you to whitelist IP\naddresses. The following screen appears: ",(0,a.kt)("img",{src:t(18765).Z,width:"440",height:"245"}))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Click Create: ",(0,a.kt)("img",{src:t(94371).Z,width:"440",height:"269"})))),(0,a.kt)("p",null,"Take note of the API key value (YourKeyWillBeShownHere) in this example, as it will be used later on."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: If you need to rotate the key, click Generate new key. A new key will be\ncreated while the old one will still be active for up to 24 hours. If you want\nto get rid of the old key immediately (for example, if you feel it was compromised),\nclick Delete key.")),(0,a.kt)("p",null,"You should now have two important pieces of information:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Your GCM Sender ID"),(0,a.kt)("li",{parentName:"ul"},"Your API key")),(0,a.kt)("p",null,"You will need these later so make note of them."),(0,a.kt)("p",null,"If you are building your own application server you should read the following\ndocumentation: ",(0,a.kt)("a",{parentName:"p",href:"https://developers.google.com/cloud-messaging/gcm#server"},"https://developers.google.com/cloud-messaging/gcm#server")),(0,a.kt)("h2",{id:"sender-id"},"Sender ID"),(0,a.kt)("p",null,"You should make note of your Sender ID in the tutorial for usage when setting up your ",(0,a.kt)("inlineCode",{parentName:"p"},"Service"),"."),(0,a.kt)("h2",{id:"manifest-additions"},"Manifest Additions"),(0,a.kt)("p",null,"Push notifications require a few additions to the manifest to be able to receive notifications and react accordingly. "),(0,a.kt)("p",null,"You should add the listing below to your manifest, with the following changes."),(0,a.kt)("p",null,"There are two important things here. If you are adding this to an existing application, you must make sure you have\nonly one application node inside your manifest additions.\nYou\u2019ll need to copy the receiver and service from that node and place that inside your current application node.\nIf you have two application nodes the push notifications may not work."),(0,a.kt)("p",null,"You should make sure you only have one application node in your manifest additions.\nCombine the sections together if you have more than one."),(0,a.kt)("p",null,"Secondly you need to replace all the application ID's: ",(0,a.kt)("inlineCode",{parentName:"p"},"APPLICATION_PACKAGE")," with your application package name.\nIt is important here that you use the full application ID with the air. prefix (unless you are removing this during your packaging)\nas this will be your actual application package name in the Android system."),(0,a.kt)("p",null,"It will be of the form ",(0,a.kt)("inlineCode",{parentName:"p"},"air.com.distriqt.test")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"If any other of our ANEs require the ",(0,a.kt)("inlineCode",{parentName:"p"},"FileProvider")," only add ",(0,a.kt)("strong",{parentName:"p"},"one")," of the references.\nThe file provider will be shared amongst our extensions.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest android:installLocation="auto">\n    <uses-sdk android:minSdkVersion="14" />\n    \n    <uses-permission android:name="android.permission.INTERNET"/>\n    \n    \x3c!-- OPTIONAL --\x3e\n    <uses-permission android:name="android.permission.VIBRATE"/>\n    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />\n    \n    \x3c!-- GCM PERMISSIONS --\x3e                \n    <uses-permission android:name="android.permission.WAKE_LOCK" />\n    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />\n    \n    \x3c!-- Only this application can receive the messages and registration result --\x3e \n    <permission android:name="APPLICATION_PACKAGE.permission.C2D_MESSAGE" android:protectionLevel="signature" />\n    <uses-permission android:name="APPLICATION_PACKAGE.permission.C2D_MESSAGE" />\n    \n    <application>\n        <meta-data android:name="com.google.android.gms.version" android:value="@integer/google_play_services_version" />\n    \n        <receiver\n            android:name="com.google.android.gms.gcm.GcmReceiver"\n            android:exported="true"\n            android:permission="com.google.android.c2dm.permission.SEND" >\n            <intent-filter>\n                <action android:name="com.google.android.c2dm.intent.RECEIVE" />\n                <category android:name="APPLICATION_PACKAGE" />\n            </intent-filter>\n        </receiver>\n        <service\n            android:name="com.distriqt.extension.pushnotifications.gcm.GcmListenerService"\n            android:exported="false" >\n            <intent-filter>\n                <action android:name="com.google.android.c2dm.intent.RECEIVE" />\n            </intent-filter>\n        </service>\n        <service\n            android:name="com.distriqt.extension.pushnotifications.gcm.InstanceIDListenerService"\n            android:exported="false">\n            <intent-filter>\n                <action android:name="com.google.android.gms.iid.InstanceID" />\n            </intent-filter>\n        </service>\n        <service android:name="com.distriqt.extension.pushnotifications.gcm.RegistrationIntentService" android:exported="false" />\n\n        <activity android:name="com.distriqt.extension.pushnotifications.PushNotificationsActivity">\n            <intent-filter>\n                <action android:name="APPLICATION_PACKAGE.NOTIFICATION_DEFAULT" />\n                <category android:name="android.intent.category.DEFAULT" />\n            </intent-filter>\n        </activity>             \n        \n\n        \n        \x3c!-- NOTIFICATIONS --\x3e\n        <receiver android:name="com.distriqt.extension.pushnotifications.notifications.receivers.NotificationReceiver">\n            <intent-filter>\n                <action android:name="APPLICATION_PACKAGE.NOTIFICATION_SELECTED" />\n                <action android:name="APPLICATION_PACKAGE.NOTIFICATION_DELETED" />\n                <action android:name="APPLICATION_PACKAGE.NOTIFICATION_ACTION" />\n                <data android:scheme="dtpn" />\n            </intent-filter>\n            <intent-filter>\n                <action android:name="android.intent.action.BOOT_COMPLETED" />\n            </intent-filter>\n        </receiver>\n        <provider\n            android:name="com.distriqt.extension.pushnotifications.content.FileProvider"\n            android:authorities="APPLICATION_PACKAGE.pushnotificationsfileprovider"\n            android:grantUriPermissions="true"\n            android:exported="false">\n            <meta-data \n                android:name="android.support.FILE_PROVIDER_PATHS" \n                android:resource="@xml/distriqt_pushnotifications_paths" />\n        </provider>\n\n\n        \n    </application>\n        \n</manifest>\n')),(0,a.kt)("h3",{id:"multidex-applications"},"MultiDex Applications"),(0,a.kt)("p",null,"If you have a large application and are supporting Android 4.x then you will need to ensure you enable your application to correctly support MultiDex to allow the application to be broken up into smaller dex packages."),(0,a.kt)("p",null,"This is enabled by default with releases of AIR v25+, except in the Android 4.x case where you need to change the manifest additions for the application tag to match the following and use the ",(0,a.kt)("inlineCode",{parentName:"p"},"MultiDexApplication"),"."),(0,a.kt)("h4",{id:"using-androidx"},"Using AndroidX"),(0,a.kt)("p",null,"This will require the addition of the ",(0,a.kt)("inlineCode",{parentName:"p"},"androidx.multidex")," extension which contains the ",(0,a.kt)("inlineCode",{parentName:"p"},"androidx.multidex.MultiDexApplication")," implementation."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest android:installLocation="auto">\n    \x3c!-- PERMISSIONS --\x3e\n\n    <application android:name="androidx.multidex.MultiDexApplication">\n\n        \x3c!-- ACTIVITIES / RECEIVERS / SERVICES --\x3e\n\n    </application>\n</manifest>\n')))}u.isMDXComponent=!0},57398:function(e,n,t){n.Z=t.p+"assets/images/pushnotifications-tutorial-gcm-api-1-access-dfabbea33f020c8e4a07769e4bb73ab1.png"},18765:function(e,n,t){n.Z=t.p+"assets/images/pushnotifications-tutorial-gcm-api-2-config-server-key-80137d7f7a2dd63b653b30ba8ccd54a5.png"},94371:function(e,n,t){n.Z=t.p+"assets/images/pushnotifications-tutorial-gcm-api-3-key-fd2068a68946c11df6053355c617211c.png"},53896:function(e,n,t){n.Z=t.p+"assets/images/pushnotifications-tutorial-gcm-create-api-proj-f1d1219a66d316e2093122fa7fddd311.png"},38215:function(e,n,t){n.Z=t.p+"assets/images/pushnotifications-tutorial-gcm-7fb92794359b9a849761bdf965d20521.png"}}]);
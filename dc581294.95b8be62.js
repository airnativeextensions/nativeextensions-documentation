(window.webpackJsonp=window.webpackJsonp||[]).push([[654],{709:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return o})),t.d(r,"metadata",(function(){return s})),t.d(r,"rightToc",(function(){return c})),t.d(r,"default",(function(){return u}));var a=t(2),n=t(6),i=(t(0),t(815)),o={title:"Firestore - Perform simple and compound queries",sidebar_label:"Perform simple and compound queries"},s={unversionedId:"firebase/firestore/perform-simple-and-compound-queries",id:"firebase/firestore/perform-simple-and-compound-queries",isDocsHomePage:!1,title:"Firestore - Perform simple and compound queries",description:"Cloud Firestore provides powerful query functionality for specifying which documents you want to retrieve from a collection. These queries can also be used with either query() or addSnapshotListener(), as described in Get Data and Get Realtime Updates.",source:"@site/docs/firebase/firestore/perform-simple-and-compound-queries.md",slug:"/firebase/firestore/perform-simple-and-compound-queries",permalink:"/docs/firebase/firestore/perform-simple-and-compound-queries",version:"current",sidebar_label:"Perform simple and compound queries",sidebar:"firebase",previous:{title:"Firestore - Get realtime updates",permalink:"/docs/firebase/firestore/get-realtime-updates"},next:{title:"Firestore - Order and limit data",permalink:"/docs/firebase/firestore/order-and-limit-data"}},c=[{value:"Simple queries",id:"simple-queries",children:[]},{value:"Compound queries",id:"compound-queries",children:[]},{value:"Query limitations",id:"query-limitations",children:[]}],l={rightToc:c};function u(e){var r=e.components,t=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,t,{components:r,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Cloud Firestore provides powerful query functionality for specifying which documents you want to retrieve from a collection. These queries can also be used with either ",Object(i.b)("inlineCode",{parentName:"p"},"query()")," or ",Object(i.b)("inlineCode",{parentName:"p"},"addSnapshotListener()"),", as described in ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"get-data"}),"Get Data")," and ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"get-realtime-updates"}),"Get Realtime Updates"),"."),Object(i.b)("h2",{id:"simple-queries"},"Simple queries"),Object(i.b)("p",null,"The following query returns all cities with state ",Object(i.b)("inlineCode",{parentName:"p"},"CA"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'// Create a reference to the cities collection\nvar citiesRef:CollectionReference = FirebaseFirestore.service.collection("cities");\n\n// Create a query against the collection.\nvar query:Query = citiesRef.whereEqualTo("state", "CA");\n')),Object(i.b)("p",null,"The following query returns all the capital cities:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'var query:Query = FirebaseFirestore.service.collection("cities").whereEqualTo("capital", true);\n')),Object(i.b)("p",null,"There are several variants of the ",Object(i.b)("inlineCode",{parentName:"p"},"where...")," method each take two parameters, a field to filter on and a value."),Object(i.b)("p",null,"Some example filters:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'citiesRef.whereEqualTo("state", "CA");\ncitiesRef.whereLessThan("population", 100000);\ncitiesRef.whereGreaterThanOrEqualTo("name", "San Francisco");\n')),Object(i.b)("h2",{id:"compound-queries"},"Compound queries"),Object(i.b)("p",null,"You can also chain multiple ",Object(i.b)("inlineCode",{parentName:"p"},"where...")," methods to create more specific queries (logical AND). However, to combine the equality operator (==) with a range or array-contains clause (<, <=, >, >=, or array_contains), make sure to create a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://firebase.google.com/docs/firestore/query-data/indexing"}),"composite index"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'citiesRef.whereEqualTo("state", "CO").whereEqualTo("name", "Denver");\ncitiesRef.whereEqualTo("state", "CA").whereLessThan("population", 1000000);\n')),Object(i.b)("p",null,"You can only perform range comparisons (<, <=, >, >=) on a single field."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Valid"),": Range filters on only one field"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'citiesRef.whereGreaterThanOrEqualTo("state", "CA")\n        .whereLessThanOrEqualTo("state", "IN");\ncitiesRef.whereEqualTo("state", "CA")\n        .whereGreaterThan("population", 1000000);\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Invalid"),": Range filters on different fields:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'citiesRef.whereGreaterThanOrEqualTo("state", "CA").whereGreaterThan("population", 100000);\n')),Object(i.b)("h2",{id:"query-limitations"},"Query limitations"),Object(i.b)("p",null,"Cloud Firestore does not support the following types of queries:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Queries with range filters on different fields, as described in the previous section."),Object(i.b)("li",{parentName:"ul"},"Single queries across multiple collections or subcollections. Each query runs against a single collection of documents. For more information about how your data structure affects your queries, see Choose a Data Structure."),Object(i.b)("li",{parentName:"ul"},"Logical OR queries. In this case, you should create a separate query for each OR condition and merge the query results in your app."),Object(i.b)("li",{parentName:"ul"},'Queries with a != clause. In this case, you should split the query into a greater-than query and a less-than query. For example, although the query clause where("age", "!=", "30") is not supported, you can get the same result set by combining two queries, one with the clause where("age", "<", "30") and one with the clause where("age", ">", 30).')))}u.isMDXComponent=!0},815:function(e,r,t){"use strict";t.d(r,"a",(function(){return p})),t.d(r,"b",(function(){return m}));var a=t(0),n=t.n(a);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=n.a.createContext({}),u=function(e){var r=n.a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},p=function(e){var r=u(e.components);return n.a.createElement(l.Provider,{value:r},e.children)},b={inlineCode:"code",wrapper:function(e){var r=e.children;return n.a.createElement(n.a.Fragment,{},r)}},d=n.a.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),d=a,m=p["".concat(o,".").concat(d)]||p[d]||b[d]||i;return t?n.a.createElement(m,s(s({ref:r},l),{},{components:t})):n.a.createElement(m,s({ref:r},l))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);
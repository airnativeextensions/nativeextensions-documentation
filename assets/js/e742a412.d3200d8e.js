"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[79532],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,g=c["".concat(l,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(g,r(r({ref:t},p),{},{components:n})):a.createElement(g,r({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,r[1]=s;for(var d=2;d<i;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),o=n(86010);const i={tabItem:"tabItem_Ymn6"};function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(i.tabItem,r),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>x});var a=n(87462),o=n(67294),i=n(86010),r=n(12466),s=n(16550),l=n(91980),d=n(67392),p=n(50012);function c(e){return function(e){var t,n;return null!=(t=null==(n=o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function u(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=null!=t?t:c(n);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,l._X)(i),(0,o.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=u(e),[r,s]=(0,o.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const o=null!=(t=a.find((e=>e.default)))?t:a[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:i}))),[l,d]=g({queryString:n,groupId:a}),[c,h]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[a,i]=(0,p.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),f=(()=>{const e=null!=l?l:c;return m({value:e,tabValues:i})?e:null})();(0,o.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);s(e),d(e),h(e)}),[d,h,i]),tabValues:i}}var f=n(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:s,selectValue:l,tabValues:d}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.o5)(),u=e=>{const t=e.currentTarget,n=p.indexOf(t),a=d[n].value;a!==s&&(c(t),l(a))},m=e=>{var t;let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{var a;const t=p.indexOf(e.currentTarget)+1;n=null!=(a=p[t])?a:p[0];break}case"ArrowLeft":{var o;const t=p.indexOf(e.currentTarget)-1;n=null!=(o=p[t])?o:p[p.length-1];break}}null==(t=n)||t.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},d.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:u},r,{className:(0,i.Z)("tabs__item",b.tabItem,null==r?void 0:r.className,{"tabs__item--active":s===t})}),null!=n?n:t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=h(e);return o.createElement("div",{className:(0,i.Z)("tabs-container",b.tabList)},o.createElement(y,(0,a.Z)({},e,t)),o.createElement(k,(0,a.Z)({},e,t)))}function x(e){const t=(0,f.Z)();return o.createElement(v,(0,a.Z)({key:String(t)},e))}},42811:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(87462),o=(n(67294),n(3905));const i={toc:[{value:"Install APM",id:"install-apm",level:3},{value:"Setup an APM project",id:"setup-an-apm-project",level:3},{value:"Check your github token",id:"check-your-github-token",level:4}]},r="wrapper";function s(e){let{components:t,...n}=e;return(0,o.kt)(r,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"If you don't have an APM project setup, expand the guide below to setup an APM project before installing the extension.")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Setup APM"),(0,o.kt)("p",null,(0,o.kt)("h3",{id:"install-apm"},"Install APM"),(0,o.kt)("p",null,"If you haven't installed ",(0,o.kt)("inlineCode",{parentName:"p"},"apm")," follow the install guide on ",(0,o.kt)("a",{parentName:"p",href:"https://airsdk.dev/docs/basics/install-apm"},"airsdk.dev"),"."),(0,o.kt)("h3",{id:"setup-an-apm-project"},"Setup an APM project"),(0,o.kt)("p",null,"You will need an APM project for your application."),(0,o.kt)("p",null,"There are many ways to do this and for more options see the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/airsdk/apm/wiki/Usage-ProjectsAndPackages#initialise"},"APM documentation"),". Here we will just initialise a new empty project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apm init\n")),(0,o.kt)("h4",{id:"check-your-github-token"},"Check your github token"),(0,o.kt)("p",null,"We use github to secure our extensions so you must have created a github personal access token and configured ",(0,o.kt)("inlineCode",{parentName:"p"},"apm")," to use it. "),(0,o.kt)("p",null,"To do this create a token using this ",(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token"},"guide from github")," and then set it in your apm config using:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apm config set github_token ghp_XXXXXXXXXXXXXXXXXXXXXXXXXXXX\n")),(0,o.kt)("p",null,"If you don't do this correctly you may find the install will fail."))))}s.isMDXComponent=!0},29337:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>A,contentTitle:()=>x,default:()=>E,frontMatter:()=>v,metadata:()=>N,toc:()=>w});var a=n(87462),o=(n(67294),n(3905)),i=n(74866),r=n(85162),s=n(42811);const l={toc:[{value:"Install the extension",id:"install-the-extension",level:3}]},d="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Note: All of the commands below should be run in a terminal / command prompt in the root directory of your application, generally the level above your source directory.")),(0,o.kt)(s.ZP,{mdxType:"SetupAPM"}),(0,o.kt)("h3",{id:"install-the-extension"},"Install the extension"),(0,o.kt)("p",null,"Install the extension by running: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apm install com.distriqt.Firebase\n")),(0,o.kt)("p",null,"This will download and install the extension, required assets, and all dependencies."),(0,o.kt)("p",null,"Once complete ",(0,o.kt)("inlineCode",{parentName:"p"},"apm")," will have created something like the following file structure: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},".\n|____ ane\n| |____ com.distriqt.Firebase.ane       # Firebase extension\n| |____ [dependencies]\n|____ apm_packages                      # cache directory - ignore\n|____ project.apm                       # apm project file\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add the ",(0,o.kt)("inlineCode",{parentName:"li"},"ane")," directory to your IDE. ",(0,o.kt)("em",{parentName:"li"},"See the tutorials located ",(0,o.kt)("a",{parentName:"em",href:"/docs/tutorials/getting-started"},"here")," on adding an extension to your IDE."))),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"We suggest you use the locations directly in your builds rather than copying the files elsewhere. The reason for this is if you ever go to update the extensions using ",(0,o.kt)("inlineCode",{parentName:"p"},"apm")," that these updates will be pulled into your build automatically.")))}p.isMDXComponent=!0;const c={toc:[{value:"Dependencies",id:"dependencies",level:3},{value:"Core",id:"core",level:4},{value:"Android Support",id:"android-support",level:4},{value:"Google Play Services",id:"google-play-services",level:4},{value:"Firebase Core",id:"firebase-core",level:4}]},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The following guide is used to manually install the extension, download dependencies and update the application descriptor. We highly recommend installing extensions using ",(0,o.kt)("inlineCode",{parentName:"p"},"apm"),". Using ",(0,o.kt)("inlineCode",{parentName:"p"},"apm")," will automate the installation and automatically handle updates and dependencies along with greatly simplifying the application descriptor generation.")),(0,o.kt)("p",null,"First step is always to add the extension to your development environment. "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-Firebase/raw/master/lib/com.distriqt.Firebase.ane"},(0,o.kt)("inlineCode",{parentName:"a"},"com.distriqt.Firebase")))),(0,o.kt)("p",null,"Download the extension from the repository and then follow the tutorial located ",(0,o.kt)("a",{parentName:"p",href:"/docs/tutorials/getting-started"},"here")," to add the extension to your development environment."),(0,o.kt)("p",null,"You can access all the Firebase extensions here: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-Firebase"},"https://github.com/distriqt/ANE-Firebase")),(0,o.kt)("h3",{id:"dependencies"},"Dependencies"),(0,o.kt)("p",null,"Many of our extensions use some common libraries, for example, the Android Support libraries."),(0,o.kt)("p",null,"We have to separate these libraries into separate extensions in order to avoid multiple versions of the libraries being included in your application and causing packaging conflicts. This means that you need to include some additional extensions in your application along with the main extension file."),(0,o.kt)("p",null,"You will add these extensions as you do with any other extension, and you need to ensure it is packaged with your application."),(0,o.kt)("p",null,"Each of the separate components of Firebase will require additional ANEs which will be identified in the individual sections however the following list will be required by any AIR application using Firebase."),(0,o.kt)("h4",{id:"core"},"Core"),(0,o.kt)("p",null,"The Core extension is required by this extension. You must include and package this extension in your application."),(0,o.kt)("p",null,"The Core extension doesn't provide any functionality in itself but provides support libraries and frameworks used by our extensions. It also includes some centralised code for some common actions that can cause issues if they are implemented in each individual extension."),(0,o.kt)("p",null,"You can access this extension here: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-Core"},"https://github.com/distriqt/ANE-Core"),"."),(0,o.kt)("h4",{id:"android-support"},"Android Support"),(0,o.kt)("p",null,"The Android Support libraries encompass the Android Support, Android X and common Google libraries. "),(0,o.kt)("p",null,"These libraries are specific to Android. There are no issues including these on all platforms, they are just ",(0,o.kt)("strong",{parentName:"p"},"required")," for Android."),(0,o.kt)("p",null,"This extension requires the following extensions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-AndroidSupport/raw/master/lib/androidx.core.ane"},(0,o.kt)("inlineCode",{parentName:"a"},"androidx.core"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-AndroidSupport/raw/master/lib/com.google.android.datatransport.ane"},(0,o.kt)("inlineCode",{parentName:"a"},"com.google.android.datatransport"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-AndroidSupport/raw/master/lib/com.jetbrains.kotlin.ane"},(0,o.kt)("inlineCode",{parentName:"a"},"com.jetbrains.kotlin")))),(0,o.kt)("p",null,"You can access these extensions here: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-AndroidSupport"},"https://github.com/distriqt/ANE-AndroidSupport"),"."),(0,o.kt)("h4",{id:"google-play-services"},"Google Play Services"),(0,o.kt)("p",null,"This ANE requires usage of certain aspects of the Google Play Services client library.\nThe client library is available as a series of ANEs that you add into your applications packaging options.\nEach separate ANE provides a component from the Play Services client library and are used by different ANEs.\nThese client libraries aren't packaged with this ANE as they are used by multiple ANEs and separating them\nwill avoid conflicts, allowing you to use multiple ANEs in the one application."),(0,o.kt)("p",null,"This ANE requires the following Google Play Services:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.distriqt.playservices.AdsIdentifier.ane"},(0,o.kt)("inlineCode",{parentName:"a"},"com.distriqt.playservices.AdsIdentifier"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.distriqt.playservices.Base.ane"},(0,o.kt)("inlineCode",{parentName:"a"},"com.distriqt.playservices.Base"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.distriqt.playservices.CloudMessaging.ane"},(0,o.kt)("inlineCode",{parentName:"a"},"com.distriqt.playservices.CloudMessaging")))),(0,o.kt)("p",null,"You must include the above native extensions in your application along with this extension,\nand you need to ensure they are packaged with your application."),(0,o.kt)("p",null,"You can access the Google Play Services client library extensions here: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-GooglePlayServices"},"https://github.com/distriqt/ANE-GooglePlayServices"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")," The Google Play Services and Android Support ANEs are only ",(0,o.kt)("strong",{parentName:"p"},"required")," on Android devices.\nThere is no problem packaging these ANEs with all platforms as there are default implementations available which will allow your code to package without errors\nhowever if you are only building an iOS application feel free to remove the Google Play Services ANEs from your application.")),(0,o.kt)("h4",{id:"firebase-core"},"Firebase Core"),(0,o.kt)("p",null,"To use any Firebase functionality you must include the core Firebase libraries and configure your Firebase application. The core libraries are available in the ",(0,o.kt)("inlineCode",{parentName:"p"},"com.google.firebase.core")," extension alongside the Google Play Services:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.google.firebase.core.ane"},(0,o.kt)("inlineCode",{parentName:"a"},"com.google.firebase.core")))),(0,o.kt)("p",null,"This extension is located separately due to several of our other extensions relying on the Firebase core libraries."))}m.isMDXComponent=!0;const g={toc:[]},h="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(h,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Updating your application descriptor will insert the required ",(0,o.kt)("inlineCode",{parentName:"p"},"extensionID"),"'s and generate the manifest and info additions for your application. "),(0,o.kt)("p",null,"You update your application descriptor by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apm generate app-descriptor src/MyApp-app.xml\n")),(0,o.kt)("p",null,"Change the path (",(0,o.kt)("inlineCode",{parentName:"p"},"src/MyApp-app.xml"),") to point to your application descriptor."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This will modify your application descriptor replacing the manifest additions and info additions with the ones generated from ",(0,o.kt)("inlineCode",{parentName:"p"},"apm"),". "),(0,o.kt)("p",{parentName:"admonition"},"You should backup your application descriptor before running this command to ensure you don't lose any information."),(0,o.kt)("p",{parentName:"admonition"},"If you need to insert custom data into these sections see the guides for ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/airsdk/apm/wiki/Usage-Generate#android"},"Android")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/airsdk/apm/wiki/Usage-Generate#ios"},"iOS"))))}f.isMDXComponent=!0;const b={toc:[{value:"Extension IDs",id:"extension-ids",level:3},{value:"Android",id:"android",level:3},{value:"Manifest Additions",id:"manifest-additions",level:4},{value:"Component Discovery Service",id:"component-discovery-service",level:5},{value:"iOS",id:"ios",level:3},{value:"Info Additions",id:"info-additions",level:4}]},y="wrapper";function k(e){let{components:t,...n}=e;return(0,o.kt)(y,(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"extension-ids"},"Extension IDs"),(0,o.kt)("p",null,"The following should be added to your ",(0,o.kt)("inlineCode",{parentName:"p"},"extensions")," node in your application descriptor to identify all the required ANEs in your application:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<extensions>\n\n    <extensionID>androidx.core</extensionID>\n    <extensionID>com.distriqt.Core</extensionID>\n    <extensionID>com.distriqt.Firebase</extensionID>\n    <extensionID>com.distriqt.playservices.AdsIdentifier</extensionID>\n    <extensionID>com.distriqt.playservices.Base</extensionID>\n    <extensionID>com.distriqt.playservices.CloudMessaging</extensionID>\n    <extensionID>com.google.android.datatransport</extensionID>\n    <extensionID>com.google.firebase.core</extensionID>\n    <extensionID>com.jetbrains.kotlin</extensionID>\n\n</extensions>\n")),(0,o.kt)("h3",{id:"android"},"Android"),(0,o.kt)("h4",{id:"manifest-additions"},"Manifest Additions"),(0,o.kt)("p",null,"Add the following to your manifest additions. "),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Ensure you:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"replace ",(0,o.kt)("inlineCode",{parentName:"li"},"APPLICATION_PACKAGE")," with your AIR application's Java package name, something like ",(0,o.kt)("inlineCode",{parentName:"li"},"air.com.distriqt.test"),". Generally this is your AIR application id prefixed by ",(0,o.kt)("inlineCode",{parentName:"li"},"air.")," unless you have specified no air flair in your build options;"),(0,o.kt)("li",{parentName:"ul"},"you only have one ",(0,o.kt)("inlineCode",{parentName:"li"},"<application>")," node in your manifest additions combining them if you have ones from other extensions;"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest android:installLocation="auto" >\n  <uses-sdk android:minSdkVersion="24" android:targetSdkVersion="34"/>\n  <permission android:name="air.com.distriqt.test.DYNAMIC_RECEIVER_NOT_EXPORTED_PERMISSION" android:protectionLevel="signature"/>\n  <uses-permission android:name="air.com.distriqt.test.DYNAMIC_RECEIVER_NOT_EXPORTED_PERMISSION"/>\n  \x3c!-- Required permission for App measurement to run. --\x3e\n  <uses-permission android:name="android.permission.INTERNET"/>\n  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>\n  <uses-permission android:name="android.permission.WAKE_LOCK"/>\n  <uses-permission android:name="com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE"/>\n  <uses-permission android:name="com.google.android.gms.permission.AD_ID"/>\n  \x3c!-- Required by older versions of Google Play services to create IID tokens --\x3e\n  <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE"/>\n  <application android:appComponentFactory="androidx.core.app.CoreComponentFactory">\n    <meta-data android:name="android.max_aspect" android:value="2.5"/>\n    <meta-data android:name="android.notch_support" android:value="true"/>\n    <provider android:name="androidx.startup.InitializationProvider" android:authorities="APPLICATION_PACKAGE.androidx-startup" android:exported="false">\n      <meta-data android:name="androidx.lifecycle.ProcessLifecycleInitializer" android:value="androidx.startup"/>\n    </provider>\n    <meta-data android:name="google_analytics_automatic_screen_reporting_enabled" android:value="false"/>\n    <receiver android:name="com.google.android.gms.measurement.AppMeasurementReceiver" android:enabled="true" android:exported="false"/>\n    <service android:name="com.google.android.gms.measurement.AppMeasurementService" android:enabled="true" android:exported="false"/>\n    <service android:name="com.google.android.gms.measurement.AppMeasurementJobService" android:enabled="true" android:exported="false" android:permission="android.permission.BIND_JOB_SERVICE"/>\n    <meta-data android:name="com.google.android.gms.version" android:value="@integer/google_play_services_version"/>\n    <activity android:name="com.google.android.gms.common.api.GoogleApiActivity" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n    <service android:name="com.google.firebase.components.ComponentDiscoveryService" android:directBootAware="true" android:exported="false">\n      <meta-data android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar" android:value="com.google.firebase.components.ComponentRegistrar"/>\n      <meta-data android:name="com.google.firebase.components:com.google.firebase.installations.FirebaseInstallationsKtxRegistrar" android:value="com.google.firebase.components.ComponentRegistrar" />\n      <meta-data android:name="com.google.firebase.components:com.google.firebase.installations.FirebaseInstallationsRegistrar" android:value="com.google.firebase.components.ComponentRegistrar"/>\n      <meta-data android:name="com.google.firebase.components:com.google.firebase.datatransport.TransportRegistrar" android:value="com.google.firebase.components.ComponentRegistrar"/>\n      <meta-data android:name="com.google.firebase.components:com.google.firebase.abt.component.AbtRegistrar" android:value="com.google.firebase.components.ComponentRegistrar"/>\n      <meta-data android:name="com.google.firebase.components:com.google.firebase.FirebaseCommonKtxRegistrar" android:value="com.google.firebase.components.ComponentRegistrar" />\n      <meta-data android:name="com.google.firebase.components:com.google.firebase.ktx.FirebaseCommonLegacyRegistrar" android:value="com.google.firebase.components.ComponentRegistrar" />\n    </service>\n    <service android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService" android:exported="false" android:permission="android.permission.BIND_JOB_SERVICE"/>\n    <receiver android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver" android:exported="false"/>\n    <service android:name="com.google.android.datatransport.runtime.backends.TransportBackendDiscovery" android:exported="false">\n      <meta-data android:name="backend:com.google.android.datatransport.cct.CctBackendFactory" android:value="cct"/>\n    </service>\n    <activity android:name="com.distriqt.core.auth.AuthorisationActivity" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n    <provider android:name="com.google.firebase.provider.FirebaseInitProvider" android:authorities="APPLICATION_PACKAGE.firebaseinitprovider" android:directBootAware="true" android:exported="false" android:initOrder="100"/>\n  </application>\n</manifest>\n')),(0,o.kt)("h5",{id:"component-discovery-service"},"Component Discovery Service"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"com.google.firebase.components.ComponentDiscoveryService")," is particularly important for Firebase configuration."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"meta-data")," tags that are added to this service specify the components that should be initialised by Firebase and you must ensure that you have added the appropriate tags for the services you are using."),(0,o.kt)("p",null,"Firebase depends on Analytics so you must at least include the following tags:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Analytics:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<meta-data android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar" android:value="com.google.firebase.components.ComponentRegistrar"/>\n<meta-data android:name="com.google.firebase.components:com.google.firebase.installations.FirebaseInstallationsKtxRegistrar" android:value="com.google.firebase.components.ComponentRegistrar" />\n<meta-data android:name="com.google.firebase.components:com.google.firebase.installations.FirebaseInstallationsRegistrar" android:value="com.google.firebase.components.ComponentRegistrar"/>\n<meta-data android:name="com.google.firebase.components:com.google.firebase.datatransport.TransportRegistrar" android:value="com.google.firebase.components.ComponentRegistrar"/>\n<meta-data android:name="com.google.firebase.components:com.google.firebase.abt.component.AbtRegistrar" android:value="com.google.firebase.components.ComponentRegistrar"/>\n<meta-data android:name="com.google.firebase.components:com.google.firebase.FirebaseCommonKtxRegistrar" android:value="com.google.firebase.components.ComponentRegistrar" />\n<meta-data android:name="com.google.firebase.components:com.google.firebase.ktx.FirebaseCommonLegacyRegistrar" android:value="com.google.firebase.components.ComponentRegistrar" />\n')),(0,o.kt)("p",null,"Each of the component extensions will outline whether they have additional ",(0,o.kt)("inlineCode",{parentName:"p"},"meta-data")," tags to add to the service."),(0,o.kt)("h3",{id:"ios"},"iOS"),(0,o.kt)("h4",{id:"info-additions"},"Info Additions"),(0,o.kt)("p",null,"In order for the Firebase system to work well with AIR and other extensions we need\nto disable the automatic delegate proxy that Firebase implements on iOS. To do so\nyou must add the following to your InfoAdditions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<key>FirebaseAppDelegateProxyEnabled</key>\n<false/>\n<key>FirebaseAutomaticScreenReportingEnabled</key>\n<false/>\n")),(0,o.kt)("p",null,"Eg:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<iPhone>\n    <InfoAdditions><![CDATA[\n        <key>UIDeviceFamily</key>\n        <array>\n            <string>1</string>\n            <string>2</string>\n        </array>\n        \n        <key>FirebaseAppDelegateProxyEnabled</key>\n        <false/>\n        <key>FirebaseAutomaticScreenReportingEnabled</key>\n        <false/>\n\n        <key>MinimumOSVersion</key>\n        <string>12.0</string>\n            \n    ]]></InfoAdditions>\n    <requestedDisplayResolution>high</requestedDisplayResolution>\n    <Entitlements>\n    <![CDATA[\n    ]]>\n    </Entitlements>\n</iPhone>\n")),(0,o.kt)("p",null,"You may wish to add a minimum iOS version to restrict your application to the\nminimum Firebase version."))}k.isMDXComponent=!0;const v={title:"Core - Add the extension",sidebar_label:"Add the extension"},x=void 0,N={unversionedId:"firebase/core/add-the-extensions",id:"firebase/core/add-the-extensions",title:"Core - Add the extension",description:"The simplest way to install and manage your AIR native extensions and libraries is to use the AIR Package Manager (apm). We highly recommend using apm, as it will handle downloading all required dependencies and manage your application descriptor (Android manifest additions, iOS info additions etc).",source:"@site/docs/firebase/core/add-the-extensions.mdx",sourceDirName:"firebase/core",slug:"/firebase/core/add-the-extensions",permalink:"/docs/firebase/core/add-the-extensions",draft:!1,tags:[],version:"current",frontMatter:{title:"Core - Add the extension",sidebar_label:"Add the extension"},sidebar:"firebase",previous:{title:"Introduction",permalink:"/docs/firebase/core/introduction"},next:{title:"Initialise",permalink:"/docs/firebase/core/initialise"}},A={},w=[{value:"Add the Extension",id:"add-the-extension",level:2},{value:"Application Descriptor",id:"application-descriptor",level:2}],I={toc:w},C="wrapper";function E(e){let{components:t,...n}=e;return(0,o.kt)(C,(0,a.Z)({},I,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The simplest way to install and manage your AIR native extensions and libraries is to use the AIR Package Manager (",(0,o.kt)("inlineCode",{parentName:"p"},"apm"),"). We highly recommend using ",(0,o.kt)("inlineCode",{parentName:"p"},"apm"),", as it will handle downloading all required dependencies and manage your application descriptor (Android manifest additions, iOS info additions etc)."),(0,o.kt)("p",null,"However you can choose to install it manually, as you would have done in the past. "),(0,o.kt)("h2",{id:"add-the-extension"},"Add the Extension"),(0,o.kt)(i.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"apm",mdxType:"TabItem"},(0,o.kt)(p,{mdxType:"InstallAPM"})),(0,o.kt)(r.Z,{value:"manual",mdxType:"TabItem"},(0,o.kt)(m,{mdxType:"InstallManual"}))),(0,o.kt)("h2",{id:"application-descriptor"},"Application Descriptor"),(0,o.kt)(i.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"apm",mdxType:"TabItem"},(0,o.kt)(f,{mdxType:"AppDescriptorAPM"})),(0,o.kt)(r.Z,{value:"manual",mdxType:"TabItem"},(0,o.kt)(k,{mdxType:"AppDescriptorManual"}))))}E.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[57119],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=p(a),f=r,u=s["".concat(c,".").concat(f)]||s[f]||d[f]||i;return a?n.createElement(u,o(o({ref:t},m),{},{components:a})):n.createElement(u,o({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},65065:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"Loading BitmapData from File",sidebar_label:"Loading BitmapData from File"},o=void 0,l={unversionedId:"image/loading-bitmapdata-from-file",id:"image/loading-bitmapdata-from-file",title:"Loading BitmapData from File",description:"This process is the reverse of saving bitmap data, where it will load a PNG or JPG",source:"@site/docs/image/loading-bitmapdata-from-file.md",sourceDirName:"image",slug:"/image/loading-bitmapdata-from-file",permalink:"/docs/image/loading-bitmapdata-from-file",draft:!1,tags:[],version:"current",frontMatter:{title:"Loading BitmapData from File",sidebar_label:"Loading BitmapData from File"},sidebar:"image",previous:{title:"Saving BitmapData to File",permalink:"/docs/image/saving-bitmapdata-to-file"},next:{title:"Encoding BitmapData to ByteArray",permalink:"/docs/image/encoding-bitmapdata-to-bytearray"}},c={},p=[],m={toc:p},s="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(s,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This process is the reverse of saving bitmap data, where it will load a PNG or JPG\nfile and decode the file into a BitmapData object."),(0,r.kt)("p",null,"Using the native decoders can increase the speed of loading images in your application,\nhowever the difference is much closer here, and sometimes the built in AIR methods can\nbe faster, mainly due to the time taken to move the bitmap across the native - AIR boundary."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'Image.service.addEventListener( ImageEvent.LOAD_COMPLETE, loadBitmapDataAsync_completeHandler );\nImage.service.addEventListener( ImageEvent.LOAD_ERROR, loadBitmapDataAsync_errorHandler );\n\nvar file:File = File.applicationStorageDirectory.resolvePath("test.png");\n\nvar success:Boolean = Image.service.loadBitmapDataAsync( file.nativePath );\n')),(0,r.kt)("p",null,"When the load operation completes you will receive either an ",(0,r.kt)("inlineCode",{parentName:"p"},"ImageEvent.LOAD_COMPLETE"),"\nevent or an ",(0,r.kt)("inlineCode",{parentName:"p"},"ImageEvent.LOAD_ERROR")," event:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'function loadBitmapDataAsync_completeHandler( event:ImageEvent ):void\n{\n    trace( "Load successful" );\n    \n    // Use the bitmap data\n    var b:Bitmap = new Bitmap( event.bitmapData );\n    addChild( b );\n}\n\nfunction loadBitmapDataAsync_errorHandler( event:ImageEvent ):void\n{\n    trace( "Load error: " + event.error );\n}\n')))}d.isMDXComponent=!0}}]);
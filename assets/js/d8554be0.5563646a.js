"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[79334],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=o,f=p["".concat(u,".").concat(d)]||p[d]||h[d]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},88161:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={title:"Authorisation",sidebar_label:"Authorisation"},i=void 0,s={unversionedId:"speech/authorisation",id:"speech/authorisation",title:"Authorisation",description:"In order to use the speech recognition functionality you must first request certain permissions from the user.",source:"@site/docs/speech/authorisation.md",sourceDirName:"speech",slug:"/speech/authorisation",permalink:"/docs/speech/authorisation",draft:!1,tags:[],version:"current",frontMatter:{title:"Authorisation",sidebar_label:"Authorisation"},sidebar:"speech",previous:{title:"Add the Extension",permalink:"/docs/speech/add-the-extension"},next:{title:"Text to Speech",permalink:"/docs/speech/texttospeech"}},u={},c=[{value:"Authorisation Status",id:"authorisation-status",level:2},{value:"Request Authorisation",id:"request-authorisation",level:2}],l={toc:c},p="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In order to use the speech recognition functionality you must first request certain permissions from the user."),(0,o.kt)("h2",{id:"authorisation-status"},"Authorisation Status"),(0,o.kt)("p",null,"You can determine the current authorisation status by calling:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"var authorisationStatus:String = Speech.instance.recogniser.authorisationStatus;\n")),(0,o.kt)("p",null,"This value will be one of the values defined in the ",(0,o.kt)("inlineCode",{parentName:"p"},"AuthorisationStatus")," class:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"switch (Speech.instance.recogniser.authorisationStatus)\n{\n    case AuthorisationStatus.AUTHORISED:\n        // Your app is authorised to use speech recognition\n        break;\n\n    case AuthorisationStatus.DENIED:\n        // Your app has been denied authorisation to use speech recognition\n        break;\n\n    ...\n}\n")),(0,o.kt)("p",null,"When the status is ",(0,o.kt)("inlineCode",{parentName:"p"},"AuthorisationStatus.NOT_DETERMINED")," you can request authorisation."),(0,o.kt)("h2",{id:"request-authorisation"},"Request Authorisation"),(0,o.kt)("p",null,"You request authorisation by calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"requestAuthorisation()")," function. This call will dispatch an event when complete:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"Speech.instance.recogniser.addEventListener( AuthorisationEvent.CHANGED, auth_changedHandler );\n\nSpeech.instance.recogniser.requestAuthorisation();\n\n\nfunction auth_changedHandler( event:AuthorisationEvent ):void \n{\n    Speech.instance.recogniser.removeEventListener( AuthorisationEvent.CHANGED, auth_changedHandler );\n\n    // Handle new authorisation status\n}\n")))}h.isMDXComponent=!0}}]);
(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[46360],{3905:function(e,n,a){"use strict";a.d(n,{Zo:function(){return h},kt:function(){return u}});var t=a(67294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=t.createContext({}),c=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},h=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),d=c(a),u=o,g=d["".concat(s,".").concat(u)]||d[u]||p[u]||r;return a?t.createElement(g,i(i({ref:n},h),{},{components:a})):t.createElement(g,i({ref:n},h))}));function u(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},64744:function(e,n,a){"use strict";a.r(n),a.d(n,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s},default:function(){return h}});var t=a(22122),o=a(19756),r=(a(67294),a(3905)),i={title:"Sharing - Share Dialog",sidebar_label:"Sharing - Share Dialog"},l={unversionedId:"facebookapi-legacy/sharing---share-dialog",id:"facebookapi-legacy/sharing---share-dialog",isDocsHomePage:!1,title:"Sharing - Share Dialog",description:"This is the legacy extension documentation. Find the new documentation here",source:"@site/docs/facebookapi-legacy/sharing---share-dialog.md",sourceDirName:"facebookapi-legacy",slug:"/facebookapi-legacy/sharing---share-dialog",permalink:"/docs/facebookapi-legacy/sharing---share-dialog",version:"current",sidebar_label:"Sharing - Share Dialog",frontMatter:{title:"Sharing - Share Dialog",sidebar_label:"Sharing - Share Dialog"},sidebar:"facebookapi-legacy",previous:{title:"Sharing - Content",permalink:"/docs/facebookapi-legacy/sharing---content"},next:{title:"Sharing - Message Dialog",permalink:"/docs/facebookapi-legacy/sharing---message-dialog"}},s=[{value:"Share Dialog",id:"share-dialog",children:[]},{value:"Show",id:"show",children:[]},{value:"Events",id:"events",children:[]},{value:"Notes",id:"notes",children:[]},{value:"Example",id:"example",children:[]}],c={toc:s};function h(e){var n=e.components,a=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"This is the legacy extension documentation. Find the new documentation ",(0,r.kt)("a",{parentName:"p",href:"../facebookapi/"},"here")))),(0,r.kt)("h2",{id:"share-dialog"},"Share Dialog"),(0,r.kt)("p",null,"On mobile, when someone shares with the Share Dialog, the dialog makes a fast\napp-switch to the Facebook app on their device. We also have a web dialog as\na fallback if someone doesn't have the native Facebook app installed."),(0,r.kt)("p",null,"In past versions of the SDK for iOS, your app had to check for a native, installed\nFacebook app before it could open the Share Dialog. If the person didn't have the\napp installed, you had to provide your own code to call a fallback dialog."),(0,r.kt)("p",null,"Now the SDK automatically checks for the native Facebook app. If it isn't installed,\nthe SDK switches people to their default browser and opens the Feed Dialog. If\nsomeone wants to share an Open Graph story, the SDK opens the Web Share Dialog."),(0,r.kt)("h2",{id:"show"},"Show"),(0,r.kt)("p",null,"Once you have created the content builder you then pass the output from this builder to the\n",(0,r.kt)("inlineCode",{parentName:"p"},"show")," function of the ",(0,r.kt)("inlineCode",{parentName:"p"},"ShareDialog")," interface:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"FacebookAPI.service.shareDialog.show( builder.build() );\n")),(0,r.kt)("p",null,"This initiates the dialog and presents it to the user. You should check the response\nof this function. It is a boolean value and indicates if the share dialog construction\nwas initiated correctly. If will return ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," if the required dialog type isn't supported\nor if the application isn't setup correctly."),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("p",null,"There are three possible events dispatched after a call to ",(0,r.kt)("inlineCode",{parentName:"p"},"show"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ShareDialogEvent.DIALOG_COMPLETED"),": when the share was successfully completed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ShareDialogEvent.DIALOG_CANCELLLED"),": when the user cancelled the share dialog"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ShareDialogEvent.DIALOG_ERROR"),": when an error occurred during the process")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"FacebookAPI.service.shareDialog.addEventListener( ShareDialogEvent.DIALOG_COMPLETED, shareDialogEventHandler );\nFacebookAPI.service.shareDialog.addEventListener( ShareDialogEvent.DIALOG_CANCELLED, shareDialogEventHandler );\nFacebookAPI.service.shareDialog.addEventListener( ShareDialogEvent.DIALOG_ERROR, shareDialogEventHandler );\n")),(0,r.kt)("p",null,"And then your event handler:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'private function shareDialogEventHandler( event:ShareDialogEvent ):void \n{\n    // If successful event.postId will contain the post identifier\n    if (event.postId != null) \n    {\n        trace( "postId="+event.postId);\n    }\n}\n')),(0,r.kt)("h2",{id:"notes"},"Notes"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Your app should not pre-fill any content to be shared. This is inconsistent with\nFacebook Platform Policy, see ",(0,r.kt)("a",{parentName:"p",href:"https://developers.facebook.com/policy/#control"},"Facebook Platform Policy, 2.3"),".")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'\nif (FacebookAPI.service.shareDialog.canShow( ShareLinkContentBuilder.TYPE ))\n{\n    FacebookAPI.service.shareDialog.addEventListener( ShareDialogEvent.DIALOG_COMPLETED, shareDialogEventHandler );\n    FacebookAPI.service.shareDialog.addEventListener( ShareDialogEvent.DIALOG_CANCELLED, shareDialogEventHandler );\n    FacebookAPI.service.shareDialog.addEventListener( ShareDialogEvent.DIALOG_ERROR, shareDialogEventHandler );\n\n    var builder:ShareLinkContentBuilder = new ShareLinkContentBuilder()\n        .setContentTitle("FacebookAPI ANE")\n        .setContentDescription("This link was shared using the distriqt FacebookAPI ANE" )\n        .setContentUrl("https://airnativeextensions.com/extension/com.distriqt.FacebookAPI");\n    \n    var success:Boolean = FacebookAPI.service.shareDialog.show( builder.build() );\n    \n}\n\n...\n\nprivate function shareDialogEventHandler( event:ShareDialogEvent ):void \n{\n    FacebookAPI.service.shareDialog.removeEventListener( ShareDialogEvent.DIALOG_COMPLETED, shareDialogEventHandler );\n    FacebookAPI.service.shareDialog.removeEventListener( ShareDialogEvent.DIALOG_CANCELLED, shareDialogEventHandler );\n    FacebookAPI.service.shareDialog.removeEventListener( ShareDialogEvent.DIALOG_ERROR, shareDialogEventHandler );\n\n    if (event.postId != null) log( "postId="+event.postId);\n}\n')))}h.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[33030],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=i,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||a;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(67294),i=n(86010);const a={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(a.tabItem,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>I});var r=n(87462),i=n(67294),a=n(86010),o=n(12466),l=n(16550),s=n(91980),u=n(67392),p=n(50012);function c(e){return function(e){var t,n;return null!=(t=null==(n=i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:i}}=e;return{value:t,label:n,attributes:r,default:i}}))}function d(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=null!=t?t:c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const r=(0,l.k6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,s._X)(a),(0,i.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})}),[a,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=d(e),[o,l]=(0,i.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const i=null!=(t=r.find((e=>e.default)))?t:r[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:a}))),[s,u]=h({queryString:n,groupId:r}),[c,f]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[r,a]=(0,p.Nk)(n);return[r,(0,i.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),v=(()=>{const e=null!=s?s:c;return m({value:e,tabValues:a})?e:null})();(0,i.useLayoutEffect)((()=>{v&&l(v)}),[v]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error("Can't select invalid tab value="+e);l(e),u(e),f(e)}),[u,f,a]),tabValues:a}}var v=n(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),r=u[n].value;r!==l&&(c(t),s(r))},m=e=>{var t;let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var r;const t=p.indexOf(e.currentTarget)+1;n=null!=(r=p[t])?r:p[0];break}case"ArrowLeft":{var i;const t=p.indexOf(e.currentTarget)-1;n=null!=(i=p[t])?i:p[p.length-1];break}}null==(t=n)||t.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return i.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},o,{className:(0,a.Z)("tabs__item",b.tabItem,null==o?void 0:o.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function y(e){let{lazy:t,children:n,selectedValue:r}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function k(e){const t=f(e);return i.createElement("div",{className:(0,a.Z)("tabs-container",b.tabList)},i.createElement(g,(0,r.Z)({},e,t)),i.createElement(y,(0,r.Z)({},e,t)))}function I(e){const t=(0,v.Z)();return i.createElement(k,(0,r.Z)({key:String(t)},e))}},26858:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var r=n(87462),i=(n(67294),n(3905)),a=n(74866),o=n(85162);const l={title:"Products",sidebar_label:"Products"},s=void 0,u={unversionedId:"inappbilling/products",id:"inappbilling/products",title:"Products",description:"At the core of the InAppBilling functionality is a list of products.",source:"@site/docs/inappbilling/products.mdx",sourceDirName:"inappbilling",slug:"/inappbilling/products",permalink:"/docs/inappbilling/products",draft:!1,tags:[],version:"current",frontMatter:{title:"Products",sidebar_label:"Products"},sidebar:"inappbilling",previous:{title:"Setup Billing Service",permalink:"/docs/inappbilling/billing-service"},next:{title:"Make a Purchase",permalink:"/docs/inappbilling/make-a-purchase"}},p={},c=[{value:"Subscriptions",id:"subscriptions",level:2},{value:"Subscription Group",id:"subscription-group",level:3}],d={toc:c},m="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"At the core of the InAppBilling functionality is a list of products.\nBefore making any purchases or restoring any transactions you must retrieve a list of the\nproducts you support in your application from the payment service by calling the ",(0,i.kt)("strong",{parentName:"p"},"get products")," method."),(0,i.kt)("p",null,"This will initialise the list of products available, retrieving information about the product such as: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"price, "),(0,i.kt)("li",{parentName:"ul"},"title, "),(0,i.kt)("li",{parentName:"ul"},"description etc.")),(0,i.kt)("p",null,"Generally we advise immediately retrieving this list as soon as the service is setup,\nhowever you can make this call wherever you see fit, as long as it is done before any\npurchase operations are attempted."),(0,i.kt)("p",null,"If there are any invalid product codes in the specified array the ",(0,i.kt)("strong",{parentName:"p"},"invalid product")," event will be dispatched.\nThis error occurs when there was an invalid product ID requested.\nIf this error occurs you should check that you have correctly specified a product ID and that it matches an ID that was setup in the store. "),(0,i.kt)("p",null,"In this event there will be one product in the event indicating the invalid product ID. You should not display invalid products to your user. "),(0,i.kt)("p",null,"When this operation completes successfully the ",(0,i.kt)("strong",{parentName:"p"},"products loaded")," event be dispatched.  The data in the event contains an array of the successfully loaded products."),(0,i.kt)("p",null,"When this operation fails the ",(0,i.kt)("strong",{parentName:"p"},"products failed")," event be dispatched.\nWhen this happens you are advised to wait a small interval and retry the call.\nYou may also wish to check if the user has a valid network connection using the\n",(0,i.kt)("a",{parentName:"p",href:"http://airnativeextensions.com/extension/com.distriqt.NetworkInfo"},"NetworkInfo"),"\nor other such method and inform the user of the problem."),(0,i.kt)(a.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"air",mdxType:"TabItem"},(0,i.kt)("p",null,"To retrieve the list of products you call ",(0,i.kt)("inlineCode",{parentName:"p"},"getProducts()")," with an array of product ids eg ",(0,i.kt)("inlineCode",{parentName:"p"},"com.distriqt.testProduct"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"InAppBilling.service.getProducts( \n    [ `com.distriqt.testProduct` ]\n);\n")),(0,i.kt)("p",null,"This call will dispatch one of the following events:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ProductEvent.PRODUCTS_LOADED"),": Dispatched when the products have been retrieved successfully"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ProductEvent.PRODUCTS_FAILED"),": Dispatched when there was an error"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ProductEvent.INVALID_PRODUCT"),": Dispatched when there was an invalid product ID requested"))),(0,i.kt)(o.Z,{value:"unity",mdxType:"TabItem"},(0,i.kt)("p",null,"To retrieve the list of products you call ",(0,i.kt)("inlineCode",{parentName:"p"},"GetProducts()")," with an array of product ids eg ",(0,i.kt)("inlineCode",{parentName:"p"},"com.distriqt.testProduct"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'InAppBilling.Instance.GetProducts( \n    new List<string> { "com.distriqt.testProduct" }\n);\n')),(0,i.kt)("p",null,"This call will dispatch one of the following events:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"InAppBilling.Instance.Events.OnGetProductsSuccess"),": Dispatched when the products have been retrieved successfully"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"InAppBilling.Instance.Events.OnGetProductsFailed"),": Dispatched when there was an error"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"InAppBilling.Instance.Events.OnInvalidProduct"),": Dispatched when there was an invalid product ID requested")))),(0,i.kt)("p",null,"More than likely you will have more than one product in your application\nso you must pass all of your product ids to this function."),(0,i.kt)("h2",{id:"subscriptions"},"Subscriptions"),(0,i.kt)("p",null,"Subscriptions are treated slightly differently internally so we need to specify the list\nof subscription product ids separately from the single purchase products."),(0,i.kt)(a.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"air",mdxType:"TabItem"},(0,i.kt)("p",null,"If you have subscriptions in your application you need to pass a second array of\nids to the ",(0,i.kt)("inlineCode",{parentName:"p"},"getProducts()")," method, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"InAppBilling.service.getProducts( \n    [ `com.distriqt.testProduct` ],\n    [ `com.distriqt.testSubscription` ] \n);\n"))),(0,i.kt)(o.Z,{value:"unity",mdxType:"TabItem"},(0,i.kt)("p",null,"If you have subscriptions in your application you need to pass a second array of\nids to the ",(0,i.kt)("inlineCode",{parentName:"p"},"GetProducts()")," method, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'InAppBilling.Instance.GetProducts( \n    new List<string> { "com.distriqt.testProduct" },\n    new List<string> { "com.distriqt.testSubscription" }\n);\n')))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"If you provide a subscription product id in the product array you may receive an\ninvalid product event for that subscription and vice-versa.")),(0,i.kt)("p",null,'A subscription product may contain information about the subscription period. This is only supported through stores that return this information.\nSome stores assume you "know" this information (eg Apple In-App Purchasing) and don\'t return the information. '),(0,i.kt)("p",null,"If it is available ",(0,i.kt)("inlineCode",{parentName:"p"},"product.subscriptionPeriod")," will be a valid instance of the ",(0,i.kt)("inlineCode",{parentName:"p"},"SubscriptionPeriod")," class. If it is unavailable the ",(0,i.kt)("inlineCode",{parentName:"p"},"subscriptionPeriod")," will be ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,i.kt)("p",null,"This class contains two properties:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"numberOfUnits"),": The number of units per subscription period"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"unit"),": The increment of time that a subscription period is specified in (available values are defined in the class eg : ",(0,i.kt)("inlineCode",{parentName:"li"},"SubscriptionPeriod.UNIT_DAY"),")")),(0,i.kt)("p",null,"For example, if the ",(0,i.kt)("inlineCode",{parentName:"p"},"numberOfUnits")," was ",(0,i.kt)("inlineCode",{parentName:"p"},"2")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"unit")," was  ",(0,i.kt)("inlineCode",{parentName:"p"},"SubscriptionPeriod.UNIT_WEEK")," then the subscription payment recurs every 2 weeks (fortnightly). Or if the ",(0,i.kt)("inlineCode",{parentName:"p"},"numberOfUnits")," was ",(0,i.kt)("inlineCode",{parentName:"p"},"3")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"unit")," was  ",(0,i.kt)("inlineCode",{parentName:"p"},"SubscriptionPeriod.UNIT_MONTH"),", then the payment recurs every 3 months (or quarterly)."),(0,i.kt)("h3",{id:"subscription-group"},"Subscription Group"),(0,i.kt)("p",null,"Some stores allow you to group subscriptions together allowing different subscription products to provide the same subscription benefits. "),(0,i.kt)("p",null,"If the service returns this information the ",(0,i.kt)("inlineCode",{parentName:"p"},"product.subscriptionGroupId")," will be a valid string containing the subscription group ID. If it is not available the ",(0,i.kt)("inlineCode",{parentName:"p"},"subscriptionGroupId")," will be an empty string."),(0,i.kt)("admonition",{title:"Supported Platforms",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The subscription group ID is supported on the following services:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"iOS StoreKit")),(0,i.kt)("p",{parentName:"admonition"},"Even though subscription groups are supported on Google Play Billing, the subscription group ID is not returned by the service.\n:::"),(0,i.kt)("h2",{parentName:"admonition",id:"subscription-offers"},"Subscription Offers"),(0,i.kt)("p",{parentName:"admonition"},"A ",(0,i.kt)("inlineCode",{parentName:"p"},"Product")," that represents a subscription will contain information about available offers for the subscription. "),(0,i.kt)("p",{parentName:"admonition"},"See the section on ",(0,i.kt)("a",{parentName:"p",href:"subscription-offers"},"Subscription Offers")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/inappbilling/introductory-prices"},"Introductory Prices")," for more information."),(0,i.kt)("h2",{parentName:"admonition",id:"example-code"},"Example code"),(0,i.kt)(a.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"air",mdxType:"TabItem"},(0,i.kt)("p",{parentName:"admonition"},"The following demonstrates calling ",(0,i.kt)("inlineCode",{parentName:"p"},"setup")," and then ",(0,i.kt)("inlineCode",{parentName:"p"},"getProducts")," on setup success:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var products : Array;\nvar productIds : Array = [ "com.distriqt.testProduct1", "com.distriqt.testProduct2" ];\nvar subscriptionIds : Array = [ "com.distriqt.testSubscription1", "com.distriqt.testSubscription2" ];\n\nInAppBilling.service.addEventListener( InAppBillingEvent.SETUP_SUCCESS, setup_successHandler );\nInAppBilling.service.addEventListener( InAppBillingEvent.SETUP_FAILURE, setup_failureHandler );\n\nInAppBilling.service.addEventListener( ProductEvent.PRODUCTS_LOADED, products_loadedHandler );\nInAppBilling.service.addEventListener( ProductEvent.PRODUCTS_FAILED, products_failedHandler );\nInAppBilling.service.addEventListener( ProductEvent.INVALID_PRODUCT, product_invalidHandler );\n\nInAppBilling.service.setup(\n        new BillingService()\n                .setGooglePlayPublicKey( GOOGLE_PLAY_INAPP_BILLING_KEY )\n);\n\n\n\n\nfunction setup_successHandler( event:InAppBillingEvent ):void\n{\n    // Retrieve the product list\n    InAppBilling.service.getProducts( productIds, subscriptionIds );\n}\n\nfunction products_loadedHandler( event:ProductEvent ):void\n{\n    // event.products will be an Array of Product instances for each product and subscription successfully loaded\n    for each (var product:Product in event.products)\n    {\n        trace( product.toString() );\n    }\n    products = event.products;\n}\n'))),(0,i.kt)(o.Z,{value:"unity",mdxType:"TabItem"},(0,i.kt)("p",{parentName:"admonition"},"The following demonstrates calling ",(0,i.kt)("inlineCode",{parentName:"p"},"Setup")," and then ",(0,i.kt)("inlineCode",{parentName:"p"},"GetProducts")," on setup success:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'var products : List<Product>;\nvar productIds : List<string> = new List<string> { "com.distriqt.testProduct1", "com.distriqt.testProduct2" };\nvar subscriptionIds : List<string> = new List<string> { "com.distriqt.testSubscription1", "com.distriqt.testSubscription2" };\n\nInAppBilling.Instance.Events.OnGetProductsSuccess += ProductsLoadedHandler;\nInAppBilling.Instance.Events.OnGetProductsFailed += ProductsFailedHandler;\nInAppBilling.Instance.Events.OnInvalidProduct += InvalidProductHandler;\n\nInAppBilling.Instance.Setup(\n    new BillingService(),\n    (e) =>\n    {\n        if (e.type == InAppBillingEvent.SETUP_SUCCESS)\n        {\n            // Retrieve the product list\n            InAppBilling.Instance.GetProducts( productIds, subscriptionIds );\n        }\n        else\n        {\n            Debug.LogError("Setup failed: " + e.errorCode + " " + e.message);\n        }\n    }\n);\n\nprivate void ProductsLoadedHandler(ProductEvent e)\n{\n    // event.products will be an Array of Product instances for each product and subscription successfully loaded\n    foreach (Product product in e.products)\n    {\n        Debug.Log(product.ToString());\n    }\n    products = e.products;\n}\n\nprivate void ProductsFailedHandler(ProductEvent e)\n{\n    Debug.LogError("GetProducts failed: " + e.errorCode + " " + e.message);\n}\n\nprivate void InvalidProductHandler(ProductEvent e)\n{\n    Debug.LogError("Invalid product: " + e.products[0].id);\n}\n'))))))}h.isMDXComponent=!0}}]);
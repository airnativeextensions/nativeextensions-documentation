"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[49406],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=o,m=d["".concat(c,".").concat(h)]||d[h]||u[h]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},79289:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={title:"Usage",sidebar_label:"Usage"},i=void 0,s={unversionedId:"detectscreenshot/usage",id:"detectscreenshot/usage",title:"Usage",description:"Start detection",source:"@site/docs/detectscreenshot/usage.md",sourceDirName:"detectscreenshot",slug:"/detectscreenshot/usage",permalink:"/docs/detectscreenshot/usage",draft:!1,tags:[],version:"current",frontMatter:{title:"Usage",sidebar_label:"Usage"},sidebar:"detectscreenshot",previous:{title:"Authorisation",permalink:"/docs/detectscreenshot/authorisation"},next:{title:"changelog",permalink:"/docs/detectscreenshot/changelog"}},c={},l=[{value:"Start detection",id:"start-detection",level:2},{value:"Stop detection",id:"stop-detection",level:2}],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"start-detection"},"Start detection"),(0,o.kt)("p",null,"To start screenshot detection call the ",(0,o.kt)("inlineCode",{parentName:"p"},"start()")," method. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"DetectScreenshot.instance.start();\n")),(0,o.kt)("p",null,"This method will return ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," if the detection process has started correctly or ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," if it is not supported or you don't have authorisation."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'if (DetectScreenshot.instance.start())\n{\n    trace( "detection started" );\n}\n')),(0,o.kt)("p",null,"When a screenshot is detected the extension will dispatch the ",(0,o.kt)("inlineCode",{parentName:"p"},"DetectScreenshotEvent.SCREENSHOT_DETECTED")," event."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'DetectScreenshot.instance.addEventListener( \n    DetectScreenshotEvent.SCREENSHOT_DETECTED, \n    onScreenshotDetected );\n\nfunction onScreenshotDetected( event:DetectScreenshotEvent ):void\n{\n    trace( "onScreenshotDetected" );\n}\n')),(0,o.kt)("admonition",{title:"Platform Variations",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"On iOS the system provides a notification whenever a screenshot is taken. This means that the event is much more precise and reliable."),(0,o.kt)("p",{parentName:"admonition"},"On Android there is no direct way to detect screenshots so instead this extension uses a common technique of observing the user's media library\nand watching for additions to places where screenshots are normally stored. This approach however requires ",(0,o.kt)("a",{parentName:"p",href:"authorisation"},"authorisation")," to read the user's media. ")),(0,o.kt)("h2",{id:"stop-detection"},"Stop detection"),(0,o.kt)("p",null,"Whenever your application no longer needs the screenshot detection functionality you can call the ",(0,o.kt)("inlineCode",{parentName:"p"},"stop()")," method to stop the detection process:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"DetectScreenshot.instance.stop();\n")),(0,o.kt)("p",null,"For example you should do this whenever your application is minimised."))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[58694],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>m});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),g=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},p=function(e){var r=g(e.components);return t.createElement(l.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=g(n),u=a,m=c["".concat(l,".").concat(u)]||c[u]||d[u]||o;return n?t.createElement(m,s(s({ref:r},p),{},{components:n})):t.createElement(m,s({ref:r},p))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[c]="string"==typeof e?e:a,s[1]=i;for(var g=2;g<o;g++)s[g]=n[g];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},66376:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>g});var t=n(87462),a=(n(67294),n(3905));const o={title:"Progress Dialog",sidebar_label:"Progress Dialog"},s=void 0,i={unversionedId:"dialog/progress-dialog",id:"dialog/progress-dialog",title:"Progress Dialog",description:"A progress dialog can be used to show the progress of a long running process, such as downloading a file.",source:"@site/docs/dialog/progress-dialog.md",sourceDirName:"dialog",slug:"/dialog/progress-dialog",permalink:"/docs/dialog/progress-dialog",draft:!1,tags:[],version:"current",frontMatter:{title:"Progress Dialog",sidebar_label:"Progress Dialog"},sidebar:"dialog",previous:{title:"Action Sheet",permalink:"/docs/dialog/action-sheet"},next:{title:"Activity Dialog",permalink:"/docs/dialog/activity-dialog"}},l={},g=[{value:"Updating Progress",id:"updating-progress",level:2},{value:"Updating Message",id:"updating-message",level:2}],p={toc:g},c="wrapper";function d(e){let{components:r,...o}=e;return(0,a.kt)(c,(0,t.Z)({},p,o,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(74295).Z,width:"1240",height:"930"})),(0,a.kt)("p",null,"A progress dialog can be used to show the progress of a long running process, such as downloading a file.\nA progress dialog can have a different appearances, such as a indeterminate spinner, a horizontal bar or\nan annular / circular fill."),(0,a.kt)("p",null,"A progress dialog is created by using an ",(0,a.kt)("inlineCode",{parentName:"p"},"ProgressDialogBuilder"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"create")," function will return a\nprogress dialog specific ",(0,a.kt)("inlineCode",{parentName:"p"},"DialogView")," represented by the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProgressDialogView")," class."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'var progressDialog:ProgressDialogView = Dialog.service.create( \n        new ProgressDialogBuilder()\n            .setTitle( "A Long Process is happening" )\n            .setMessage( "Loading..." )\n            .setStyle( DialogType.STYLE_HORIZONTAL )\n            .setCancelable( false )\n            .setTheme( new DialogTheme( DialogTheme.DEVICE_DEFAULT_LIGHT ))\n            .build()\n        );\n\nprogressDialog.show();\n')),(0,a.kt)("h2",{id:"updating-progress"},"Updating Progress"),(0,a.kt)("p",null,"For a determinate progress dialog you can update the displayed value by calling ",(0,a.kt)("inlineCode",{parentName:"p"},"update")," on the\n",(0,a.kt)("inlineCode",{parentName:"p"},"ProgressDialogView")," instance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'var progressInterval:uint;\nvar progress:Number = 0;\nvar progressDialog:ProgressDialogView;\n\nif (Dialog.isSupported)\n{\n    progressDialog = Dialog.service.create( \n        new ProgressDialogBuilder()\n            .setTitle( "A Long Process is happening" )\n            .setMessage( "Loading..." )\n            .setStyle( DialogType.STYLE_HORIZONTAL )\n            .setCancelable( false )\n            .setTheme( new DialogTheme( DialogTheme.DEVICE_DEFAULT_LIGHT ))\n            .build()\n        );\n    progressDialog.addEventListener( DialogViewEvent.CLOSED, progressDialog_closedHandler );\n    progressDialog.show();\n    \n    progress = 0;\n    progressDialog.update( progress );\n    \n    progressInterval = setInterval( progressDialog_intervalHandler, 2000 );\n}\n\n...\n\nprivate function progressDialog_intervalHandler():void\n{\n    progress += 0.1; // Change the value by some amount\n    progressDialog.update( progress );\n\n    if (progress >= 1) // Dismiss the dialog when complete\n    {\n        clearInterval( progressInterval );\n        progressDialog.dismiss();\n    }\n}\n\nprivate function progressDialog_closedHandler( event:DialogViewEvent ):void\n{\n    trace( "progress dialog closed" );\n    progressDialog.removeEventListener( DialogViewEvent.CLOSED, progressDialog_closedHandler );\n    progressDialog.dispose();\n}\n')),(0,a.kt)("h2",{id:"updating-message"},"Updating Message"),(0,a.kt)("p",null,"Similarly you can update the message displayed in the progress dialog by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"setMessage()")," function on the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProgressDialogView")," instance."),(0,a.kt)("p",null,"For example you could update the text to represent the percentage complete of the process the progress dialog is tracking:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'var percent:Number = ...;\n\nprogressDialog.setMessage( "Loading " + percent + "% complete"  );\n')))}d.isMDXComponent=!0},74295:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/progress-8045022d453b8682331a1f352f643e97.png"}}]);
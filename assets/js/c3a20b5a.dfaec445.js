(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[87288],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return f}});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=i.createContext({}),c=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return i.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),h=c(n),f=o,d=h["".concat(u,".").concat(f)]||h[f]||p[f]||r;return n?i.createElement(d,a(a({ref:t},l),{},{components:n})):i.createElement(d,a({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=h;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<r;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},95744:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return s},toc:function(){return u},default:function(){return l}});var i=n(22122),o=n(19756),r=(n(67294),n(3905)),a={title:"Request Authorisation",sidebar_label:"Request Authorisation"},s={unversionedId:"pushnotifications/request-authorisation",id:"pushnotifications/request-authorisation",isDocsHomePage:!1,title:"Request Authorisation",description:"After setting up your service you should check whether the device has given your application authorisation to register and display notifications.",source:"@site/docs/pushnotifications/request-authorisation.md",sourceDirName:"pushnotifications",slug:"/pushnotifications/request-authorisation",permalink:"/docs/pushnotifications/request-authorisation",version:"current",sidebar_label:"Request Authorisation",frontMatter:{title:"Request Authorisation",sidebar_label:"Request Authorisation"},sidebar:"pushnotifications",previous:{title:"Setup your Service - OneSignal",permalink:"/docs/pushnotifications/onesignal/setup-your-service"},next:{title:"Register for notifications",permalink:"/docs/pushnotifications/register-for-notifications"}},u=[{value:"Device settings",id:"device-settings",children:[]}],c={toc:u};function l(e){var t=e.components,a=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,i.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"After setting up your service you should check whether the device has given your application authorisation to register and display notifications.\nYou can check the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"hasAuthorisation()")," which will return ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if the device is authorised and ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," otherwise.\nHowever the better method is to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"authorisationStatus()")," to determine the status, this will allow you to determine if your application has authorisation,\nhas been denied or is not yet determined (i.e. the user has not yet been asked to grant authorisation)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"On iOS you will only be able to display the authorisation request dialog once!"),"\nHence it is very important that you inform your users why they should grant authorisation before requesting authorisation. To request authorisation you call ",(0,r.kt)("inlineCode",{parentName:"p"},"requestAuthorisation()"),".\nThis function will trigger the native dialog asking the user for authorisation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"PushNotifications.service.addEventListener( AuthorisationEvent.CHANGED, authorisationChangedHandler );\n\nswitch (PushNotifications.service.authorisationStatus())\n{\n    case AuthorisationStatus.AUTHORISED:\n        // This device has been authorised.\n        // You can register this device and expect:\n        //  - registration success/failed event, and; \n        //  - notifications to be displayed\n        PushNotifications.service.register();\n        break;\n        \n    case AuthorisationStatus.NOT_DETERMINED:\n        // You are yet to ask for authorisation to display notifications\n        // At this point you should consider your strategy to get your user to authorise\n        // notifications by explaining what the application will provide\n        PushNotifications.service.requestAuthorisation();\n        break;\n        \n    case AuthorisationStatus.DENIED:\n        // The user has disabled notifications\n        // Advise your user of the lack of notifications as you see fit\n\n        // For example: You can redirect to the settings page on iOS\n        if (PushNotifications.service.canOpenDeviceSettings)\n        {\n            PushNotifications.service.openDeviceSettings();\n        }\n        break;\n}\n\n\nfunction authorisationChangedHandler( event:AuthorisationEvent ):void\n{\n    // Check the authorisation state again (as above)\n}\n")),(0,r.kt)("h3",{id:"device-settings"},"Device settings"),(0,r.kt)("p",null,"You can redirect the user to the device settings in order to get them to change the permission to access notifications."),(0,r.kt)("p",null,"This can only be performed on some platforms and you should firstly check if it is supported before calling."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (PushNotifications.service.canOpenDeviceSettings)\n{\n    PushNotifications.service.openDeviceSettings();\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(347).Z})))}l.isMDXComponent=!0},347:function(e,t,n){"use strict";t.Z=n.p+"assets/images/ios_settings-cf5c0efa1941db27beb3d8210c3f5acf.png"}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[65376],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(n),h=r,m=d["".concat(s,".").concat(h)]||d[h]||p[h]||o;return n?a.createElement(m,c(c({ref:t},u),{},{components:n})):a.createElement(m,c({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},63525:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),c=["components"],i={title:"Batch",sidebar_label:"Batch"},s=void 0,l={unversionedId:"facebookapi/core/graph-api/batch",id:"facebookapi/core/graph-api/batch",title:"Batch",description:"If you have several requests you wish to batch together you can use the GraphRequestBatchBuilder to create a batch request.",source:"@site/docs/facebookapi/core/graph-api/batch.md",sourceDirName:"facebookapi/core/graph-api",slug:"/facebookapi/core/graph-api/batch",permalink:"/docs/facebookapi/core/graph-api/batch",draft:!1,tags:[],version:"current",frontMatter:{title:"Batch",sidebar_label:"Batch"},sidebar:"facebookapi",previous:{title:"Basics",permalink:"/docs/facebookapi/core/graph-api/basics"},next:{title:"Examples",permalink:"/docs/facebookapi/core/graph-api/examples"}},u={},p=[{value:"Events",id:"events",level:2},{value:"Callbacks",id:"callbacks",level:2}],d={toc:p};function h(e){var t=e.components,n=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you have several requests you wish to batch together you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"GraphRequestBatchBuilder")," to create a batch request."),(0,o.kt)("p",null,"To create a batch, firstly create your ",(0,o.kt)("inlineCode",{parentName:"p"},"GraphRequest")," instances as normal:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'var request1:GraphRequest = new GraphRequestBuilder()\n        .setPath(\'/me\')\n        .setMethod(\'GET\')\n        .addFields(["first_name","gender","picture.width(160).height(160)" ])\n        .build();\n\nvar request2:GraphRequest = new GraphRequestBuilder()\n        .setPath(\'/me/friends\')\n        .setMethod(\'GET\')\n        .addParameter("limit", 200 )\n        .addFields(["id","first_name","installed","picture.width(160).height(160)" ])\n        .build();\n')),(0,o.kt)("p",null,"Then construct the ",(0,o.kt)("inlineCode",{parentName:"p"},"GraphRequestBatch")," using a ",(0,o.kt)("inlineCode",{parentName:"p"},"GraphRequestBatchBuilder"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"var batch:GraphRequestBatch = new GraphRequestBatchBuilder()\n    .addRequest( request1 )\n    .addRequest( request2 )\n    .build();\n")),(0,o.kt)("p",null,"Then call ",(0,o.kt)("inlineCode",{parentName:"p"},"makeBatchRequest()")," with your ",(0,o.kt)("inlineCode",{parentName:"p"},"GraphRequestBatch")," instance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"Facebook.instance.graphAPI.makeBatchRequest( batch );\n")),(0,o.kt)("h2",{id:"events"},"Events"),(0,o.kt)("p",null,"You can add event listeners to the request objects to process the return data from each individual request, as you would for a single request:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"request1.addEventListener( GraphRequestEvent.COMPLETE, request1_completeHandler );\nrequest1.addEventListener( GraphRequestEvent.ERROR, request1_errorHandler );\nrequest2.addEventListener( GraphRequestEvent.COMPLETE, request2_completeHandler );\nrequest2.addEventListener( GraphRequestEvent.ERROR, request2_errorHandler );\n\nfunction request1_completeHandler( event:GraphRequestEvent ):void \n{\n    // event.data will contain the Facebook response\n}\n\nfunction request1_errorHandler( event:GraphRequestEvent ):void \n{\n    // event.errorCode and event.errorMessage will contain details on the error\n}\n\nfunction request2_completeHandler( event:GraphRequestEvent ):void \n{\n    // event.data will contain the Facebook response\n}\n\nfunction request2_errorHandler( event:GraphRequestEvent ):void \n{\n    // event.errorCode and event.errorMessage will contain details on the error\n}\n")),(0,o.kt)("p",null,"Additionally you can listen for a ",(0,o.kt)("inlineCode",{parentName:"p"},"GraphRequestEvent.BATCH_COMPLETE")," event to be notified when all the requests have been completed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'batch.addEventListener( GraphRequestEvent.BATCH_COMPLETE, batch_completeHandler );\n                \nfunction batch_completeHandler( event:GraphRequestEvent ):void\n{\n    trace( "batch complete" );\n}\n')),(0,o.kt)("p",null,"You should make sure to add these listeners before the call to ",(0,o.kt)("inlineCode",{parentName:"p"},"makeBatchRequest()"),"."),(0,o.kt)("h2",{id:"callbacks"},"Callbacks"),(0,o.kt)("p",null,"As an alternative to events, you can add callbacks to the requests as you do with a normal ",(0,o.kt)("inlineCode",{parentName:"p"},"GraphRequest"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'var request1:GraphRequest = new GraphRequestBuilder()\n    .setPath( "/me" )\n    .setCompleteCallback(\n            function( data:Object ):void \n            {\n                log( "request complete: " + JSON.stringify(data) );\n            }\n    )\n    .setErrorCallback(\n            function( code:int, message:String ):void \n            {\n                log( "request error: " + code + "::"+ message );\n            }\n    )\n    .build();\n')),(0,o.kt)("p",null,"Additionally you can add a completion callback to the ",(0,o.kt)("inlineCode",{parentName:"p"},"GraphRequestBatch")," object:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'var batch:GraphRequestBatch = new GraphRequestBatchBuilder()\n    .addRequest( request1 )\n    .addRequest( request2 )\n    .addRequest( request3 )\n    .setCompleteCallback(\n            function():void\n            {\n                log( "batch complete" );\n            }\n    )\n    .build();\n')))}h.isMDXComponent=!0}}]);
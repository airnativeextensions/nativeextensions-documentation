"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[28085],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(t),f=o,y=d["".concat(p,".").concat(f)]||d[f]||u[f]||s;return t?r.createElement(y,a(a({ref:n},l),{},{components:t})):r.createElement(y,a({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},91492:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var r=t(87462),o=t(63366),s=(t(67294),t(3905)),a={title:"Sensor Updates",sidebar_label:"Sensor Updates"},i=void 0,p={unversionedId:"gyroscope/sensor-updates",id:"gyroscope/sensor-updates",isDocsHomePage:!1,title:"Sensor Updates",description:"Listening for Sensor Updates",source:"@site/docs/gyroscope/sensor-updates.md",sourceDirName:"gyroscope",slug:"/gyroscope/sensor-updates",permalink:"/docs/gyroscope/sensor-updates",tags:[],version:"current",frontMatter:{title:"Sensor Updates",sidebar_label:"Sensor Updates"},sidebar:"gyroscope",previous:{title:"Add the Extension",permalink:"/docs/gyroscope/add-the-extension"},next:{title:"changelog",permalink:"/docs/gyroscope/changelog"}},c=[{value:"Listening for Sensor Updates",id:"listening-for-sensor-updates",children:[]},{value:"Stopping Sensor Updates",id:"stopping-sensor-updates",children:[]}],l={toc:c};function u(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"listening-for-sensor-updates"},"Listening for Sensor Updates"),(0,s.kt)("p",null,"In order to listen for updates from the Gyroscope sensor you must first attach a listener\nfor the ",(0,s.kt)("inlineCode",{parentName:"p"},"GyroscopeEvent.UPDATE")," event and then call ",(0,s.kt)("inlineCode",{parentName:"p"},"register")," with your desired update\nrate."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},"Gyroscope.service.addEventListener( GyroscopeEvent.UPDATE, gyro_updateHandler );\n\nGyroscope.service.register( Gyroscope.SENSOR_DELAY_GAME );\n")),(0,s.kt)("p",null,"The extension will now dispatch events at the specified rate giving you access to the\nangular speeds:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},'private function gyro_updateHandler(event:GyroscopeEvent):void\n{\n    trace( "Angular Speeds: " + event.x +", "+ event.y +", "+ event.z );\n}\n')),(0,s.kt)("h2",{id:"stopping-sensor-updates"},"Stopping Sensor Updates"),(0,s.kt)("p",null,"Whenever you are done listening for sensor events you should inform the extension\nto stop monitoring the sensor and hence conserve battery life. "),(0,s.kt)("p",null,"This is done by a simple call to ",(0,s.kt)("inlineCode",{parentName:"p"},"unregister"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},"Gyroscope.service.unregister();\n")),(0,s.kt)("p",null,"After calling this you will no longer receive ",(0,s.kt)("inlineCode",{parentName:"p"},"GyroscopeEvent.UPDATE")," events."))}u.isMDXComponent=!0}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[372],{426:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return i})),a.d(n,"metadata",(function(){return l})),a.d(n,"rightToc",(function(){return o})),a.d(n,"default",(function(){return p}));var t=a(2),r=(a(0),a(448));const i={title:"Migrating from version 1",sidebar_label:"Migrating from version 1"},l={unversionedId:"mediaplayer/migrating-from-version-1",id:"mediaplayer/migrating-from-version-1",isDocsHomePage:!1,title:"Migrating from version 1",description:"Version 2 completely changes the way media players are created and displayed. Migration is simple as laid out below.",source:"@site/docs/mediaplayer/migrating-from-version-1.md",slug:"/mediaplayer/migrating-from-version-1",permalink:"/docs/mediaplayer/migrating-from-version-1",version:"current",sidebar_label:"Migrating from version 1",sidebar:"mediaplayer",previous:{title:"Migrating to AndroidX",permalink:"/docs/mediaplayer/migrating-to-androidx"},next:{title:"changelog",permalink:"/docs/mediaplayer/changelog"}},o=[{value:"Dependencies",id:"dependencies",children:[]},{value:"Creating a Player",id:"creating-a-player",children:[]},{value:"Events",id:"events",children:[]},{value:"Control",id:"control",children:[]},{value:"Resize",id:"resize",children:[]},{value:"Destroying the player",id:"destroying-the-player",children:[]}],c={rightToc:o};function p({components:e,...n}){return Object(r.b)("wrapper",Object(t.a)({},c,n,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Version 2 completely changes the way media players are created and displayed. Migration is simple as laid out below. "),Object(r.b)("p",null,"The major difference is that you now will create an ",Object(r.b)("inlineCode",{parentName:"p"},"MediaPlayerView")," instance and use this to configure, load and control media playback. Whereas you used to only have access to a single player, you can now create multiple and use as required. This means that you will need to hold onto an instance of your ",Object(r.b)("inlineCode",{parentName:"p"},"MediaPlayerView")," to set properties, listen for events, load, and control media playback."),Object(r.b)("h2",{id:"dependencies"},"Dependencies"),Object(r.b)("p",null,"There are new ANE dependencies with version 2. In particular the Android support libraries are now required. Check the details in the ",Object(r.b)("a",Object(t.a)({parentName:"p"},{href:"add-the-extension"}),"Add the Extension")," section."),Object(r.b)("h2",{id:"creating-a-player"},"Creating a Player"),Object(r.b)("p",null,"Previously there was only one instance of a player handled internally to the ANE. You now have to retrieve a reference to a player and hold onto a reference, by changing any calls to ",Object(r.b)("inlineCode",{parentName:"p"},"createPlayer")," to the new ",Object(r.b)("inlineCode",{parentName:"p"},"createPlayerView"),"."),Object(r.b)("p",null,"So the following code:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),'var path:String = "...";\nvar view:Rectangle = new Rectangle( 0, 0, stage.stageWidth, 480 );\n\nMediaPlayer.service.createPlayer(\n        path,\n        view.x,\n        view.y,\n        view.width,\n        view.height,\n        false,\n        MediaPlayer.CONTROLS_NONE,\n        false \n);\n')),Object(r.b)("p",null,"becomes:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),'var path:String = "...";\nvar view:Rectangle = new Rectangle( 0, 0, stage.stageWidth, 480 );\n\nvar player:MediaPlayerView = MediaPlayer.service.createPlayerView(\n        new MediaPlayerOptions()\n            .setViewport( view )\n            .showControls( false )\n);\nplayer.load( path );\n')),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Note: we have separated the loading call (",Object(r.b)("inlineCode",{parentName:"p"},"load()"),") from the creation (",Object(r.b)("inlineCode",{parentName:"p"},"createPlayerView()"),"). This means you no longer need to pass the path when creating a player. However you can call load immediately if you wish initialise your player with media.")),Object(r.b)("h2",{id:"events"},"Events"),Object(r.b)("p",null,"Events are now dispatched by the ",Object(r.b)("inlineCode",{parentName:"p"},"MediaPlayerView")," instance rather than from the extension ",Object(r.b)("inlineCode",{parentName:"p"},"service"),"."),Object(r.b)("p",null,"So for example the following events listeners:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"MediaPlayer.service.addEventListener( MediaPlayerEvent.COMPLETE, completeHandler );\nMediaPlayer.service.addEventListener( MediaProgressEvent.PROGRESS, progressHandler );\nMediaPlayer.service.addEventListener( MediaErrorEvent.ERROR, errorHandler );\n")),Object(r.b)("p",null,"should now be attached to your ",Object(r.b)("inlineCode",{parentName:"p"},"player")," instance:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"player.addEventListener( MediaPlayerEvent.COMPLETE, completeHandler );\nplayer.addEventListener( MediaProgressEvent.PROGRESS, progressHandler );\nplayer.addEventListener( MediaErrorEvent.ERROR, errorHandler );\n")),Object(r.b)("h2",{id:"control"},"Control"),Object(r.b)("p",null,"Playback control is now controlled through the ",Object(r.b)("inlineCode",{parentName:"p"},"player")," instance. "),Object(r.b)("p",null,"To start playback of your video:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"MediaPlayer.service.play();\n")),Object(r.b)("p",null,"becomes:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"player.play();\n")),Object(r.b)("p",null,"Similarly for the other playback controls such as:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"pause()")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"stop()"))),Object(r.b)("h2",{id:"resize"},"Resize"),Object(r.b)("p",null,"Player resizing is now done with the ",Object(r.b)("inlineCode",{parentName:"p"},"resize")," function on the player."),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"MediaPlayer.service.resize( 0, 0, stage.stageWidth, 500 );\n")),Object(r.b)("p",null,"Becomes:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"player.resize( 0, 0, stage.stageWidth, 500 );\n")),Object(r.b)("h2",{id:"destroying-the-player"},"Destroying the player"),Object(r.b)("p",null,"Previously calling ",Object(r.b)("inlineCode",{parentName:"p"},"removePlayer()")," would remove and destroy the player. This is now changed to the clearer ",Object(r.b)("inlineCode",{parentName:"p"},"destroy()")," function on the player instance."),Object(r.b)("p",null,"So"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"MediaPlayer.service.removePlayer();\n")),Object(r.b)("p",null,"becomes:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-actionscript"}),"player.destroy();\n")),Object(r.b)("p",null,"After you call ",Object(r.b)("inlineCode",{parentName:"p"},"destroy()")," on a player instance the player will no longer function. You should remove all event listeners and clear any references to this object. If you need to use a player again, then you'll need to call ",Object(r.b)("inlineCode",{parentName:"p"},"createPlayerView()")," again to create a new player instance."))}p.isMDXComponent=!0},448:function(e,n,a){"use strict";a.d(n,"a",(function(){return d})),a.d(n,"b",(function(){return y}));var t=a(0),r=a.n(t);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function c(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),s=function(e){var n=r.a.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},d=function(e){var n=s(e.components);return r.a.createElement(p.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var a=e.components,t=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(a),u=t,y=d["".concat(l,".").concat(u)]||d[u]||b[u]||i;return a?r.a.createElement(y,o(o({ref:n},p),{},{components:a})):r.a.createElement(y,o({ref:n},p))}));function y(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:t,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);
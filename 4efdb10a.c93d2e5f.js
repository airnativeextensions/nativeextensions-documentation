(window.webpackJsonp=window.webpackJsonp||[]).push([[253],{308:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return m}));var r=a(2),n=a(6),i=(a(0),a(828)),o={title:"Preview Frames",sidebar_label:"Preview Frames"},c={unversionedId:"camera/preview-frames",id:"camera/preview-frames",isDocsHomePage:!1,title:"Preview Frames",description:"Preview Frames",source:"@site/docs/camera/preview-frames.md",slug:"/camera/preview-frames",permalink:"/docs/camera/preview-frames",version:"current",sidebar_label:"Preview Frames",sidebar:"camera",previous:{title:"Connecting",permalink:"/docs/camera/connecting"},next:{title:"Capturing Images",permalink:"/docs/camera/capturing-images"}},p=[{value:"Preview Frames",id:"preview-frames",children:[]}],l={rightToc:p};function m(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"preview-frames"},"Preview Frames"),Object(i.b)("p",null,"Once you have connected to a camera device you are most likely going to want to show a\npreview to your users. "),Object(i.b)("p",null,"Preview frames are provided through the ",Object(i.b)("inlineCode",{parentName:"p"},"CameraEvent.VIDEO_FRAME")," event. This is dispacted\nfrom a camera device whenever a preview frame is available. The event indicates that bitmap\ndata representing the current view through the camera device is available."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),"device.addEventListener( CameraEvent.VIDEO_FRAME, camera_videoFrameHandler );\n")),Object(i.b)("p",null,"When you receive the event you can then query the extension for the frame buffer using the\n",Object(i.b)("inlineCode",{parentName:"p"},"getFrameBuffer")," function. This function takes a ",Object(i.b)("inlineCode",{parentName:"p"},"ByteArray")," which will be filled with the\nbitmap data of the preview frame. "),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"A ",Object(i.b)("inlineCode",{parentName:"p"},"ByteArray")," is used to ensure we can transfer the data from the native side to your AS3\nquickly, attempting to keep the frame rate of your preview frame as high as possible. ")),Object(i.b)("p",null,"To render the data you should create an appropriately sized ",Object(i.b)("inlineCode",{parentName:"p"},"BitmapData")," object and use the\n",Object(i.b)("inlineCode",{parentName:"p"},"setPixels")," to update the bitmap data from the ",Object(i.b)("inlineCode",{parentName:"p"},"ByteArray"),"."),Object(i.b)("p",null,"Firstly lets create the bitmap data:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),'var _previewBitmapData:BitmapData = new BitmapData( 1, 1, false );\nvar _previewBitmapRect:Rectangle = new Rectangle( 0, 0, 1, 1 );\n\n//\n//  Check we have an appropriately sized bitmapdata and texture\n//      Recreate if not\nif (_previewBitmapData.width != device.width || _previewBitmapData.height != device.height)\n{\n    trace( "resizing to: (" + device.width +", "+ device.height +")" );\n    _previewBitmapData.dispose();\n    \n    _previewBitmapData = new BitmapData( device.width, device.height, false );\n    \n    _previewBitmapRect = new Rectangle( 0, 0, _previewBitmapData.width, _previewBitmapData.height );\n}\n')),Object(i.b)("p",null,"Then in our event handler we update from the frame buffer."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),"private function camera_videoFrameHandler( event:CameraEvent ):void \n{\n    if (-1 != device.getFrameBuffer( _previewData ))\n    {\n        try\n        {\n            //\n            //  Update the bitmapdata and texture\n            _previewBitmapData.setPixels( _previewBitmapRect, _previewData );\n            \n            // For Starling 1.x\n            // flash.display3D.textures.Texture(_previewTexture.base).uploadFromBitmapData( _previewBitmapData );\n\n            // For Starling 2.x\n            flash.display3D.textures.RectangleTexture(_previewTexture.base).uploadFromBitmapData( _previewBitmapData );\n        }\n        catch (e:Error)\n        {\n            trace( e );\n        }\n        finally\n        {\n            _previewData.clear();\n            _lastFrameProcessed = frame;\n        }\n    }\n}\n")),Object(i.b)("p",null,"We also suggest you rotate the container of your bitmap data to match the orientation of the\ncamera device. You should use the ",Object(i.b)("inlineCode",{parentName:"p"},"device.info.orientation")," value to rotate appropriately."),Object(i.b)("p",null,"See the example applications for demonstrations of this, and the following gists:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://gist.github.com/marchbold/ce93ed72a5fb60db045e6168362d5508"}),"Starling Camera Preview Example"))))}m.isMDXComponent=!0},828:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return b}));var r=a(0),n=a.n(r);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=n.a.createContext({}),m=function(e){var t=n.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=m(e.components);return n.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=m(a),d=r,b=s["".concat(o,".").concat(d)]||s[d]||u[d]||i;return a?n.a.createElement(b,c(c({ref:t},l),{},{components:a})):n.a.createElement(b,c({ref:t},l))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=a[l];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);
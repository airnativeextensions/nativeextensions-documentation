"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[19801],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},v="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),v=s(n),u=a,m=v["".concat(l,".").concat(u)]||v[u]||c[u]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[v]="string"==typeof e?e:a,o[1]=d;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},53012:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>d,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={},o=void 0,d={unversionedId:"scanner/changelog",id:"scanner/changelog",title:"changelog",description:"2025.09.15 [v6.0.6]",source:"@site/docs/scanner/changelog.md",sourceDirName:"scanner",slug:"/scanner/changelog",permalink:"/docs/scanner/changelog",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"scanner",previous:{title:"Migrating to AndroidX",permalink:"/docs/scanner/migrating-to-androidx"}},l={},s=[{value:"2025.09.15 v6.0.6",id:"20250915-v606",level:3},{value:"2025.09.15 v6.0.5",id:"20250915-v605",level:3},{value:"2025.06.19 v6.0.5",id:"20250619-v605",level:3},{value:"2024.07.08 v5.2.0",id:"20240708-v520",level:3},{value:"2023.01.25 v5.1.0",id:"20230125-v510",level:3},{value:"2022.02.11 v5.0.62",id:"20220211-v5062",level:3},{value:"2021.10.12 v5.0.61",id:"20211012-v5061",level:3},{value:"2021.08.03 v5.0.60",id:"20210803-v5060",level:3},{value:"2021.04.14 v5.0.054",id:"20210414-v50054",level:3},{value:"2021.03.22 v5.0.053",id:"20210322-v50053",level:3},{value:"2021.03.05 v5.0.046",id:"20210305-v50046",level:3},{value:"2020.11.25 v4.2.017",id:"20201125-v42017",level:3},{value:"2020.05.08 v4.1.013",id:"20200508-v41013",level:3},{value:"2020.03.20 v4.0.008",id:"20200320-v40008",level:3},{value:"2019.08.15 v3.0.004",id:"20190815-v30004",level:3},{value:"2019.02.21 v2.2.034",id:"20190221-v22034",level:3},{value:"2019.01.11 v2.1.032",id:"20190111-v21032",level:3},{value:"2018.06.20 v2.0.019",id:"20180620-v20019",level:3},{value:"2017.10.26 v2.0.017",id:"20171026-v20017",level:3},{value:"2017.07.18 v2.0.015",id:"20170718-v20015",level:3},{value:"2017.07.18 v2.0.013",id:"20170718-v20013",level:3},{value:"2017.07.10 v2.0.010",id:"20170710-v20010",level:3},{value:"2016.12.30 v2.0.008",id:"20161230-v20008",level:3},{value:"2016.12.30 v2.0.008",id:"20161230-v20008-1",level:3},{value:"2016.12.30 v2.0.008",id:"20161230-v20008-2",level:3},{value:"2016.12.30 v2.0.008",id:"20161230-v20008-3",level:3},{value:"2016.10.24 v2.0.004",id:"20161024-v20004",level:3},{value:"2016.09.16 v2.0.001",id:"20160916-v20001",level:3},{value:"2016.07.21",id:"20160721",level:3},{value:"2016.07.02",id:"20160702",level:3},{value:"2016.04.04",id:"20160404",level:3},{value:"2016.02.19",id:"20160219",level:3},{value:"2015.10.04",id:"20151004",level:3},{value:"2015.07.02",id:"20150702",level:3},{value:"2015.06.16",id:"20150616",level:3},{value:"2015.02.03",id:"20150203",level:3},{value:"2014.12.22",id:"20141222",level:3},{value:"2014.12.11",id:"20141211",level:3},{value:"2014.12.08",id:"20141208",level:3},{value:"2014.12.02",id:"20141202",level:3},{value:"2014.10.19",id:"20141019",level:3}],p={toc:s},v="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(v,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"20250915-v606"},"2025.09.15 ","[v6.0.6]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"feat(airpackage): update airpackage to specify platforms and gradle details\n")),(0,a.kt)("h3",{id:"20250915-v605"},"2025.09.15 ","[v6.0.5]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"feat(android): update for android 35 - ensure scanner activity correctly respects safe area (system bars and cutouts)\nfeat(android): remove legacy native libs causing page sizing issues (https://github.com/airsdk/Adobe-Runtime-Support/discussions/3980)\n")),(0,a.kt)("h3",{id:"20250619-v605"},"2025.06.19 ","[v6.0.5]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"## Major Update \n\nThis latest release represents a major update to the extension. The scanning algorithm has been completely rewritten to improve performance and accuracy. \nThe aging ZBar SDK has been removed in favour of **MLKit** on Android and the **Vision framework** on iOS. \n\nAs part of the update we have improved the permission process and broadcast receiver usage to meet the updated android API 34 requirements.\n\nAdditionally we have implemented an asynchronous bitmap data scanning process which allows you to scan large images without blocking the main thread.\n\nOverall this update should provide a much better experience for your users and improve the reliability of scanning barcodes in your applications.\n\nSee the migration guide: https://docs.airnativeextensions.com/docs/scanner/migrating-to-v6.0\n\n\n### Updates\n\nfeat(ios): integration of new Vision framework based algorithm (resolves https://github.com/distriqt/ANE-Scanner/issues/71)\nfeat(ios): add better focus implementation for new vision algorithm (resolves https://github.com/distriqt/ANE-Scanner/issues/74)\nfeat(android): update implementation to use MLKit scanning algorithm (resolves https://github.com/distriqt/ANE-Scanner/issues/49)\nfix(android): update permission process and receiver requirements for android api 34\nfeat: implement async bitmap scanning\nfeat(airpackage): update dependencies to latest (resolves https://github.com/distriqt/ANE-Scanner/issues/77)\n")),(0,a.kt)("h3",{id:"20240708-v520"},"2024.07.08 ","[v5.2.0]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"fix(android): update permission process and receiver requirements for android api 34 (resolves https://github.com/distriqt/ANE-Scanner/issues/76)\n")),(0,a.kt)("h3",{id:"20230125-v510"},"2023.01.25 ","[v5.1.0]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"feat(ios): Xcode 14 update, remove bitcode and add no-objc-msgsend-selector-stubs compiler flag (resolves #70)\nfeat(android): Move to new permissions request process\n")),(0,a.kt)("h3",{id:"20220211-v5062"},"2022.02.11 ","[v5.0.62]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Update for Android 31\nUpdate docs to use apm\n")),(0,a.kt)("h3",{id:"20211012-v5061"},"2021.10.12 ","[v5.0.61]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Add air package\n")),(0,a.kt)("h3",{id:"20210803-v5060"},"2021.08.03 ","[v5.0.60]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Android: Fixed issue with single result scan activity (resolves #64)\nAdded more refocus functionality\nAndroid: Added security to activities\n")),(0,a.kt)("h3",{id:"20210414-v50054"},"2021.04.14 ","[v5.0.054]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Corrected default implementation (SWC) function definitions to match native\n")),(0,a.kt)("h3",{id:"20210322-v50053"},"2021.03.22 ","[v5.0.053]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Added more robust checks for camera modes on Android and ability to use front camera with the activity method\nRemoved ios_min_version\n")),(0,a.kt)("h3",{id:"20210305-v50046"},"2021.03.05 ","[v5.0.046]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Added ability to position a camera preview within a viewport for scanning (resolves #58, resolves #36)\nAdded ability to scan a bitmap data reference for symbols directly (resolves #16)\n")),(0,a.kt)("h3",{id:"20201125-v42017"},"2020.11.25 ","[v4.2.017]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iOS: Resolved issue with new view controller modal presentation style (resolves #61)\n")),(0,a.kt)("h3",{id:"20200508-v41013"},"2020.05.08 ","[v4.1.013]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iOS: Replaced UIWebView usage with WKWebView (resolves #59)\n")),(0,a.kt)("h3",{id:"20200320-v40008"},"2020.03.20 ","[v4.0.008]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Android X migration (resolves #55)\n")),(0,a.kt)("h3",{id:"20190815-v30004"},"2019.08.15 ","[v3.0.004]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Android 64bit support (resolves #50)\nUpdated minimum iOS version to 9.0\n")),(0,a.kt)("h3",{id:"20190221-v22034"},"2019.02.21 ","[v2.2.034]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Updated minimum iOS version option (resolves #45)\n")),(0,a.kt)("h3",{id:"20190111-v21032"},"2019.01.11 ","[v2.1.032]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Removed application keys\n")),(0,a.kt)("h3",{id:"20180620-v20019"},"2018.06.20 ","[v2.0.019]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iOS: Added information about usage description strings (resolves #38)\n")),(0,a.kt)("h3",{id:"20171026-v20017"},"2017.10.26 ","[v2.0.017]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Updated to better handle Android application ids\n")),(0,a.kt)("h3",{id:"20170718-v20015"},"2017.07.18 ","[v2.0.015]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Updated documentation\n")),(0,a.kt)("h3",{id:"20170718-v20013"},"2017.07.18 ","[v2.0.013]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Android: Added torch mode implementation (resolves #30)\n")),(0,a.kt)("h3",{id:"20170710-v20010"},"2017.07.10 ","[v2.0.010]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Updated for compatibility with new Core library (for Notifications/PushNotifications fix)\n")),(0,a.kt)("h3",{id:"20161230-v20008"},"2016.12.30 ","[v2.0.008]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Updated documentation\n")),(0,a.kt)("h3",{id:"20161230-v20008-1"},"2016.12.30 ","[v2.0.008]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Updated documentation\n")),(0,a.kt)("h3",{id:"20161230-v20008-2"},"2016.12.30 ","[v2.0.008]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Updated documentation\n")),(0,a.kt)("h3",{id:"20161230-v20008-3"},"2016.12.30 ","[v2.0.008]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Update SDKs + new documentation\n")),(0,a.kt)("h3",{id:"20161024-v20004"},"2016.10.24 ","[v2.0.004]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iOS: Removed focus range restriction on stop scan (#25)\n")),(0,a.kt)("h3",{id:"20160916-v20001"},"2016.09.16 ","[v2.0.001]"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Minor updates and new version system\n")),(0,a.kt)("h3",{id:"20160721"},"2016.07.21"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Added missing example files (resolves #22)\n")),(0,a.kt)("h3",{id:"20160702"},"2016.07.02"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Removed invalid iOS simulator build (resolves #20)\n")),(0,a.kt)("h3",{id:"20160404"},"2016.04.04"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iOS: Fixed UI ordering (resolves #18)\nAndroid: Added authorisation process for Marshmallow (resolves #15)\nAndroid: Updated zbar lib\n")),(0,a.kt)("h3",{id:"20160219"},"2016.02.19"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Added authorisation status to check for camera permission (resolves #13, resolves #3)\n")),(0,a.kt)("h3",{id:"20151004"},"2015.10.04"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iOS: Update for iOS 9, black bar at bottom of scanner (resolves #10)\n")),(0,a.kt)("h3",{id:"20150702"},"2015.07.02"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Android: Fixed orientation issue with default landscape devices (resolves #7)\nAndroid: Implemented checks to ensure camera is available on resume (resolves #4)\n")),(0,a.kt)("h3",{id:"20150616"},"2015.06.16"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Removed debug code from AS lib\niOS: Updated to latest common lib\nAndroid: Windows: Fix for bug in AIR packager resulting in missing resources\nAndroid: x86 Support\n")),(0,a.kt)("h3",{id:"20150203"},"2015.02.03"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Added check for .debug suffix in application id\n")),(0,a.kt)("h3",{id:"20141222"},"2014.12.22"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"iOS: Included arm64 support (resolves #1) \nAndroid: Corrected application id check when doesn't contain air prefix\n")),(0,a.kt)("h3",{id:"20141211"},"2014.12.11"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Android: Corrected dispose function crashing application while scanner running (fixes distriqt/airnativeextensions#315)\n")),(0,a.kt)("h3",{id:"20141208"},"2014.12.08"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Corrected missing EventDispatcher functions from base class\niOS: Implemented autoreleasepools for all C function calls\n")),(0,a.kt)("h3",{id:"20141202"},"2014.12.02"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"New application based key check, removing server checks\n")),(0,a.kt)("h3",{id:"20141019"},"2014.10.19"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Update for iOS 8 and Android Additions\n- iOS: iOS 8 updates\n- iOS: Added overlay in ScannerOptions to use as a custom target area (resolves #154)\n- Updated singleResult documentation (resolves #231)\n- Android: Added auto-orientation code\n- Android: Added overlay in ScannerOptions to use as a custom target area\n")))}c.isMDXComponent=!0}}]);
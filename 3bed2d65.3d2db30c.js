(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{242:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var i=t(2),o=t(6),a=(t(0),t(808)),r={title:"Downloading Expansion Files",sidebar_label:"Downloading Expansion Files"},s={unversionedId:"expansionfiles/downloading-expansion-files",id:"expansionfiles/downloading-expansion-files",isDocsHomePage:!1,title:"Downloading Expansion Files",description:"Once you have setup the Expansion Files ANE you should provide information about",source:"@site/docs/expansionfiles/downloading-expansion-files.md",slug:"/expansionfiles/downloading-expansion-files",permalink:"/docs/expansionfiles/downloading-expansion-files",version:"current",sidebar_label:"Downloading Expansion Files",sidebar:"expansionfiles",previous:{title:"Uploading Expansion Files",permalink:"/docs/expansionfiles/uploading-expansion-files"},next:{title:"JOBB Files",permalink:"/docs/expansionfiles/jobb-files"}},l=[],c={rightToc:l};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Once you have setup the Expansion Files ANE you should provide information about\nyour expansion files. This is done by creating an ExpansionFile object and passing\nit to the ANE's ",Object(a.b)("inlineCode",{parentName:"p"},"addExpansionFile")," function."),Object(a.b)("p",null,"You can then check if the files have already been downloaded using the\n",Object(a.b)("inlineCode",{parentName:"p"},"expansionFilesDelivered")," function. This returns ",Object(a.b)("inlineCode",{parentName:"p"},"true")," if the files have been\ndownloaded either as part of the install from Google Play or in a previous run\nof the application. If the files haven't been downloaded you should start the\ndownload process and wait for the ",Object(a.b)("inlineCode",{parentName:"p"},"ExpansionFilesEvent.COMPLETE")," event to process\nthe files."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Note: ",Object(a.b)("inlineCode",{parentName:"p"},"expansionFilesDelivered")," will check the file size of the downloaded\nfile to the filesize you have specified so it is very important that you\ncreate your ",Object(a.b)("inlineCode",{parentName:"p"},"ExpansionFile")," with the exact size of the file you have uploaded\nto the Play Store. If you don't then this will always return ",Object(a.b)("inlineCode",{parentName:"p"},"false")," and may\nincorrectly download your file on every launch.")),Object(a.b)("p",null,"The following example shows the major events in this process and the suggested\nmethod of checking for the existence of expansion files."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-actionscript"}),'public static const BASE64_PUBLIC_KEY   : String = "YOUR_LICENSING_PUBLIC_KEY";\npublic static const SALT        : Vector.<int> = Vector.<int>( [ 1, 43, -12, -1, 54, 98, -100, -12, 43, 2, -8, -4, 9, 5, -106, -108, -33, 45, -1, 84 ]); \n')),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-actionscript"}),"ExpansionFiles.service.setup( BASE64_PUBLIC_KEY, SALT );\n\nExpansionFiles.service.addEventListener( ExpansionFilesEvent.CONNECTED,     connectedHandler );\nExpansionFiles.service.addEventListener( ExpansionFilesEvent.STATE_CHANGED, stateChangedHandler );\nExpansionFiles.service.addEventListener( ProgressEvent.PROGRESS,            progressHandler );\nExpansionFiles.service.addEventListener( ExpansionFilesEvent.COMPLETE,      completeHandler );\n\n// Add the details of your expansion file(s)\nvar expansionFile:ExpansionFile = new ExpansionFile( ExpansionFile.MAIN, 1001002, 233017 );\nExpansionFiles.service.addExpansionFile( expansionFile );\n\n// Check if the files have been delivered / downloaded already\nif (!ExpansionFiles.service.expansionFilesDelivered())\n{\n    // Start the downloading\n    ExpansionFiles.service.download();\n}\nelse\n{\n    // Already have expansion files - use as required\n}\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-actionscript"}),'private function connectedHandler( event:ExpansionFilesEvent ):void\n{\n    trace( "connectedHandler()" );\n}\n\nprivate function stateChangedHandler( event:ExpansionFilesEvent ):void\n{\n    trace( "stateChangedHandler(): " + event.state );\n}\n\nprivate function completeHandler( event:ExpansionFilesEvent ):void\n{\n    trace( "completeHandler()" );\n    // Read your expansion files\n}\n\nprivate function progressHandler( event:ProgressEvent ):void\n{\n    trace( "progressHandler( " + event.progress.toString() + " )" );    \n}\n')))}p.isMDXComponent=!0},808:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return b}));var i=t(0),o=t.n(i);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),p=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=p(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},f=o.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),f=i,b=d["".concat(r,".").concat(f)]||d[f]||u[f]||a;return t?o.a.createElement(b,s(s({ref:n},c),{},{components:t})):o.a.createElement(b,s({ref:n},c))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,r=new Array(a);r[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var c=2;c<a;c++)r[c]=t[c];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);
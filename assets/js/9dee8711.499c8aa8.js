"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[6756],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=o.createContext({}),l=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(d.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,g=u["".concat(d,".").concat(m)]||u[m]||c[m]||i;return n?o.createElement(g,r(r({ref:t},p),{},{components:n})):o.createElement(g,r({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=m;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[u]="string"==typeof e?e:a,r[1]=s;for(var l=2;l<i;l++)r[l]=n[l];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},78722:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=n(87462),a=(n(67294),n(3905));const i={title:"Android 15 UI Changes",description:"User experience and system UI changes in Android 15 (v35)",image:"images/android.png",authors:["marchbold"],tags:["android","tips"]},r=void 0,s={permalink:"/news/2025/08/08/android-35-ui-changes",source:"@site/news/2025-08-08-android-35-ui-changes.md",title:"Android 15 UI Changes",description:"User experience and system UI changes in Android 15 (v35)",date:"2025-08-08T00:00:00.000Z",formattedDate:"August 8, 2025",tags:[{label:"android",permalink:"/news/tags/android"},{label:"tips",permalink:"/news/tags/tips"}],readingTime:2.64,hasTruncateMarker:!1,authors:[{name:"Michael",title:"Lead Developer",url:"https://github.com/marchbold",imageURL:"https://avatars3.githubusercontent.com/u/442356?s=460&v=4",key:"marchbold"}],frontMatter:{title:"Android 15 UI Changes",description:"User experience and system UI changes in Android 15 (v35)",image:"images/android.png",authors:["marchbold"],tags:["android","tips"]},prevItem:{title:"August 2025",permalink:"/news/2025-08"},nextItem:{title:"July 2025",permalink:"/news/2025-07"}},d={authorsImageUrls:[void 0]},l=[{value:"Window inset changes",id:"window-inset-changes",level:2},{value:"Edge-to-edge enforcement",id:"edge-to-edge-enforcement",level:3},{value:"Handling window insets",id:"handling-window-insets",level:3},{value:"Cutouts",id:"cutouts",level:3},{value:"Opt-out",id:"opt-out",level:3}],p={toc:l},u="wrapper";function c(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,o.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Android 15 (API v35) includes some changes that are intended to create a more consistent, intuitive user experience."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"You can read the official release of this information here: ",(0,a.kt)("a",{parentName:"p",href:"https://developer.android.com/about/versions/15/behavior-changes-15"},"https://developer.android.com/about/versions/15/behavior-changes-15"))),(0,a.kt)("h2",{id:"window-inset-changes"},"Window inset changes"),(0,a.kt)("p",null,"There are two changes related to window insets in Android 15: edge-to-edge is enforced by default, and there are also configuration changes, such as the default configuration of system bars."),(0,a.kt)("h3",{id:"edge-to-edge-enforcement"},"Edge-to-edge enforcement"),(0,a.kt)("p",null,"Apps are edge-to-edge by default on devices running Android 15 if the app is targeting Android 15 (API level 35)."),(0,a.kt)("p",null,"An app that targets Android 14 and is not edge-to-edge on an Android 15 device. The application is contained within the window insets."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(40159).Z,width:"960",height:"540"})),(0,a.kt)("p",null,"After updating your target sdk to 35 you will find that your application is now expected to handle the window insets and is rendered edge-to-edge. However, many elements are now hidden by the status bar, 3-button navigation bar, or display cutout due to the Android 15 edge-to-edge enforcements. "),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(44589).Z,width:"960",height:"540"})),(0,a.kt)("p",null,"You will need to update your application to correctly handle rendering within the window insets and render within these bounds so UI elements are not hidden."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(7587).Z,width:"960",height:"540"})),(0,a.kt)("h3",{id:"handling-window-insets"},"Handling window insets"),(0,a.kt)("p",null,"To get the safe area to render you can use the ",(0,a.kt)("a",{parentName:"p",href:"https://airnativeextensions.com/extension/com.distriqt.Application"},"Application")," extension to retrieve the display cutout information:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"var displayCutout:DisplayCutout = Application.service.display.getDisplayCutout();\n")),(0,a.kt)("p",null,"This object contains 4 properties: ",(0,a.kt)("inlineCode",{parentName:"p"},"safeInsetBottom"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"safeInsetTop"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"safeInsetLeft"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"safeInsetRight"),", each indicating the number of pixels from the edge of the screen that system bars or cutouts may affect."),(0,a.kt)("p",null,"There is also an ",(0,a.kt)("inlineCode",{parentName:"p"},"boundingRects")," property containing detailed areas for any cutouts that may affect rendering."),(0,a.kt)("p",null,'You can use this to apply bounds to your root content "safe area", eg using a starling ',(0,a.kt)("inlineCode",{parentName:"p"},"_safeArea")," object for rendering UI elements you can use something like the following :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (Application.isSupported)\n{\n    var cutout:DisplayCutout = Application.service.display.getDisplayCutout();\n    var topInset:Number = cutout.safeInsetTop / _scale;\n    var bottomInset:Number = cutout.safeInsetBottom / _scale;\n    var leftInset:Number = cutout.safeInsetLeft / _scale;\n    var rightInset:Number = cutout.safeInsetRight / _scale;\n\n    _safeArea.setTo(leftInset, topInset,\n        _stageWidth - leftInset - rightInset,\n        _stageHeight - topInset - bottomInset);\n}\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"If you use immersive mode or change display modes at any time in your application you should ensure to reapply these corrections afterwards. ")),(0,a.kt)("h3",{id:"cutouts"},"Cutouts"),(0,a.kt)("p",null,"If your app targets SDK 35 and is running on an Android 15 device, ",(0,a.kt)("inlineCode",{parentName:"p"},"LayoutMode.CUTOUT_ALWAYS")," is the default behavior. This means that if you were previously relying on setting the LayoutMode eg via calling "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"Application.service.display.setDisplayMode( \n    DisplayMode.FULLSCREEN, \n    LayoutMode.CUTOUT_NEVER );\n")),(0,a.kt)("p",null,'this will be interpretted as "always" and your content will be drawn into cutout regions.'),(0,a.kt)("h3",{id:"opt-out"},"Opt-out"),(0,a.kt)("p",null,"As a temporary workaround you can opt-out of this edge-to-edge enforcement in v35."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This option to opt-out will be removed once you update to target v36, so this workaround should only be treated as temporary.")),(0,a.kt)("p",null,"Firstly, create a custom resources folder in your application and package it according to the guide ",(0,a.kt)("a",{parentName:"p",href:"https://airsdk.dev/docs/tutorials/platform/android/custom-resources"},"here"),"."),(0,a.kt)("p",null,"Under your resources folder create a ",(0,a.kt)("inlineCode",{parentName:"p"},"values-v35")," folder and add a file ",(0,a.kt)("inlineCode",{parentName:"p"},"styles.xml")," into this folder with the following content:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="styles.xml"',title:'"styles.xml"'},'<?xml version="1.0" encoding="utf-8"?>\n<resources>\n\n    <style name="Theme.NoShadow" parent="android:style/Theme.NoTitleBar">\n        <item name="android:windowContentOverlay">@null</item>\n        <item name="android:windowOptOutEdgeToEdgeEnforcement">true</item>\n    </style>\n\n</resources>\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"android:windowOptOutEdgeToEdgeEnforcement")," option is the critical one that will disable this edge-to-edge enforcement for Android 35."))}c.isMDXComponent=!0},7587:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/android35-edge-to-edge-2-929963de889ad3f7e2ace912ac920116.png"},40159:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/android35-edge-to-edge-4-4069731dd9f06c2ee0d9a1cc421869d0.png"},44589:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/android35-edge-to-edge-6-a79d7d017dd4806a0f9d479a16dfa418.png"}}]);
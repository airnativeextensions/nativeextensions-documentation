"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[98192],{3905:function(e,n,a){a.d(n,{Zo:function(){return c},kt:function(){return m}});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),u=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},c=function(e){var n=u(e.components);return t.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(a),m=r,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return a?t.createElement(f,o(o({ref:n},c),{},{components:a})):t.createElement(f,o({ref:n},c))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=a[u];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},85162:function(e,n,a){a.d(n,{Z:function(){return o}});var t=a(67294),r=a(86010),i="tabItem_Ymn6";function o(e){var n=e.children,a=e.hidden,o=e.className;return t.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:a},n)}},74866:function(e,n,a){a.d(n,{Z:function(){return A}});var t=a(87462),r=a(67294),i=a(86010),o=a(12466),l=a(16550),s=a(91980),u=a(67392),c=a(50012);function d(e){return function(e){var n,a;return null!=(n=null==(a=r.Children.map(e,(function(e){if(!e||(0,r.isValidElement)(e)&&(n=e.props)&&"object"==typeof n&&"value"in n)return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:a.filter(Boolean))?n:[]}(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}function p(e){var n=e.values,a=e.children;return(0,r.useMemo)((function(){var e=null!=n?n:d(a);return function(e){var n=(0,u.l)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,a])}function m(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function f(e){var n=e.queryString,a=void 0!==n&&n,t=e.groupId,i=(0,l.k6)(),o=function(e){var n=e.queryString,a=void 0!==n&&n,t=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:a,groupId:t});return[(0,s._X)(o),(0,r.useCallback)((function(e){if(o){var n=new URLSearchParams(i.location.search);n.set(o,e),i.replace(Object.assign({},i.location,{search:n.toString()}))}}),[o,i])]}function g(e){var n,a,t,i,o=e.defaultValue,l=e.queryString,s=void 0!==l&&l,u=e.groupId,d=p(e),g=(0,r.useState)((function(){return function(e){var n,a=e.defaultValue,t=e.tabValues;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:t}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+t.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var r=null!=(n=t.find((function(e){return e.default})))?n:t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:o,tabValues:d})})),v=g[0],h=g[1],y=f({queryString:s,groupId:u}),b=y[0],k=y[1],E=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),a=(0,c.Nk)(n),t=a[0],i=a[1],[t,(0,r.useCallback)((function(e){n&&i.set(e)}),[n,i])]),A=E[0],w=E[1],I=function(){var e=null!=b?b:A;return m({value:e,tabValues:d})?e:null}();return(0,r.useLayoutEffect)((function(){I&&h(I)}),[I]),{selectedValue:v,selectValue:(0,r.useCallback)((function(e){if(!m({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);h(e),k(e),w(e)}),[k,w,d]),tabValues:d}}var v=a(72389),h="tabList__CuJ",y="tabItem_LNqP";function b(e){var n=e.className,a=e.block,l=e.selectedValue,s=e.selectValue,u=e.tabValues,c=[],d=(0,o.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var n=e.currentTarget,a=c.indexOf(n),t=u[a].value;t!==l&&(d(n),s(t))},m=function(e){var n,a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var t,r=c.indexOf(e.currentTarget)+1;a=null!=(t=c[r])?t:c[0];break;case"ArrowLeft":var i,o=c.indexOf(e.currentTarget)-1;a=null!=(i=c[o])?i:c[c.length-1]}null==(n=a)||n.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},n)},u.map((function(e){var n=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,t.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:function(e){return c.push(e)},onKeyDown:m,onClick:p},o,{className:(0,i.Z)("tabs__item",y,null==o?void 0:o.className,{"tabs__item--active":l===n})}),null!=a?a:n)})))}function k(e){var n=e.lazy,a=e.children,t=e.selectedValue,i=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){var o=i.find((function(e){return e.props.value===t}));return o?(0,r.cloneElement)(o,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t})})))}function E(e){var n=g(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",h)},r.createElement(b,(0,t.Z)({},e,n)),r.createElement(k,(0,t.Z)({},e,n)))}function A(e){var n=(0,v.Z)();return r.createElement(E,(0,t.Z)({key:String(n)},e))}},47013:function(e,n,a){a.r(n),a.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return m}});var t=a(87462),r=a(63366),i=(a(67294),a(3905)),o=a(74866),l=a(85162),s=["components"],u={title:"Amazon SDK Setup",sidebar_label:"Amazon"},c=void 0,d={unversionedId:"pushnotifications/onesignal/amazon",id:"pushnotifications/onesignal/amazon",title:"Amazon SDK Setup",description:"If you wish to use Amazon device messaging in OneSignal you will need to do some additional changes to your installation.",source:"@site/docs/pushnotifications/onesignal/amazon.mdx",sourceDirName:"pushnotifications/onesignal",slug:"/pushnotifications/onesignal/amazon",permalink:"/docs/pushnotifications/onesignal/amazon",draft:!1,tags:[],version:"current",frontMatter:{title:"Amazon SDK Setup",sidebar_label:"Amazon"}},p={},m=[{value:"Amazon API Key File",id:"amazon-api-key-file",level:2},{value:"Update Manifest",id:"update-manifest",level:2}],f={toc:m};function g(e){var n=e.components,u=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,t.Z)({},f,u,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"If you wish to use Amazon device messaging in OneSignal you will need to do some additional changes to your installation."),(0,i.kt)("p",null,"We will assume you have already setup your OneSignal account and have your App ID. If not see the ",(0,i.kt)("a",{parentName:"p",href:"/docs/pushnotifications/onesignal/"},"setup")," section."),(0,i.kt)("h2",{id:"amazon-api-key-file"},"Amazon API Key File"),(0,i.kt)("p",null,"Download the ",(0,i.kt)("inlineCode",{parentName:"p"},"agconnect-services.json")," file:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"From the AppGallery Connect Project List select your app.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ensure you have added your certificate SHA fingerprint to your app configuration.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Click on the "agconnect-services.json" button to download this file.'))),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(99764).Z,width:"1262",height:"696"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Place this file at the root of your application and ensure it is packaged.")),(0,i.kt)("h2",{id:"update-manifest"},"Update Manifest"),(0,i.kt)("p",null,"In order to support Amazon we need to add a few things to the manifest additions in your app descriptor."),(0,i.kt)(o.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"apm",mdxType:"TabItem"},(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"apm")," you can generate a custom configuration which can be merged into your app descriptor by ",(0,i.kt)("inlineCode",{parentName:"p"},"apm"),". Firstly create a configuration for android:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apm generate config android\n")),(0,i.kt)("p",null,"Then edit the file created at ",(0,i.kt)("inlineCode",{parentName:"p"},"config/android/AndroidManifest.xml"),"."),(0,i.kt)("p",null,"Firstly add the amazon namespace at the top of the file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n<manifest xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:amazon="http://schemas.amazon.com/apk/res/android"\n>\n')),(0,i.kt)("p",null,"Then add the following permissions, services and receivers, so your file should resemble:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n<manifest xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:amazon="http://schemas.amazon.com/apk/res/android"\n>\n    <uses-sdk android:minSdkVersion="19" android:targetSdkVersion="33"/>\n\n    <uses-permission android:name="com.amazon.device.messaging.permission.RECEIVE" />\n    <permission android:name="${applicationId}.permission.RECEIVE_ADM_MESSAGE" android:protectionLevel="signature" />\n    <uses-permission android:name="${applicationId}.permission.RECEIVE_ADM_MESSAGE" />\n\n    <application>\n\n        <amazon:enable-feature android:name="com.amazon.device.messaging" android:required="false"/>\n        <service android:name="com.onesignal.notifications.services.ADMMessageHandler" android:exported="false" />\n        <service android:name="com.onesignal.notifications.services.ADMMessageHandlerJob"\n                android:permission="android.permission.BIND_JOB_SERVICE"\n                android:exported="false" />\n        <receiver android:name="com.onesignal.notifications.receivers.ADMMessageReceiver"\n                android:permission="com.amazon.device.messaging.permission.SEND"\n                android:exported="true" >\n            <intent-filter>\n                <action android:name="com.amazon.device.messaging.intent.REGISTRATION" />\n                <action android:name="com.amazon.device.messaging.intent.RECEIVE" />\n                <category android:name="${applicationId}" />\n            </intent-filter>\n        </receiver>\n\n    </application>\n\n</manifest>\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Do not change the ",(0,i.kt)("inlineCode",{parentName:"p"},"${applicationId}")," references as these will be automatically handled by the merge process.")),(0,i.kt)("p",null,"Then regenerate your application descriptor."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apm generate app-descriptor\n"))),(0,i.kt)(l.Z,{value:"manual",mdxType:"TabItem"},(0,i.kt)("p",null,"To manually do this you will need to manually add the following to your manifest additions in your application descriptor."),(0,i.kt)("p",null,"Firstly add the amazon namespace at the top of the file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<manifestAdditions><![CDATA[\n            <manifest xmlns:amazon="http://schemas.amazon.com/apk/res/android">\n\n      ...\n\n      ]]>\n</manifestAdditions>\n')),(0,i.kt)("p",null,"You should add the listing below to your manifest, ensure you merge the ",(0,i.kt)("inlineCode",{parentName:"p"},"application")," node with any existing node in your manifest.\nThe following listing should be added along with the listing used when originally installing OneSignal."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Ensure you replace:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"APPLICATION_PACKAGE")," with your AIR application's Java package name, something like ",(0,i.kt)("inlineCode",{parentName:"li"},"air.com.distriqt.test"),". Generally this is your AIR application id prefixed by ",(0,i.kt)("inlineCode",{parentName:"li"},"air.")," unless you have specified no air flair in your build options."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<uses-permission android:name="com.amazon.device.messaging.permission.RECEIVE" />\n<permission android:name="APPLICATION_PACKAGE.permission.RECEIVE_ADM_MESSAGE" android:protectionLevel="signature" />\n<uses-permission android:name="APPLICATION_PACKAGE.permission.RECEIVE_ADM_MESSAGE" />\n\n<application>\n  <amazon:enable-feature android:name="com.amazon.device.messaging"\n                         android:required="false"/>\n  <service android:name="com.onesignal.ADMMessageHandler"\n           android:exported="false" />\n  <service android:name="com.onesignal.ADMMessageHandlerJob"\n           android:permission="android.permission.BIND_JOB_SERVICE"\n           android:exported="false" />\n  <receiver android:name="com.onesignal.ADMMessageHandler$Receiver"\n            android:permission="com.amazon.device.messaging.permission.SEND" >\n    <intent-filter>\n      <action android:name="com.amazon.device.messaging.intent.REGISTRATION" />\n      <action android:name="com.amazon.device.messaging.intent.RECEIVE" />\n      <category android:name="APPLICATION_PACKAGE" />\n    </intent-filter>\n  </receiver>\n</application>\n')))))}g.isMDXComponent=!0},99764:function(e,n,a){n.Z=a.p+"assets/images/onesignal_hms_agconnect-services-2cb45469a6ad608f81d0b184e1b1bd7c.png"}}]);
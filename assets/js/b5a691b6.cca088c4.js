"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[13302],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return u}});var o=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=o.createContext({}),d=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=d(e.components);return o.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=d(t),u=i,p=f["".concat(l,".").concat(u)]||f[u]||m[u]||r;return t?o.createElement(p,a(a({ref:n},c),{},{components:t})):o.createElement(p,a({ref:n},c))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var d=2;d<r;d++)a[d]=t[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},15785:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return f}});var o=t(87462),i=t(63366),r=(t(67294),t(3905)),a=["components"],s={title:"RemoteConfig - Add the extensions",sidebar_label:"Add the extensions"},l=void 0,d={unversionedId:"firebase/remoteconfig/add-the-extensions",id:"firebase/remoteconfig/add-the-extensions",title:"RemoteConfig - Add the extensions",description:"Required Extensions",source:"@site/docs/firebase/remoteconfig/add-the-extensions.md",sourceDirName:"firebase/remoteconfig",slug:"/firebase/remoteconfig/add-the-extensions",permalink:"/docs/firebase/remoteconfig/add-the-extensions",tags:[],version:"current",frontMatter:{title:"RemoteConfig - Add the extensions",sidebar_label:"Add the extensions"},sidebar:"firebase",previous:{title:"Set Initial Values",permalink:"/docs/firebase/remoteconfig/set-initial-values"},next:{title:"Initialise",permalink:"/docs/firebase/remoteconfig/initialise"}},c=[{value:"Required Extensions",id:"required-extensions",children:[{value:"Firebase Remote Config",id:"firebase-remote-config",children:[],level:3}],level:2},{value:"Extension IDs",id:"extension-ids",children:[],level:2},{value:"Android",id:"android",children:[{value:"Manifest Additions",id:"manifest-additions",children:[],level:3}],level:2}],m={toc:c};function f(e){var n=e.components,t=(0,i.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"required-extensions"},"Required Extensions"),(0,r.kt)("p",null,"You should have been through the setup of the Firebase Core before attempting to proceed with Remote Config."),(0,r.kt)("p",null,"Make sure you have added all the extensions required for the Firebase Core extension as outlined ",(0,r.kt)("a",{parentName:"p",href:"../core/add-the-extensions"},"here"),"."),(0,r.kt)("h3",{id:"firebase-remote-config"},"Firebase Remote Config"),(0,r.kt)("p",null,"The only required additional ANE is the Remote Config ANE located in this repository:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-Firebase/raw/master/lib/com.distriqt.firebase.RemoteConfig.ane"},(0,r.kt)("inlineCode",{parentName:"a"},"com.distriqt.firebase.RemoteConfig")))),(0,r.kt)("p",null,"This ANE contains all the required libraries for the main Firebase Remote Config functionality."),(0,r.kt)("h2",{id:"extension-ids"},"Extension IDs"),(0,r.kt)("p",null,"The following should be added to your ",(0,r.kt)("inlineCode",{parentName:"p"},"extensions")," node in your application descriptor to identify all the required ANEs in your application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<extensions>\n    <extensionID>com.distriqt.Core</extensionID>\n\n    <extensionID>com.distriqt.playservices.Base</extensionID>\n    <extensionID>com.distriqt.playservices.AdsIdentifier</extensionID>\n\n    <extensionID>com.google.protobuflite</extensionID>\n    <extensionID>com.google.firebase.core</extensionID>\n\n    <extensionID>androidx.core</extensionID>\n\n    <extensionID>com.distriqt.Firebase</extensionID>\n    <extensionID>com.distriqt.firebase.RemoteConfig</extensionID>\n\n    <extensionID>com.distriqt.CustomResources</extensionID>\n</extensions>\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"android"},"Android"),(0,r.kt)("h3",{id:"manifest-additions"},"Manifest Additions"),(0,r.kt)("p",null,"Locate the ",(0,r.kt)("inlineCode",{parentName:"p"},"ComponentDiscoveryService")," service you added as part of the core Firebase manfiest additions and add the following meta data tags:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<meta-data\n    android:name="com.google.firebase.components:com.google.firebase.remoteconfig.RemoteConfigRegistrar"\n    android:value="com.google.firebase.components.ComponentRegistrar" />\n<meta-data\n    android:name="com.google.firebase.components:com.google.firebase.abt.component.AbtRegistrar"\n    android:value="com.google.firebase.components.ComponentRegistrar" />\n')),(0,r.kt)("p",null,"It should now appear like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<service android:name="com.google.firebase.components.ComponentDiscoveryService" \n        android:directBootAware="true"\n        android:exported="false">\n    <meta-data\n        android:name="com.google.firebase.components:com.google.firebase.remoteconfig.RemoteConfigRegistrar"\n        android:value="com.google.firebase.components.ComponentRegistrar" />\n    <meta-data\n        android:name="com.google.firebase.components:com.google.firebase.abt.component.AbtRegistrar"\n        android:value="com.google.firebase.components.ComponentRegistrar" />\n\n    <meta-data\n        android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar"\n        android:value="com.google.firebase.components.ComponentRegistrar" />\n    <meta-data\n        android:name="com.google.firebase.components:com.google.firebase.installations.FirebaseInstallationsRegistrar"\n        android:value="com.google.firebase.components.ComponentRegistrar" />\n    <meta-data\n        android:name="com.google.firebase.components:com.google.firebase.dynamicloading.DynamicLoadingRegistrar"\n        android:value="com.google.firebase.components.ComponentRegistrar" />\n</service>\n')))}f.isMDXComponent=!0}}]);
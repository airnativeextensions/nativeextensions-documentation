(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{72:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(6),c=(n(0),n(728)),o={title:"Firestore - Add Data",sidebar_label:"Add Data"},i={unversionedId:"firebase/firestore/add-data",id:"firebase/firestore/add-data",isDocsHomePage:!1,title:"Firestore - Add Data",description:"Add data",source:"@site/docs/firebase/firestore/add-data.md",slug:"/firebase/firestore/add-data",permalink:"/docs/firebase/firestore/add-data",version:"current",sidebar_label:"Add Data",sidebar:"firebase",previous:{title:"Firestore - Add the extension",permalink:"/docs/firebase/firestore/add-the-extension"},next:{title:"Firestore - Transactions and batched writes",permalink:"/docs/firebase/firestore/transactions-and-batched-writes"}},s=[{value:"Add data",id:"add-data",children:[{value:"Set a document",id:"set-a-document",children:[]},{value:"Data types",id:"data-types",children:[]},{value:"Custom objects",id:"custom-objects",children:[]},{value:"Add a document",id:"add-a-document",children:[]},{value:"Update a document",id:"update-a-document",children:[]}]}],d={rightToc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"add-data"},"Add data"),Object(c.b)("p",null,"Cloud Firestore stores data in Documents, which are stored in Collections. Cloud Firestore creates collections and documents implicitly the first time you add data to the document. You do not need to explicitly create collections or documents."),Object(c.b)("p",null,"There are several ways to write data to Cloud Firestore:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Set the data of a document within a collection, explicitly specifying a document identifier."),Object(c.b)("li",{parentName:"ul"},"Add a new document to a collection. In this case, Cloud Firestore automatically generates the document identifier."),Object(c.b)("li",{parentName:"ul"},"Create an empty document with an automatically generated identifier, and assign data to it later.")),Object(c.b)("p",null,"This guide explains how to use the ",Object(c.b)("inlineCode",{parentName:"p"},"setDocument()"),", ",Object(c.b)("inlineCode",{parentName:"p"},"add()"),", or ",Object(c.b)("inlineCode",{parentName:"p"},"update()")," methods to write data to individual documents in Cloud Firestore. "),Object(c.b)("h3",{id:"set-a-document"},"Set a document"),Object(c.b)("p",null,"To create or overwrite a single document, use the ",Object(c.b)("inlineCode",{parentName:"p"},"setDocument()")," method:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),'var city:Object = {\n                name: "Los Angeles",\n                state: "CA",\n                country:  "USA"\n            };\n\nvar document:DocumentReference = FirebaseFirestore.service.collection( "cities" ).document( "LA" );\n            \ndocument.addEventListener( DocumentReferenceEvent.SET_SUCCESS, successHandler );\ndocument.addEventListener( DocumentReferenceEvent.SET_ERROR, errorHandler );\ndocument.setDocument( city );\n')),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"setDocument()")," call will dispatch one of two events:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"DocumentReferenceEvent.SET_SUCCESS"),": The document has been correctly set with the new data"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"DocumentReferenceEvent.SET_ERROR"),": There was an error setting the data to the document")),Object(c.b)("p",null,"You should ensure you remove the event listeners at this point to ensure the extension can correctly clean up memory usage of unused document references."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),'function successHandler( event:DocumentReferenceEvent ):void\n{\n    event.currentTarget.removeEventListener( DocumentReferenceEvent.SET_SUCCESS, successHandler );\n    event.currentTarget.removeEventListener( DocumentReferenceEvent.SET_ERROR, errorHandler );\n    \n    trace( "Set Document: Success" );\n}\n\nfunction errorHandler( event:DocumentReferenceEvent ):void\n{\n    event.currentTarget.removeEventListener( DocumentReferenceEvent.SET_SUCCESS, successHandler );\n    event.currentTarget.removeEventListener( DocumentReferenceEvent.SET_ERROR, errorHandler );\n    \n    trace( "Get Document Error: " + event.message );\n}\n')),Object(c.b)("p",null,"Alternatively you can add a success and failure listener directly:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),"document.setDocument( city )\n    .addOnSuccessListener( function( snapshot:DocumentSnapshot ):void {\n        // Document was successfully set\n    })\n    .addOnFailureListener( function( message:String ):void {\n        // Error occurred\n    });\n")),Object(c.b)("p",null,"If the document does not exist, it will be created. If the document does exist, its contents will be overwritten with the newly provided data, unless you specify that the data should be merged into the existing document, as follows:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),"document.setDocument( city, SetOptions.merge() );\n")),Object(c.b)("p",null,"If you're not sure whether the document exists, pass the option to merge the new data with any existing document to avoid overwriting entire documents."),Object(c.b)("h3",{id:"data-types"},"Data types"),Object(c.b)("p",null,"Cloud Firestore lets you write a variety of data types inside a document, including strings, booleans, numbers, dates, null, and nested arrays and objects. Cloud Firestore always stores numbers as doubles, regardless of what type of number you use in your code."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),'var data:Object = {\n    stringExample: "Hello world!",\n    booleanExample: true,\n    numberExample: 3.14159265,\n    dateExample: new Date(),\n    nullExample: null,\n    arrayExample: [ 1, 2, 3 ],\n    nestedData: {\n        a: 5,\n        b: true\n    }\n};\n')),Object(c.b)("h4",{id:"blob"},"Blob"),Object(c.b)("p",null,"You can use a ",Object(c.b)("inlineCode",{parentName:"p"},"Blob")," (",Object(c.b)("inlineCode",{parentName:"p"},"com.distriqt.extension.firebase.firestore.Blob"),") to add ",Object(c.b)("inlineCode",{parentName:"p"},"ByteArray")," style data to your documents."),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"Blob")," data type inherits from a ",Object(c.b)("inlineCode",{parentName:"p"},"ByteArray")," and handles conversion to and from the Firestore Blob format. So you can simply use the standard ",Object(c.b)("inlineCode",{parentName:"p"},"ByteArray")," functions to store data and then add it to your document."),Object(c.b)("p",null,"For example, construct a ",Object(c.b)("inlineCode",{parentName:"p"},"Blob")," and write 2 bytes to it:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),"var bytes:Blob = new Blob();\nbytes.writeByte(0xa0);\nbytes.writeByte(0x7f);\n")),Object(c.b)("p",null,"Then use this as a value in your data object and pass it to ",Object(c.b)("inlineCode",{parentName:"p"},"setDocument()"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),'var data:Object = {\n    title: "Some data",\n    byteData: bytes\n};\n\ndocument.setDocument( data );\n')),Object(c.b)("h3",{id:"custom-objects"},"Custom objects"),Object(c.b)("p",null,"Not currently supported"),Object(c.b)("h3",{id:"add-a-document"},"Add a document"),Object(c.b)("p",null,"When you use ",Object(c.b)("inlineCode",{parentName:"p"},"setDocument()")," to create a document, you must specify an ID for the document to create. For example:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),'FirebaseFirestore.service.collection( "cities" ).document( "LA" ).setDocument(data);\n')),Object(c.b)("p",null,"But sometimes there isn't a meaningful ID for the document, and it's more convenient to let Cloud Firestore auto-generate an ID for you. You can do this by calling ",Object(c.b)("inlineCode",{parentName:"p"},"add()"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),'var collection:CollectionReference = FirebaseFirestore.service.collection( "cities" );\n\ncollection.addEventListener( CollectionReferenceEvent.ADD_SUCCESS, successHandler );\ncollection.addEventListener( CollectionReferenceEvent.ADD_ERROR, errorHandler );\ncollection.add( data );\n        \nfunction successHandler( event:CollectionReferenceEvent ):void\n{\n    event.currentTarget.removeEventListener( CollectionReferenceEvent.ADD_SUCCESS, successHandler );\n    event.currentTarget.removeEventListener( CollectionReferenceEvent.ADD_ERROR, errorHandler );\n    \n    trace( "Add Success: document.getId()   = " + event.document.getId() );\n    trace( "Add Success: document.getPath() = " + event.document.getPath() );\n}\n\nfunction errorHandler( event:CollectionReferenceEvent ):void\n{\n    event.currentTarget.removeEventListener( CollectionReferenceEvent.ADD_SUCCESS, successHandler );\n    event.currentTarget.removeEventListener( CollectionReferenceEvent.ADD_ERROR, errorHandler );\n    \n    trace( "Add Error: " + event.message );\n}\n')),Object(c.b)("p",null,"In some cases, it can be useful to create a document reference with an auto-generated ID, then use the reference later. For this use case, you can call ",Object(c.b)("inlineCode",{parentName:"p"},"document()"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),'var document:DocumentReference = FirebaseFirestore.service.collection( "cities" ).document();\n\n// ... later\ndocument.set( data );\n')),Object(c.b)("p",null,"Behind the scenes, ",Object(c.b)("inlineCode",{parentName:"p"},".add(...)")," and ",Object(c.b)("inlineCode",{parentName:"p"},".document().setDocument(...)")," are completely equivalent, so you can use whichever is more convenient."),Object(c.b)("h3",{id:"update-a-document"},"Update a document"),Object(c.b)("p",null,"To update some fields of a document without overwriting the entire document, use the ",Object(c.b)("inlineCode",{parentName:"p"},"update()")," method:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),'var changes:Object = {\n                population:  4018000\n            };\n            \nvar document:DocumentReference = FirebaseFirestore.service.collection( "cities" ).document( "LA" );\n\ndocument.addEventListener( DocumentReferenceEvent.UPDATE_SUCCESS, successHandler );\ndocument.addEventListener( DocumentReferenceEvent.UPDATE_ERROR, errorHandler );\ndocument.update( changes );\n\n\nfunction successHandler( event:DocumentReferenceEvent ):void\n{\n    event.currentTarget.removeEventListener( DocumentReferenceEvent.UPDATE_SUCCESS, successHandler );\n    event.currentTarget.removeEventListener( DocumentReferenceEvent.UPDATE_ERROR, errorHandler );\n    \n    trace( "Update Success" );\n}\n\nfunction errorHandler( event:DocumentReferenceEvent ):void\n{\n    event.currentTarget.removeEventListener( DocumentReferenceEvent.UPDATE_SUCCESS, successHandler );\n    event.currentTarget.removeEventListener( DocumentReferenceEvent.UPDATE_ERROR, errorHandler );\n    \n    trace( "Update Error: " + event.message );\n}\n')),Object(c.b)("p",null,"You can also add server timestamps to specific fields in your documents, to track when an update was received by the server:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),'var changes:Object = {\n                population:  4018000,\n                timestamp: FieldValue.serverTimestamp()\n            };\n\nvar document:DocumentReference = FirebaseFirestore.service.collection( "cities" ).document( "LA" );\n        \ndocument.update( changes );\n')))}l.isMDXComponent=!0},728:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return p}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),l=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,p=u["".concat(o,".").concat(m)]||u[m]||b[m]||c;return n?a.a.createElement(p,i(i({ref:t},d),{},{components:n})):a.a.createElement(p,i({ref:t},d))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<c;d++)o[d]=n[d];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[485],{1170:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/alerts-2fd289385443894b490c92ed7071813f.png"},1171:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/alerts-textinput-f6d241ead50b51c69aa672f62b664931.png"},541:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return d}));var a=n(2),r=n(6),i=(n(0),n(813)),l={title:"Alerts",sidebar_label:"Alerts"},o={unversionedId:"dialog/alerts",id:"dialog/alerts",isDocsHomePage:!1,title:"Alerts",description:"The alert dialog is a modal dialog that can display a title, a message and a series of actions.",source:"@site/docs/dialog/alerts.md",slug:"/dialog/alerts",permalink:"/docs/dialog/alerts",version:"current",sidebar_label:"Alerts",sidebar:"dialog",previous:{title:"Toast",permalink:"/docs/dialog/toast"},next:{title:"Text View Alert",permalink:"/docs/dialog/text-view-alert"}},s=[{value:"Options",id:"options",children:[]},{value:"Text Fields",id:"text-fields",children:[]}],c={rightToc:s};function d(e){var t=e.components,l=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,l,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("img",{src:n(1170).default})),Object(i.b)("p",null,"The alert dialog is a modal dialog that can display a title, a message and a series of actions.\nIt is the most common dialog that you will use to inform the user of critical actions and to\nget user feedback."),Object(i.b)("p",null,"Alerts are created using an ",Object(i.b)("inlineCode",{parentName:"p"},"AlertBuilder"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'var alert:DialogView = Dialog.service.create( \n            new AlertBuilder()\n                .setTitle( "Alert" )\n                .setMessage( "Test Message" )\n                .addOption( "OK", DialogAction.STYLE_POSITIVE, 0 )\n                .build()\n            );\nalert.addEventListener( DialogViewEvent.CLOSED, alert_closedHandler );\nalert.show();\n\n...\n\nprivate function alert_closedHandler( event:DialogViewEvent ):void\n{\n    var alert:DialogView = DialogView(event.currentTarget);\n    alert.removeEventListener( DialogViewEvent.CLOSED, alert_closedHandler );\n    alert.dispose();\n}\n')),Object(i.b)("h2",{id:"options"},"Options"),Object(i.b)("p",null,"You can add multiple options to get a user selection by calling the ",Object(i.b)("inlineCode",{parentName:"p"},"addOption")," function\non the ",Object(i.b)("inlineCode",{parentName:"p"},"AlertBuilder")," for each option and the closed event will indicate the index of\nthe option selected by the user. Each option can also have a style, allowing you to\nfurther indicate the result of the action to the user."),Object(i.b)("p",null,"In the following example we add 3 options, one being destructive (which will show up red\non iOS)."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'var alert:DialogView = Dialog.service.create( \n            new AlertBuilder()\n                .setTitle( "Multiple Option Alert" )\n                .setMessage( "Test Message" )\n                .setCancelLabel( "Cancel" )\n                .addOption( "Option A", DialogAction.STYLE_DESTRUCTIVE )\n                .addOption( "Option B" ) \n                .addOption( "Option C" )\n                .build()\n            );\nalert.addEventListener( DialogViewEvent.CLOSED, alert_closedHandler );\nalert.show();\n\n...\n\nprivate function alert_closedHandler( event:DialogViewEvent ):void\n{\n    trace( "alert closed: " + event.index );\n    var alert:DialogView = DialogView(event.currentTarget);\n    alert.removeEventListener( DialogViewEvent.CLOSED, alert_closedHandler );\n    alert.dispose();\n}\n')),Object(i.b)("h2",{id:"text-fields"},"Text Fields"),Object(i.b)("p",null,Object(i.b)("img",{src:n(1171).default})),Object(i.b)("p",null,"The alert dialog can also contain text inputs. These can be used to gather user input,\nsuch as a username and password. You add text fields by using the ",Object(i.b)("inlineCode",{parentName:"p"},"addTextField")," function\non the ",Object(i.b)("inlineCode",{parentName:"p"},"AlertBuilder"),". The values for the text fields are then returned in the ",Object(i.b)("inlineCode",{parentName:"p"},"values"),"\narray on the closed event."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'var alert:DialogView = Dialog.service.create( \n        new AlertBuilder()\n            .setTitle( "Text Input Alert" )\n            .setMessage( "Enter your username and password" )\n            .addTextField( "", "Username" )\n            .addTextField( "", "Password", true )\n            .addOption( "OK", DialogAction.STYLE_POSITIVE )\n            .addOption( "Cancel", DialogAction.STYLE_CANCEL )\n            .build()\n        );\nalert.addEventListener( DialogViewEvent.CLOSED, textInputAlert_closedHandler );\nalert.show();\n\n...\n\nprivate function textInputAlert_closedHandler( event:DialogViewEvent ):void\n{\n    trace( "text input closed: " + event.index +"::"+ event.values.join(",") );\n    var alert:DialogView = DialogView(event.currentTarget);\n    alert.removeEventListener( DialogViewEvent.CLOSED, textInputAlert_closedHandler );\n    alert.dispose();\n}\n')))}d.isMDXComponent=!0},813:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return g}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),b=a,g=u["".concat(l,".").concat(b)]||u[b]||p[b]||i;return n?r.a.createElement(g,o(o({ref:t},c),{},{components:n})):r.a.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=b;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[647],{702:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(6),c=(n(0),n(821)),o={title:"Batch",sidebar_label:"Batch"},i={unversionedId:"facebookapi/core/graph-api/batch",id:"facebookapi/core/graph-api/batch",isDocsHomePage:!1,title:"Batch",description:"If you have several requests you wish to batch together you can use the GraphRequestBatchBuilder to create a batch request.",source:"@site/docs/facebookapi/core/graph-api/batch.md",slug:"/facebookapi/core/graph-api/batch",permalink:"/docs/facebookapi/core/graph-api/batch",version:"current",sidebar_label:"Batch"},s=[{value:"Events",id:"events",children:[]},{value:"Callbacks",id:"callbacks",children:[]}],l={rightToc:s};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"If you have several requests you wish to batch together you can use the ",Object(c.b)("inlineCode",{parentName:"p"},"GraphRequestBatchBuilder")," to create a batch request."),Object(c.b)("p",null,"To create a batch, firstly create your ",Object(c.b)("inlineCode",{parentName:"p"},"GraphRequest")," instances as normal:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'var request1:GraphRequest = new GraphRequestBuilder()\n        .setPath(\'/me\')\n        .setMethod(\'GET\')\n        .addFields(["first_name","gender","picture.width(160).height(160)" ])\n        .build();\n\nvar request2:GraphRequest = new GraphRequestBuilder()\n        .setPath(\'/me/friends\')\n        .setMethod(\'GET\')\n        .addParameter("limit", 200 )\n        .addFields(["id","first_name","installed","picture.width(160).height(160)" ])\n        .build();\n')),Object(c.b)("p",null,"Then construct the ",Object(c.b)("inlineCode",{parentName:"p"},"GraphRequestBatch")," using a ",Object(c.b)("inlineCode",{parentName:"p"},"GraphRequestBatchBuilder"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),"var batch:GraphRequestBatch = new GraphRequestBatchBuilder()\n    .addRequest( request1 )\n    .addRequest( request2 )\n    .build();\n")),Object(c.b)("p",null,"Then call ",Object(c.b)("inlineCode",{parentName:"p"},"makeBatchRequest()")," with your ",Object(c.b)("inlineCode",{parentName:"p"},"GraphRequestBatch")," instance:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),"Facebook.instance.graphAPI.makeBatchRequest( batch );\n")),Object(c.b)("h2",{id:"events"},"Events"),Object(c.b)("p",null,"You can add event listeners to the request objects to process the return data from each individual request, as you would for a single request:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),"request1.addEventListener( GraphRequestEvent.COMPLETE, request1_completeHandler );\nrequest1.addEventListener( GraphRequestEvent.ERROR, request1_errorHandler );\nrequest2.addEventListener( GraphRequestEvent.COMPLETE, request2_completeHandler );\nrequest2.addEventListener( GraphRequestEvent.ERROR, request2_errorHandler );\n\nfunction request1_completeHandler( event:GraphRequestEvent ):void \n{\n    // event.data will contain the Facebook response\n}\n\nfunction request1_errorHandler( event:GraphRequestEvent ):void \n{\n    // event.errorCode and event.errorMessage will contain details on the error\n}\n\nfunction request2_completeHandler( event:GraphRequestEvent ):void \n{\n    // event.data will contain the Facebook response\n}\n\nfunction request2_errorHandler( event:GraphRequestEvent ):void \n{\n    // event.errorCode and event.errorMessage will contain details on the error\n}\n")),Object(c.b)("p",null,"Additionally you can listen for a ",Object(c.b)("inlineCode",{parentName:"p"},"GraphRequestEvent.BATCH_COMPLETE")," event to be notified when all the requests have been completed."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'batch.addEventListener( GraphRequestEvent.BATCH_COMPLETE, batch_completeHandler );\n                \nfunction batch_completeHandler( event:GraphRequestEvent ):void\n{\n    trace( "batch complete" );\n}\n')),Object(c.b)("p",null,"You should make sure to add these listeners before the call to ",Object(c.b)("inlineCode",{parentName:"p"},"makeBatchRequest()"),"."),Object(c.b)("h2",{id:"callbacks"},"Callbacks"),Object(c.b)("p",null,"As an alternative to events, you can add callbacks to the requests as you do with a normal ",Object(c.b)("inlineCode",{parentName:"p"},"GraphRequest"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'var request1:GraphRequest = new GraphRequestBuilder()\n    .setPath( "/me" )\n    .setCompleteCallback(\n            function( data:Object ):void \n            {\n                log( "request complete: " + JSON.stringify(data) );\n            }\n    )\n    .setErrorCallback(\n            function( code:int, message:String ):void \n            {\n                log( "request error: " + code + "::"+ message );\n            }\n    )\n    .build();\n')),Object(c.b)("p",null,"Additionally you can add a completion callback to the ",Object(c.b)("inlineCode",{parentName:"p"},"GraphRequestBatch")," object:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'var batch:GraphRequestBatch = new GraphRequestBatchBuilder()\n    .addRequest( request1 )\n    .addRequest( request2 )\n    .addRequest( request3 )\n    .setCompleteCallback(\n            function():void\n            {\n                log( "batch complete" );\n            }\n    )\n    .build();\n')))}u.isMDXComponent=!0},821:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,h=p["".concat(o,".").concat(d)]||p[d]||b[d]||c;return n?r.a.createElement(h,i(i({ref:t},l),{},{components:n})):r.a.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<c;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[78411],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=d(n),m=i,h=c["".concat(p,".").concat(m)]||c[m]||u[m]||a;return n?r.createElement(h,o(o({ref:t},l),{},{components:n})):r.createElement(h,o({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},23067:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o={title:"Android",sidebar_label:"Android"},s=void 0,p={unversionedId:"appgroupdefaults/android",id:"appgroupdefaults/android",isDocsHomePage:!1,title:"Android",description:"Android Setup",source:"@site/docs/appgroupdefaults/android.md",sourceDirName:"appgroupdefaults",slug:"/appgroupdefaults/android",permalink:"/docs/appgroupdefaults/android",tags:[],version:"current",frontMatter:{title:"Android",sidebar_label:"Android"},sidebar:"appgroupdefaults",previous:{title:"iOS",permalink:"/docs/appgroupdefaults/ios"},next:{title:"Usage",permalink:"/docs/appgroupdefaults/usage"}},d=[{value:"Android Setup",id:"android-setup",children:[{value:"Provider Method",id:"provider-method",children:[]},{value:"File Method",id:"file-method",children:[]}]}],l={toc:d};function u(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"android-setup"},"Android Setup"),(0,a.kt)("p",null,"There are two methods available on Android to share settings between applications."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Provider Method - uses a content provider and broadcast receiver to share variables"),(0,a.kt)("li",{parentName:"ul"},"File Method - uses an encrypted file to share variables. ")),(0,a.kt)("blockquote",null,(0,a.kt)("h3",{parentName:"blockquote",id:"unity"},"Unity"),(0,a.kt)("p",{parentName:"blockquote"},"For unity these additions will be automatically added to your build. "),(0,a.kt)("p",{parentName:"blockquote"},"However if you have a manually control your manifest then these should be placed in your custom application ",(0,a.kt)("inlineCode",{parentName:"p"},"AndroidManifest.xml")," file. ")),(0,a.kt)("h3",{id:"provider-method"},"Provider Method"),(0,a.kt)("p",null,"The provider method requires that you add several additions to the manifest. This\nincludes a content provider and a broadcast receiver, along with some permissions\nand settings."),(0,a.kt)("p",null,"This method requires that you sign all of the applications with the same certificate.\nThis is required so that the settings are secured between your applications."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- For the content provider and broadcast receiver method --\x3e\n<application>\n                \n    <meta-data android:name="app_group" android:value="[APPGROUP]" />\n    <meta-data android:name="app_authority" android:value="group.[APPID].provider" />\n    <meta-data android:name="app_authority_matcher" android:value="group\\\\.(?:[a-z,1-9]{1,}\\\\.)*provider" />\n\n    <provider\n        android:name="com.distriqt.extension.appgroupdefaults.provider.SharedProvider"\n        android:authorities="group.[APPID].provider"\n        android:exported="true" >\n    </provider>\n        \n    <receiver\n        android:name="com.distriqt.extension.appgroupdefaults.provider.SharedContentChangedReceiver"\n        android:enabled="true"\n        android:exported="true" >\n        <intent-filter>\n            <action android:name="[APPGROUP]"/>\n        </intent-filter>\n    </receiver>\n\n</application>\n')),(0,a.kt)("p",null,"You should replace ",(0,a.kt)("inlineCode",{parentName:"p"},"[APPGROUP]")," with your application group.\nThis must be done in the meta-data tag and in the receiver.\nFor example: ",(0,a.kt)("inlineCode",{parentName:"p"},"group.com.distriqt.test")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'    <meta-data android:name="app_group" android:value="group.com.distriqt.test" />\n')),(0,a.kt)("p",null,"You also need to define an ",(0,a.kt)("strong",{parentName:"p"},"application authority"),", this must be different for\neach of your applications but must be matchable using the matcher. We suggest using\nthe example above replacing ",(0,a.kt)("inlineCode",{parentName:"p"},"[APPID]")," with your application id, for example an app_authority\nmay be, ",(0,a.kt)("inlineCode",{parentName:"p"},"group.com.distriqt.test.app1.provider")," as below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'    <meta-data android:name="app_authority" android:value="group.com.distriqt.test.app1.provider" />\n')),(0,a.kt)("p",null,"You must place the application authority both in the meta-data tag and in the provider."),(0,a.kt)("h3",{id:"file-method"},"File Method"),(0,a.kt)("p",null,"The default is the provider method however if you wish to use the shared file method you\ncan specify the type in the ",(0,a.kt)("inlineCode",{parentName:"p"},"setup")," call:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript",metastring:'title="AIR"',title:'"AIR"'},'AppGroupDefaults.service.setup( \n    "12345678", \n    "group.com.distriqt.test", \n    AppGroupDefaults.TYPE_FILE \n);\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity"',title:'"Unity"'},'AppGroupDefaults.Instance.Setup( \n    "12345678", // salt\n    "group.com.distriqt.test", // app group identifier\n    AppGroupDefaults.TYPE_FILE // Android type\n);\n')),(0,a.kt)("p",null,"This method writes to a public file with the content encrypted."),(0,a.kt)("p",null,"This requires read / write permissions to the external storage:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<android>\n    <manifestAdditions><![CDATA[\n        <manifest android:installLocation="auto">\n            <uses-permission android:name="android.permission.INTERNET"/>\n            \n            <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />\n            <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />\n        </manifest>\n    ]]></manifestAdditions>\n</android>\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"With recent versions of Android you will need to request runtime permissions to access the storage."),(0,a.kt)("p",{parentName:"blockquote"},"With AIR you can use the Permissions ANE to request the permissions at runtime."),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-actionscript",metastring:'title="AIR"',title:'"AIR"'},'Permissions.service.setPermissions( [\n        "android.permission.READ_EXTERNAL_STORAGE",\n        "android.permission.WRITE_EXTERNAL_STORAGE"\n        ]);\n\nif (!Permissions.service.hasAuthorisation())\n    Permissions.service.requestAuthorisation();\n')),(0,a.kt)("p",{parentName:"blockquote"},"Unity you can use the  ",(0,a.kt)("inlineCode",{parentName:"p"},"UnityEngine.Android.Permission")," helper class to request permissions."),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity"',title:'"Unity"'},"if (!Permission.HasUserAuthorizedPermission(Permission.ExternalStorageWrite) \n    || !Permission.HasUserAuthorizedPermission(Permission.ExternalStorageRead))\n{\n    Permission.RequestUserPermission(Permission.ExternalStorageWrite);\n    Permission.RequestUserPermission(Permission.ExternalStorageRead);\n}\n"))))}u.isMDXComponent=!0}}]);
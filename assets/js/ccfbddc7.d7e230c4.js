"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[26108],{3905:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return u}});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function d(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=t.createContext({}),s=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},c=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),p=s(r),u=i,f=p["".concat(l,".").concat(u)]||p[u]||m[u]||a;return r?t.createElement(f,o(o({ref:n},c),{},{components:r})):t.createElement(f,o({ref:n},c))}));function u(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var d={};for(var l in n)hasOwnProperty.call(n,l)&&(d[l]=n[l]);d.originalType=e,d.mdxType="string"==typeof e?e:i,o[1]=d;for(var s=2;s<a;s++)o[s]=r[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},58758:function(e,n,r){r.r(n),r.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return d},metadata:function(){return s},toc:function(){return m}});var t=r(83117),i=r(80102),a=(r(67294),r(3905)),o=["components"],d={title:"Migrating to version 12",sidebar_label:"Migrating to version 12"},l=void 0,s={unversionedId:"adverts/migrating-to-version-12",id:"adverts/migrating-to-version-12",title:"Migrating to version 12",description:"Version 12 brings the latest AdMob SDK which includes some significant changes to the Android SDK.",source:"@site/docs/adverts/migrating-to-version-12.md",sourceDirName:"adverts",slug:"/adverts/migrating-to-version-12",permalink:"/docs/adverts/migrating-to-version-12",draft:!1,tags:[],version:"current",frontMatter:{title:"Migrating to version 12",sidebar_label:"Migrating to version 12"},sidebar:"adverts",previous:{title:"Migrating to version 13",permalink:"/docs/adverts/migrating-to-version-13"},next:{title:"Migrating to version 10",permalink:"/docs/adverts/migrating-to-version-10"}},c={},m=[{value:"Android Manifest",id:"android-manifest",level:4}],p={toc:m};function u(e){var n=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Version 12 brings the latest AdMob SDK which includes some significant changes to the Android SDK."),(0,a.kt)("h4",{id:"android-manifest"},"Android Manifest"),(0,a.kt)("p",null,"Add the following 2 additional androidx dependencies:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-AndroidSupport/raw/master/lib/androidx.room.ane"},"androidx.room.ane")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-AndroidSupport/raw/master/lib/androidx.work.ane"},"androidx.work.ane"))),(0,a.kt)("p",null,"Ensure you have the included the additional manifest additions for the androidx room and work libraries (inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"application")," node of your additions)."),(0,a.kt)("p",null,"You should replace ",(0,a.kt)("inlineCode",{parentName:"p"},"APPLICATION_PACKAGE")," with your AIR application package name on Android (eg ",(0,a.kt)("inlineCode",{parentName:"p"},"air.com.distriqt.test"),"). Note that it may be prefixed by ",(0,a.kt)("inlineCode",{parentName:"p"},"air."),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- AndroidX Room --\x3e\n<service\n    android:name="androidx.room.MultiInstanceInvalidationService"\n    android:exported="false" />\n\n    \n\x3c!-- AndroidX Work --\x3e\n<provider\n    android:name="androidx.work.impl.WorkManagerInitializer"\n    android:authorities="APPLICATION_PACKAGE.workmanager-init"\n    android:directBootAware="false"\n    android:exported="false"\n    android:multiprocess="true" />\n\n<service\n    android:name="androidx.work.impl.background.systemalarm.SystemAlarmService"\n    android:directBootAware="false"\n    android:enabled="@bool/enable_system_alarm_service_default"\n    android:exported="false" />\n<service\n    android:name="androidx.work.impl.background.systemjob.SystemJobService"\n    android:directBootAware="false"\n    android:enabled="@bool/enable_system_job_service_default"\n    android:exported="true"\n    android:permission="android.permission.BIND_JOB_SERVICE" />\n\n<receiver\n    android:name="androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver"\n    android:directBootAware="false"\n    android:enabled="true"\n    android:exported="false" />\n<receiver\n    android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy"\n    android:directBootAware="false"\n    android:enabled="false"\n    android:exported="false" >\n    <intent-filter>\n        <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />\n        <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />\n    </intent-filter>\n</receiver>\n<receiver\n    android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy"\n    android:directBootAware="false"\n    android:enabled="false"\n    android:exported="false" >\n    <intent-filter>\n        <action android:name="android.intent.action.BATTERY_OKAY" />\n        <action android:name="android.intent.action.BATTERY_LOW" />\n    </intent-filter>\n</receiver>\n<receiver\n    android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy"\n    android:directBootAware="false"\n    android:enabled="false"\n    android:exported="false" >\n    <intent-filter>\n        <action android:name="android.intent.action.DEVICE_STORAGE_LOW" />\n        <action android:name="android.intent.action.DEVICE_STORAGE_OK" />\n    </intent-filter>\n</receiver>\n<receiver\n    android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy"\n    android:directBootAware="false"\n    android:enabled="false"\n    android:exported="false" >\n    <intent-filter>\n        <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />\n    </intent-filter>\n</receiver>\n<receiver\n    android:name="androidx.work.impl.background.systemalarm.RescheduleReceiver"\n    android:directBootAware="false"\n    android:enabled="false"\n    android:exported="false" >\n    <intent-filter>\n        <action android:name="android.intent.action.BOOT_COMPLETED" />\n        <action android:name="android.intent.action.TIME_SET" />\n        <action android:name="android.intent.action.TIMEZONE_CHANGED" />\n    </intent-filter>\n</receiver>\n<receiver\n    android:name="androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver"\n    android:directBootAware="false"\n    android:enabled="@bool/enable_system_alarm_service_default"\n    android:exported="false" >\n    <intent-filter>\n        <action android:name="androidx.work.impl.background.systemalarm.UpdateProxies" />\n    </intent-filter>\n</receiver>\n')),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"add-the-extension"},"Add the Extension")," for details."))}u.isMDXComponent=!0}}]);
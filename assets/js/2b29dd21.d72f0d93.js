"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[47567],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return f}});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),d=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=d(e.components);return n.createElement(s.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(t),f=a,m=p["".concat(s,".").concat(f)]||p[f]||c[f]||i;return t?n.createElement(m,o(o({ref:r},u),{},{components:t})):n.createElement(m,o({ref:r},u))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=p;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=t[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},48548:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return u},default:function(){return p}});var n=t(87462),a=t(63366),i=(t(67294),t(3905)),o=["components"],l={title:"Firestore - Order and limit data",sidebar_label:"Order and limit data"},s=void 0,d={unversionedId:"firebase/firestore/order-and-limit-data",id:"firebase/firestore/order-and-limit-data",title:"Firestore - Order and limit data",description:"Cloud Firestore provides powerful query functionality for specifying which documents you want to retrieve from a collection. These queries can also be used with either query() or addSnapshotListener(), as described in Get Data.",source:"@site/docs/firebase/firestore/order-and-limit-data.md",sourceDirName:"firebase/firestore",slug:"/firebase/firestore/order-and-limit-data",permalink:"/docs/firebase/firestore/order-and-limit-data",tags:[],version:"current",frontMatter:{title:"Firestore - Order and limit data",sidebar_label:"Order and limit data"},sidebar:"firebase",previous:{title:"Perform simple and compound queries",permalink:"/docs/firebase/firestore/perform-simple-and-compound-queries"},next:{title:"Paginate data with query cursors",permalink:"/docs/firebase/firestore/paginate-data-with-query-cursors"}},u=[{value:"Order and limit data",id:"order-and-limit-data",children:[],level:2}],c={toc:u};function p(e){var r=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Cloud Firestore provides powerful query functionality for specifying which documents you want to retrieve from a collection. These queries can also be used with either ",(0,i.kt)("inlineCode",{parentName:"p"},"query()")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"addSnapshotListener()"),", as described in ",(0,i.kt)("a",{parentName:"p",href:"get-data"},"Get Data"),"."),(0,i.kt)("h2",{id:"order-and-limit-data"},"Order and limit data"),(0,i.kt)("p",null,"By default, a query retrieves all documents that satisfy the query in ascending order by document ID. You can specify the sort order for your data using ",(0,i.kt)("inlineCode",{parentName:"p"},"orderBy()"),", and you can limit the number of documents retrieved using ",(0,i.kt)("inlineCode",{parentName:"p"},"limit()"),"."),(0,i.kt)("p",null,"For example, you could query for the first 3 cities alphabetically with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var query:Query = citiesRef.orderBy("name").limit(3);\n')),(0,i.kt)("p",null,"You could also sort in descending order to get the last 3 cities:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var query:Query = citiesRef.orderBy( "name", QueryDirection.DESCENDING ).limit(3);\n')),(0,i.kt)("p",null,"You can also order by multiple fields. For example, if you wanted to order by state, and within each state order by population in descending order:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var query:Query = citiesRef.orderBy("state").orderBy("population", QueryDirection.DESCENDING);\n')),(0,i.kt)("p",null,"You can combine where() filters with orderBy() and limit(). In the following example, the queries define a population threshold, sort by population in ascending order, and return only the first few results that exceed the threshold:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'citiesRef.whereGreaterThan("population", 100000).orderBy("population").limit(2);\n')),(0,i.kt)("p",null,"However, if you have a filter with a range comparison (<, <=, >, >=), your first ordering must be on the same field:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Valid"),": Range filter and orderBy on the same field"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'citiesRef.whereGreaterThan("population", 100000).orderBy("population");\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Invalid"),": Range filter and first orderBy on different fields"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'citiesRef.whereGreaterThan("population", 100000).orderBy("country");\n')))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[3433],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>h});var i=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=i.createContext({}),d=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=d(e.components);return i.createElement(p.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(t),m=o,h=u["".concat(p,".").concat(m)]||u[m]||c[m]||a;return t?i.createElement(h,r(r({ref:n},s),{},{components:t})):i.createElement(h,r({ref:n},s))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,r=new Array(a);r[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[u]="string"==typeof e?e:o,r[1]=l;for(var d=2;d<a;d++)r[d]=t[d];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>r});var i=t(67294),o=t(86010);const a={tabItem:"tabItem_Ymn6"};function r(e){let{children:n,hidden:t,className:r}=e;return i.createElement("div",{role:"tabpanel",className:(0,o.Z)(a.tabItem,r),hidden:t},n)}},74866:(e,n,t)=>{t.d(n,{Z:()=>A});var i=t(87462),o=t(67294),a=t(86010),r=t(12466),l=t(16550),p=t(91980),d=t(67392),s=t(50012);function u(e){return function(e){var n,t;return null!=(n=null==(t=o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:o}}=e;return{value:n,label:t,attributes:i,default:o}}))}function c(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=null!=n?n:u(t);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const i=(0,l.k6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,p._X)(a),(0,o.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(i.location.search);n.set(a,e),i.replace({...i.location,search:n.toString()})}),[a,i])]}function v(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,a=c(e),[r,l]=(0,o.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+i.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const o=null!=(n=i.find((e=>e.default)))?n:i[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:a}))),[p,d]=h({queryString:t,groupId:i}),[u,v]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[i,a]=(0,s.Nk)(t);return[i,(0,o.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:i}),y=(()=>{const e=null!=p?p:u;return m({value:e,tabValues:a})?e:null})();(0,o.useLayoutEffect)((()=>{y&&l(y)}),[y]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error("Can't select invalid tab value="+e);l(e),d(e),v(e)}),[d,v,a]),tabValues:a}}var y=t(72389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:n,block:t,selectedValue:l,selectValue:p,tabValues:d}=e;const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,r.o5)(),c=e=>{const n=e.currentTarget,t=s.indexOf(n),i=d[t].value;i!==l&&(u(n),p(i))},m=e=>{var n;let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var i;const n=s.indexOf(e.currentTarget)+1;t=null!=(i=s[n])?i:s[0];break}case"ArrowLeft":{var o;const n=s.indexOf(e.currentTarget)-1;t=null!=(o=s[n])?o:s[s.length-1];break}}null==(n=t)||n.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n)},d.map((e=>{let{value:n,label:t,attributes:r}=e;return o.createElement("li",(0,i.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>s.push(e),onKeyDown:m,onClick:c},r,{className:(0,a.Z)("tabs__item",k.tabItem,null==r?void 0:r.className,{"tabs__item--active":l===n})}),null!=t?t:n)})))}function f(e){let{lazy:n,children:t,selectedValue:i}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===i));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},a.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==i}))))}function b(e){const n=v(e);return o.createElement("div",{className:(0,a.Z)("tabs-container",k.tabList)},o.createElement(g,(0,i.Z)({},e,n)),o.createElement(f,(0,i.Z)({},e,n)))}function A(e){const n=(0,y.Z)();return o.createElement(b,(0,i.Z)({key:String(n)},e))}},42811:(e,n,t)=>{t.d(n,{ZP:()=>l});var i=t(87462),o=(t(67294),t(3905));const a={toc:[{value:"Install APM",id:"install-apm",level:3},{value:"Setup an APM project",id:"setup-an-apm-project",level:3},{value:"Check your github token",id:"check-your-github-token",level:4}]},r="wrapper";function l(e){let{components:n,...t}=e;return(0,o.kt)(r,(0,i.Z)({},a,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"If you don't have an APM project setup, expand the guide below to setup an APM project before installing the extension.")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Setup APM"),(0,o.kt)("p",null,(0,o.kt)("h3",{id:"install-apm"},"Install APM"),(0,o.kt)("p",null,"If you haven't installed ",(0,o.kt)("inlineCode",{parentName:"p"},"apm")," follow the install guide on ",(0,o.kt)("a",{parentName:"p",href:"https://airsdk.dev/docs/basics/install-apm"},"airsdk.dev"),"."),(0,o.kt)("h3",{id:"setup-an-apm-project"},"Setup an APM project"),(0,o.kt)("p",null,"You will need an APM project for your application."),(0,o.kt)("p",null,"There are many ways to do this and for more options see the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/airsdk/apm/wiki/Usage-ProjectsAndPackages#initialise"},"APM documentation"),". Here we will just initialise a new empty project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apm init\n")),(0,o.kt)("h4",{id:"check-your-github-token"},"Check your github token"),(0,o.kt)("p",null,"We use github to secure our extensions so you must have created a github personal access token and configured ",(0,o.kt)("inlineCode",{parentName:"p"},"apm")," to use it. "),(0,o.kt)("p",null,"To do this create a token using this ",(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token"},"guide from github")," and then set it in your apm config using:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apm config set github_token ghp_XXXXXXXXXXXXXXXXXXXXXXXXXXXX\n")),(0,o.kt)("p",null,"If you don't do this correctly you may find the install will fail."))))}l.isMDXComponent=!0},50754:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>x,contentTitle:()=>A,default:()=>T,frontMatter:()=>b,metadata:()=>w,toc:()=>N});var i=t(87462),o=(t(67294),t(3905)),a=t(74866),r=t(85162),l=t(42811);const p={toc:[{value:"Install the extension",id:"install-the-extension",level:3}]},d="wrapper";function s(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Note: All of the commands below should be run in a terminal / command prompt in the root directory of your application, generally the level above your source directory.")),(0,o.kt)(l.ZP,{mdxType:"SetupAPM"}),(0,o.kt)("h3",{id:"install-the-extension"},"Install the extension"),(0,o.kt)("p",null,"Install the extension by running: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apm install com.distriqt.ironsource.AppLovin\n")),(0,o.kt)("p",null,"This will download and install the extension, required assets, and all dependencies."),(0,o.kt)("p",null,"Once complete ",(0,o.kt)("inlineCode",{parentName:"p"},"apm")," will have created something like the following file structure: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},".\n|____ ane\n| |____ com.distriqt.IronSource.ane             # IronSource extension\n| |____ com.distriqt.ironsource.AppLovin.ane    # AppLovin mediation extension\n| |____ [dependencies]\n|____ apm_packages                              # cache directory - ignore\n|____ project.apm                               # apm project file\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add the ",(0,o.kt)("inlineCode",{parentName:"li"},"ane")," directory to your IDE. ",(0,o.kt)("em",{parentName:"li"},"See the tutorials located ",(0,o.kt)("a",{parentName:"em",href:"/docs/tutorials/getting-started"},"here")," on adding an extension to your IDE."))),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"We suggest you use the locations directly in your builds rather than copying the files elsewhere. The reason for this is if you ever go to update the extensions using ",(0,o.kt)("inlineCode",{parentName:"p"},"apm")," that these updates will be pulled into your build automatically.")))}s.isMDXComponent=!0;const u={toc:[]},c="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The following guide is used to manually install the extension, download dependencies and update the application descriptor. We highly recommend installing extensions using ",(0,o.kt)("inlineCode",{parentName:"p"},"apm"),". Using ",(0,o.kt)("inlineCode",{parentName:"p"},"apm")," will automate the installation and automatically handle updates and dependencies along with greatly simplifying the application descriptor generation.")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"com.distriqt.ironsource.AppLovin")," ANE includes the AppLovin SDK and the IronSource AppLovin mediation adapter. This is everything you need to get AppLovin mediation working in your application."),(0,o.kt)("p",null,"To add the ANE download it from the repository and add it to your application:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-IronSource/raw/master/lib/applovin/com.distriqt.ironsource.AppLovin.ane"},"com.distriqt.ironsource.AppLovin"))),(0,o.kt)("p",null,"More information on adding ANEs in this ",(0,o.kt)("a",{parentName:"p",href:"/docs/tutorials/getting-started"},"tutorial")))}m.isMDXComponent=!0;const h={toc:[]},v="wrapper";function y(e){let{components:n,...t}=e;return(0,o.kt)(v,(0,i.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Updating your application descriptor will insert the required ",(0,o.kt)("inlineCode",{parentName:"p"},"extensionID"),"'s and generate the manifest and info additions for your application. "),(0,o.kt)("p",null,"You update your application descriptor by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apm generate app-descriptor src/MyApp-app.xml\n")),(0,o.kt)("p",null,"Change the path (",(0,o.kt)("inlineCode",{parentName:"p"},"src/MyApp-app.xml"),") to point to your application descriptor."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This will modify your application descriptor replacing the manifest additions and info additions with the ones generated from ",(0,o.kt)("inlineCode",{parentName:"p"},"apm"),". "),(0,o.kt)("p",{parentName:"admonition"},"You should backup your application descriptor before running this command to ensure you don't lose any information."),(0,o.kt)("p",{parentName:"admonition"},"If you need to insert custom data into these sections see the guides for ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/airsdk/apm/wiki/Usage-Generate#android"},"Android")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/airsdk/apm/wiki/Usage-Generate#ios"},"iOS"))))}y.isMDXComponent=!0;const k={toc:[{value:"Extension IDs",id:"extension-ids",level:4},{value:"Android",id:"android",level:4},{value:"Manifest Additions",id:"manifest-additions",level:5},{value:"iOS",id:"ios",level:4},{value:"Info Additions",id:"info-additions",level:5}]},g="wrapper";function f(e){let{components:n,...t}=e;return(0,o.kt)(g,(0,i.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"extension-ids"},"Extension IDs"),(0,o.kt)("p",null,"The following should be added to your ",(0,o.kt)("inlineCode",{parentName:"p"},"extensions")," node in your application descriptor to identify all the required ANEs in your application:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<extensions>\n    <extensionID>com.distriqt.Core</extensionID>\n    <extensionID>com.distriqt.IronSource</extensionID>\n\n    <extensionID>com.distriqt.ironsource.AppLovin</extensionID>\n\n    <extensionID>com.distriqt.playservices.Base</extensionID>\n    <extensionID>com.distriqt.playservices.Ads</extensionID>\n    <extensionID>com.distriqt.playservices.AdsIdentifier</extensionID>\n\n    <extensionID>androidx.core</extensionID>\n    <extensionID>com.jetbrains.kotlin</extensionID>\n</extensions>\n")),(0,o.kt)("h4",{id:"android"},"Android"),(0,o.kt)("h5",{id:"manifest-additions"},"Manifest Additions"),(0,o.kt)("p",null,"Add the following to your manifest additions, ensuring there is only one ",(0,o.kt)("inlineCode",{parentName:"p"},"application")," tag. "),(0,o.kt)("p",null,"You must replace ",(0,o.kt)("inlineCode",{parentName:"p"},"APPLICATION_PACKAGE")," with your AIR application's Java package name, something like ",(0,o.kt)("inlineCode",{parentName:"p"},"air.com.distriqt.test"),".\nGenerally this is your AIR application id prefixed by ",(0,o.kt)("inlineCode",{parentName:"p"},"air.")," unless you have specified no air flair in your build options."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'\n<uses-permission android:name="android.permission.INTERNET" />\n<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\n<uses-permission android:name="com.google.android.gms.permission.AD_ID" />\n\n<uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />\n\n<application>\n\n    \x3c!-- AppLovin --\x3e\n    <provider\n        android:name="com.applovin.sdk.AppLovinInitProvider"\n        android:authorities="APPLICATION_PACKAGE.applovincontentprovider"\n        android:exported="false"\n        android:grantUriPermissions="true"\n        android:initOrder="101" /> \x3c!-- Init order is 101 so we\'re before Firebase/Google which uses 100 --\x3e\n\n    <activity\n        android:name="com.applovin.adview.AppLovinInterstitialActivity"\n        android:configChanges="orientation|screenSize|smallestScreenSize|screenLayout|uiMode"\n        android:hardwareAccelerated="true"\n        android:screenOrientation="behind" />\n    <activity\n        android:name="com.applovin.adview.AppLovinFullscreenActivity"\n        android:configChanges="keyboard|keyboardHidden|locale|orientation|screenLayout|screenSize|smallestScreenSize|uiMode"\n        android:exported="false"\n        android:hardwareAccelerated="true"\n        android:launchMode="singleTop"\n        android:screenOrientation="behind" />\n    <activity\n        android:name="com.applovin.sdk.AppLovinWebViewActivity"\n        android:configChanges="keyboardHidden|orientation|screenSize|uiMode" />\n    <activity\n        android:name="com.applovin.mediation.MaxDebuggerActivity"\n        android:configChanges="keyboardHidden|orientation|screenSize"\n        android:theme="@style/com.applovin.mediation.MaxDebuggerActivity.Theme" />\n    <activity\n        android:name="com.applovin.mediation.MaxDebuggerDetailActivity"\n        android:configChanges="keyboardHidden|orientation|screenSize"\n        android:theme="@style/com.applovin.mediation.MaxDebuggerActivity.Theme" />\n    <activity\n        android:name="com.applovin.mediation.MaxDebuggerMultiAdActivity"\n        android:configChanges="keyboardHidden|orientation|screenSize"\n        android:theme="@style/com.applovin.mediation.MaxDebuggerActivity.Theme" />\n    <activity\n        android:name="com.applovin.mediation.MaxDebuggerAdUnitsListActivity"\n        android:configChanges="keyboardHidden|orientation|screenSize"\n        android:theme="@style/com.applovin.mediation.MaxDebuggerActivity.Theme" />\n    <activity\n        android:name="com.applovin.mediation.MaxDebuggerAdUnitDetailActivity"\n        android:configChanges="keyboardHidden|orientation|screenSize"\n        android:theme="@style/com.applovin.mediation.MaxDebuggerActivity.Theme" />\n    <activity\n        android:name="com.applovin.mediation.MaxDebuggerTestLiveNetworkActivity"\n        android:configChanges="keyboardHidden|orientation|screenSize"\n        android:theme="@style/com.applovin.mediation.MaxDebuggerActivity.Theme" />\n\n    <service\n        android:name="com.applovin.impl.sdk.utils.AppKilledService"\n        android:exported="false"\n        android:stopWithTask="false" />\n    <service\n        android:name="com.applovin.impl.adview.activity.FullscreenAdService"\n        android:exported="false"\n        android:stopWithTask="false" />\n        \n</application>\n')),(0,o.kt)("h4",{id:"ios"},"iOS"),(0,o.kt)("h5",{id:"info-additions"},"Info Additions"),(0,o.kt)("p",null,"Add the following to your ",(0,o.kt)("inlineCode",{parentName:"p"},"InfoAdditions")," node:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"\x3c!-- iOS 14 AdNetwork --\x3e\n<key>SKAdNetworkItems</key>\n<array>\n    <dict>\n        \x3c!-- IronSource --\x3e\n        <key>SKAdNetworkIdentifier</key>\n        <string>SU67R6K2V3.skadnetwork</string> \n    </dict>\n    <dict>\n        \x3c!-- AppLovin --\x3e\n        <key>SKAdNetworkIdentifier</key>\n        <string>ludvb6z3bs.skadnetwork</string>\n    </dict>\n</array>\n")))}f.isMDXComponent=!0;const b={title:"Mediation - AppLovin",sidebar_label:"AppLovin",slug:"/ironsource/mediation/applovin"},A=void 0,w={unversionedId:"ironsource/mediation/applovin/applovin",id:"ironsource/mediation/applovin/applovin",title:"Mediation - AppLovin",description:"This guide shows how to add mediation through AppLovin to your IronSource integration.",source:"@site/docs/ironsource/mediation/applovin/applovin.mdx",sourceDirName:"ironsource/mediation/applovin",slug:"/ironsource/mediation/applovin",permalink:"/docs/ironsource/mediation/applovin",draft:!1,tags:[],version:"current",frontMatter:{title:"Mediation - AppLovin",sidebar_label:"AppLovin",slug:"/ironsource/mediation/applovin"},sidebar:"ironsource",previous:{title:"Amazon",permalink:"/docs/ironsource/mediation/amazon"},next:{title:"Chartboost",permalink:"/docs/ironsource/mediation/chartboost"}},x={},N=[{value:"Step 1: Create an AppLovin Account",id:"step-1-create-an-applovin-account",level:2},{value:"Step 2: Retrieve Your AppLovin SDK and Report Keys",id:"step-2-retrieve-your-applovin-sdk-and-report-keys",level:2},{value:"Step 3: Activate AppLovin on the ironSource SDK Networks Module",id:"step-3-activate-applovin-on-the-ironsource-sdk-networks-module",level:2},{value:"Step 4: Add the AppLovin Adapter to Your Build",id:"step-4-add-the-applovin-adapter-to-your-build",level:2},{value:"Add the Extension",id:"add-the-extension",level:3},{value:"Application Descriptor",id:"application-descriptor",level:3},{value:"Step 5: Additional code required",id:"step-5-additional-code-required",level:2}],I={toc:N},S="wrapper";function T(e){let{components:n,...t}=e;return(0,o.kt)(S,(0,i.Z)({},I,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This guide shows how to add mediation through AppLovin to your IronSource integration."),(0,o.kt)("h2",{id:"step-1-create-an-applovin-account"},"Step 1: Create an AppLovin Account"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create an account with AppLovin. You can do so ",(0,o.kt)("a",{parentName:"p",href:"https://www.applovin.com/signup"},"here"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Once your account has been verified you can login at their partner login ",(0,o.kt)("a",{parentName:"p",href:"https://www.applovin.com/login"},"here"),"."))),(0,o.kt)("h2",{id:"step-2-retrieve-your-applovin-sdk-and-report-keys"},"Step 2: Retrieve Your AppLovin SDK and Report Keys"),(0,o.kt)("p",null,"There are 2 pieces of data from the AppLovin account which need to be inserted into your ironSource Network Setup Module in order for AppLovin to work correctly in connection with ironSource:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Report Key: This is a unique identifier for your AppLovin account, which allows your ironSource Mediation Platform to import performance data from your AppLovin account to use in reporting & optimization."),(0,o.kt)("li",{parentName:"ul"},"SDK Key: This is a unique identifier for your AppLovin account. This is used by the ironSource Mediation SDK to Init the AppLovin Adapter for your apps.")),(0,o.kt)("p",null,"Once you obtain this information, you must configure the AppLovin parameters in your ironSource Account. By adding the above information correctly, you will be able to take full advantage of AppLovin\u2019s ad inventory and reporting data on ironSource\u2019s Mediation platform."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://developers.ironsrc.com/ironsource-mobile/android/applovin-mediation-guide/#step-2"},"https://developers.ironsrc.com/ironsource-mobile/android/applovin-mediation-guide/#step-2")),(0,o.kt)("h2",{id:"step-3-activate-applovin-on-the-ironsource-sdk-networks-module"},"Step 3: Activate AppLovin on the ironSource SDK Networks Module"),(0,o.kt)("p",null,"Configure AppLovin\u2019s Parameters into ironSource Account"),(0,o.kt)("p",null,"See the following guide for more information:"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://developers.ironsrc.com/ironsource-mobile/android/applovin-mediation-guide/#step-3"},"https://developers.ironsrc.com/ironsource-mobile/android/applovin-mediation-guide/#step-3")),(0,o.kt)("h2",{id:"step-4-add-the-applovin-adapter-to-your-build"},"Step 4: Add the AppLovin Adapter to Your Build"),(0,o.kt)("p",null,"The simplest way to install and manage your AIR native extensions and libraries is to use the AIR Package Manager (",(0,o.kt)("inlineCode",{parentName:"p"},"apm"),"). We highly recommend using ",(0,o.kt)("inlineCode",{parentName:"p"},"apm"),", as it will handle downloading all required dependencies and manage your application descriptor (Android manifest additions, iOS info additions etc)."),(0,o.kt)("p",null,"However you can choose to install it manually, as you would have done in the past. "),(0,o.kt)("h3",{id:"add-the-extension"},"Add the Extension"),(0,o.kt)(a.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"apm",mdxType:"TabItem"},(0,o.kt)(s,{mdxType:"InstallAPM"})),(0,o.kt)(r.Z,{value:"manual",mdxType:"TabItem"},(0,o.kt)(m,{mdxType:"InstallManual"}))),(0,o.kt)("h3",{id:"application-descriptor"},"Application Descriptor"),(0,o.kt)(a.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"apm",mdxType:"TabItem"},(0,o.kt)(y,{mdxType:"AppDescriptorAPM"})),(0,o.kt)(r.Z,{value:"manual",mdxType:"TabItem"},(0,o.kt)(f,{mdxType:"AppDescriptorManual"}))),(0,o.kt)("h2",{id:"step-5-additional-code-required"},"Step 5: Additional code required"),(0,o.kt)("p",null,"There is no additional code required."))}T.isMDXComponent=!0}}]);
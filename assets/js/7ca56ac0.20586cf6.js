"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[98559],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return t?a.createElement(g,i(i({ref:n},c),{},{components:t})):a.createElement(g,i({ref:n},c))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),r=t(86010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:t},n)}},74866:(e,n,t)=>{t.d(n,{Z:()=>w});var a=t(87462),r=t(67294),o=t(86010),i=t(12466),l=t(16550),s=t(91980),u=t(67392),c=t(50012);function d(e){return function(e){var n,t;return null!=(n=null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=null!=n?n:d(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function h(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=p(e),[i,l]=(0,r.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const r=null!=(n=a.find((e=>e.default)))?n:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[s,u]=g({queryString:t,groupId:a}),[d,h]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[a,o]=(0,c.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),f=(()=>{const e=null!=s?s:d;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error("Can't select invalid tab value="+e);l(e),u(e),h(e)}),[u,h,o]),tabValues:o}}var f=t(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:n,block:t,selectedValue:l,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const n=e.currentTarget,t=c.indexOf(n),a=u[t].value;a!==l&&(d(n),s(a))},m=e=>{var n;let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{var a;const n=c.indexOf(e.currentTarget)+1;t=null!=(a=c[n])?a:c[0];break}case"ArrowLeft":{var r;const n=c.indexOf(e.currentTarget)-1;t=null!=(r=c[n])?r:c[c.length-1];break}}null==(n=t)||n.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},u.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,o.Z)("tabs__item",v.tabItem,null==i?void 0:i.className,{"tabs__item--active":l===n})}),null!=t?t:n)})))}function y(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function k(e){const n=h(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",v.tabList)},r.createElement(b,(0,a.Z)({},e,n)),r.createElement(y,(0,a.Z)({},e,n)))}function w(e){const n=(0,f.Z)();return r.createElement(k,(0,a.Z)({key:String(n)},e))}},76760:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var a=t(87462),r=(t(67294),t(3905)),o=t(74866),i=t(85162);const l={title:"Migrating to v6.0",sidebar_label:"Migrating to v6.0"},s=void 0,u={unversionedId:"scanner/migrating-to-v6.0",id:"scanner/migrating-to-v6.0",title:"Migrating to v6.0",description:"This latest release represents a major update to the extension. The scanning algorithm has been completely rewritten to improve performance and accuracy.",source:"@site/docs/scanner/migrating-to-v6.0.mdx",sourceDirName:"scanner",slug:"/scanner/migrating-to-v6.0",permalink:"/docs/scanner/migrating-to-v6.0",draft:!1,tags:[],version:"current",frontMatter:{title:"Migrating to v6.0",sidebar_label:"Migrating to v6.0"},sidebar:"scanner",previous:{title:"Scanning Bitmap Data",permalink:"/docs/scanner/scanning-bitmap-data"},next:{title:"Migrating to v5.1",permalink:"/docs/scanner/migrating-to-v5.1"}},c={},d=[{value:"Migration",id:"migration",level:2},{value:"Android Gradle Version",id:"android-gradle-version",level:2},{value:"Asynchronous Scanning",id:"asynchronous-scanning",level:2}],p={toc:d},m="wrapper";function g(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This latest release represents a major update to the extension. The scanning algorithm has been completely rewritten to improve performance and accuracy.\nThe aging ZBar SDK has been removed in favour of ",(0,r.kt)("strong",{parentName:"p"},"MLKit")," on Android and the ",(0,r.kt)("strong",{parentName:"p"},"Vision framework")," on iOS. "),(0,r.kt)("p",null,"As part of the update we have improved the permission process and broadcast receiver usage to meet the updated android API 34 requirements."),(0,r.kt)("p",null,"Additionally we have implemented an asynchronous bitmap data scanning process which allows you to scan large images without blocking the main thread."),(0,r.kt)("p",null,"Overall this update should provide a much better experience for your users and improve the reliability of scanning barcodes in your applications."),(0,r.kt)("h2",{id:"migration"},"Migration"),(0,r.kt)(o.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"apm",mdxType:"TabItem"},(0,r.kt)("p",null,"If you are using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/airsdk/apm"},(0,r.kt)("inlineCode",{parentName:"a"},"apm"))," all you need to do is update to the latest build and regenerate your application descriptor. ",(0,r.kt)("inlineCode",{parentName:"p"},"apm")," will handle the rest."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apm update \napm generate app-descriptor\n"))),(0,r.kt)(i.Z,{value:"manual",mdxType:"TabItem"},(0,r.kt)("p",null,"If you are manually managing your application descriptor (and manifest additions) then you will be required to make some changes to your manifest. Find the activity:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<activity \n    android:name="com.distriqt.extension.scanner.zbar.ZBarScannerActivity" \n    android:exported="false"/>\n')),(0,r.kt)("p",null,"And replace it with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<activity \n    android:name="com.distriqt.extension.scanner.mlkit.ScannerActivity" \n    android:exported="false" \n    android:theme="@style/ScannerActivityTheme" \n    android:configChanges="orientation|screenSize|screenLayout" />\n')),(0,r.kt)("p",null,"Increase the minimum SDK version to 21:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<uses-sdk android:minSdkVersion="21" android:targetSdkVersion="34"/>\n')))),(0,r.kt)("admonition",{title:"New Algorithms",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The new scanning algorithms are significantly different from the previous ZBar implementation.\nYou may need to adjust your code to accommodate the new API and behavior.\nIn particular the orientation of the scanned results is no longer available and will always be 'unknown'.")),(0,r.kt)("h2",{id:"android-gradle-version"},"Android Gradle Version"),(0,r.kt)("p",null,"We have updated the required gradle version used to build your application to be higher than the default AIR currently uses. "),(0,r.kt)("p",null,"To specify a higher version add the following to your android node in your application descriptor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<android>\n    <gradleVersion>8.9</gradleVersion>\n    <androidGradlePluginVersion>8.7.3</androidGradlePluginVersion>\n\n  ...\n</android>\n")),(0,r.kt)("p",null,"If you don't do this you will see the following error when building your application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Unexpected failure: Unable to run java: com.adobe.air.ADTException: gradle tool failed: \nFAILURE: Build failed with an exception.\n\n...\n\n   > BUG! exception in phase 'semantic analysis' in source unit '_BuildScript_' Unsupported class file major version 65\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"June 2025: This is not currently automatically handled by ",(0,r.kt)("inlineCode",{parentName:"p"},"apm")," so you will need to add this manually to your application descriptor."),(0,r.kt)("p",{parentName:"admonition"},"We are working on an update to handle this.")),(0,r.kt)("h2",{id:"asynchronous-scanning"},"Asynchronous Scanning"),(0,r.kt)("p",null,"The new scanning process allows you to scan large images without blocking the main thread. This is particularly useful for applications that need to scan high-resolution images or perform other tasks while scanning."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'Scanner.service.scanBitmapAsync(\n    image.bitmapData,\n    function ( scanResults:Vector.<ScanResult> ):void\n    {\n        // Handle the scan results\n        for each ( var result:ScanResult in scanResults )\n        {\n            trace( "Code found: " + result.data );\n        },\n    function ( error:Error ):void\n    {\n        // process the error\n    }\n);\n')))}g.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[31604],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},48694:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],l={title:"User Data",sidebar_label:"User Data"},s=void 0,c={unversionedId:"inappbilling/user-data",id:"inappbilling/user-data",title:"User Data",description:"Some services attach some information to the user that can be retrieved and may be necessary to validate receipts.",source:"@site/docs/inappbilling/user-data.md",sourceDirName:"inappbilling",slug:"/inappbilling/user-data",permalink:"/docs/inappbilling/user-data",draft:!1,tags:[],version:"current",frontMatter:{title:"User Data",sidebar_label:"User Data"},sidebar:"inappbilling",previous:{title:"Migration (v12 and below)",permalink:"/docs/inappbilling/migration"},next:{title:"changelog",permalink:"/docs/inappbilling/changelog"}},u={},p=[],d={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Some services attach some information to the user that can be retrieved and may be necessary to validate receipts."),(0,i.kt)("p",null,"Currently this is supported on the following services:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Amazon ")),(0,i.kt)("p",null,"You retrieve this data by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"getUserData()")," function and listening for the response."),(0,i.kt)("p",null,"This function will return ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," if user data is not supported with the current service."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"var success:Boolean = InAppBilling.service.getUserData();\nif (!success)\n{\n    // User data not supported\n}\n")),(0,i.kt)("p",null,"If it returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", then one of two events will be dispatched:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"UserDataEvent.GET_SUCCESS"),": Indicates the user data was successfully retrieved;"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"UserDataEvent.GET_FAILED"),": Indicates there was a failure when retrieving the data;")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'InAppBilling.service.addEventListener( UserDataEvent.GET_SUCCESS, getUserData_successHandler );\nInAppBilling.service.addEventListener( UserDataEvent.GET_FAILED, getUserData_failedHandler );\n\nInAppBilling.service.getUserData();\n\n\nfunction getUserData_successHandler( event:UserDataEvent ):void\n{\n    // Success\n    trace( "USER ID: " + event.userData.userId );\n}\n\nfunction getUserData_failedHandler( event:UserDataEvent ):void\n{\n    // Failure handler - retry after a delay or inform user of the issue\n}\n')))}f.isMDXComponent=!0}}]);
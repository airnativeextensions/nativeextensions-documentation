"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[59258],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(t),m=o,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return t?a.createElement(f,i(i({ref:n},p),{},{components:t})):a.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<r;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},72791:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var a=t(87462),o=(t(67294),t(3905));const r={title:"Connecting",sidebar_label:"Connecting"},i=void 0,c={unversionedId:"camera/connecting",id:"camera/connecting",title:"Connecting",description:"Once you have determined the device you wish to use from the CameraDeviceInfo you will",source:"@site/docs/camera/connecting.md",sourceDirName:"camera",slug:"/camera/connecting",permalink:"/docs/camera/connecting",draft:!1,tags:[],version:"current",frontMatter:{title:"Connecting",sidebar_label:"Connecting"},sidebar:"camera",previous:{title:"Selecting a Device",permalink:"/docs/camera/selecting-a-device"},next:{title:"Preview Frames",permalink:"/docs/camera/preview-frames"}},l={},s=[{value:"Disconnecting",id:"disconnecting",level:2}],p={toc:s},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Once you have determined the device you wish to use from the ",(0,o.kt)("inlineCode",{parentName:"p"},"CameraDeviceInfo")," you will\nneed to connect to the device."),(0,o.kt)("p",null,"This process opens the camera device and gives you a connection to the device hardware\nthat you can use to control the camera."),(0,o.kt)("p",null,"When connecting you will provide the ",(0,o.kt)("inlineCode",{parentName:"p"},"CameraDeviceInfo")," of the device you wish to connect to\nand an optional instance of the ",(0,o.kt)("inlineCode",{parentName:"p"},"CameraParameters")," class which will specify the camera\nsettings and, importantly, the camera modes you wish to use (these represent the camera\nresolutions you wish to use)."),(0,o.kt)("p",null,"In the following example we are using a previously obtained ",(0,o.kt)("inlineCode",{parentName:"p"},"deviceInfo")," object from the\ndevice selection process and we are setting some basic options using an instance of the\n",(0,o.kt)("inlineCode",{parentName:"p"},"CameraParameters")," class:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'var options:CameraParameters = new CameraParameters();\noptions.enableFrameBuffer = true;\noptions.previewMode       = new CameraMode( CameraMode.CUSTOM, 640, 480 );\noptions.cameraMode        = new CameraMode( CameraMode.PRESET_PHOTO );\n\n// Connect\nvar device:CameraDevice = Camera.instance.connect( deviceInfo, options );\nif (device == null)\n{\n    trace( "failed to connect" );\n}\n')),(0,o.kt)("p",null,"You should now have a valid ",(0,o.kt)("inlineCode",{parentName:"p"},"CameraDevice")," instance which represents your connection\nto the camera hardware."),(0,o.kt)("h2",{id:"disconnecting"},"Disconnecting"),(0,o.kt)("p",null,"Once you have finished with the camera hardware connection you should disconnect from\nthe hardware. "),(0,o.kt)("p",null,"It is also highly advisable that you disconnect whenever your application\nloses focus. Generally there is only one connection allowed to the hardware and you should\nbe a good app citizen and allow other applications to connect when your application isn't\nin focus."),(0,o.kt)("p",null,"To disconnect we call the ",(0,o.kt)("inlineCode",{parentName:"p"},"disconnect")," function on the ",(0,o.kt)("inlineCode",{parentName:"p"},"CameraDevice")," instance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"var success:Boolean = device.disconnect();\n")),(0,o.kt)("p",null,"We suggest you also remove any preview frame listeners and have completed any operations\nbefore calling this function."))}d.isMDXComponent=!0}}]);
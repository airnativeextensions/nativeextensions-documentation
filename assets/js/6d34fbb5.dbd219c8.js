"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[99511],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(n),v=s,d=c["".concat(l,".").concat(v)]||c[v]||m[v]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,a=new Array(i);a[0]=v;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[c]="string"==typeof e?e:s,a[1]=o;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},12169:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=n(87462),s=(n(67294),n(3905));const i={title:"Native Gesture Events",sidebar_label:"Native Gesture Events"},a=void 0,o={unversionedId:"systemgestures/native-gesture-events",id:"systemgestures/native-gesture-events",title:"Native Gesture Events",description:"General Gestures",source:"@site/docs/systemgestures/native-gesture-events.md",sourceDirName:"systemgestures",slug:"/systemgestures/native-gesture-events",permalink:"/docs/systemgestures/native-gesture-events",draft:!1,tags:[],version:"current",frontMatter:{title:"Native Gesture Events",sidebar_label:"Native Gesture Events"},sidebar:"systemgestures",previous:{title:"Home Indicator",permalink:"/docs/systemgestures/home-indicator"},next:{title:"changelog",permalink:"/docs/systemgestures/changelog"}},l={},u=[{value:"General Gestures",id:"general-gestures",level:2},{value:"Apple Remote Buttons",id:"apple-remote-buttons",level:2},{value:"Listening for events",id:"listening-for-events",level:2}],p={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,s.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"general-gestures"},"General Gestures"),(0,s.kt)("p",null,"There are a few gestures that a consistent across iOS and tvOS"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"NativeGestureEvent.GESTURE_SWIPE_UP"),": Dispatched when the user swipes up on the screen or on the Apple remote;"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"NativeGestureEvent.GESTURE_SWIPE_DOWN"),": Dispatched when the user swipes down on the screen or on the Apple remote;"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"NativeGestureEvent.GESTURE_SWIPE_LEFT"),": Dispatched when the user swipes left on the screen or on the Apple remote;"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"NativeGestureEvent.GESTURE_SWIPE_RIGHT"),": Dispatched when the user swipes right on the screen or on the Apple remote;")),(0,s.kt)("h2",{id:"apple-remote-buttons"},"Apple Remote Buttons"),(0,s.kt)("p",null,"There are a few native gesture events specific to the Apple remote button presses including:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"NativeGestureEvent.SELECT"),": Dispatched when the touch area on the remote is presssed;"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"NativeGestureEvent.MENU"),": Dispatched when the ",(0,s.kt)("strong",{parentName:"li"},"Menu")," button on the remote is presssed; "),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"NativeGestureEvent.PLAYPAUSE"),": Dispatched when the ",(0,s.kt)("strong",{parentName:"li"},"Play/Pause")," button on the remote is presssed;")),(0,s.kt)("h2",{id:"listening-for-events"},"Listening for events"),(0,s.kt)("p",null,"Listening for these gesture events is the same as any other event listener. Use the ",(0,s.kt)("inlineCode",{parentName:"p"},"addEventListener")," function on the SystemGestures instance:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},'SystemGestures.service.addEventListener( NativeGestureEvent.GESTURE_SWIPE_DOWN, swipeHandler );\n\n\nfunction swipeHandler( event:NativeGestureEvent ):void\n{\n    trace( "swipe: " + event.type );\n}\n')),(0,s.kt)("p",null,"Note: you shouldn't add these listeners in the first frame / class constructor on iOS. There appears to be some conflict with AIR on iOS so you should wait around 100 milliseconds from launch before attaching these listeners to ensure consistency."))}m.isMDXComponent=!0}}]);
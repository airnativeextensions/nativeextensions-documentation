"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[34151],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),g=r,m=d["".concat(u,".").concat(g)]||d[g]||p[g]||l;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},53197:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),o={title:"Key-Value Storage",sidebar_label:"Key-Value Storage"},i=void 0,u={unversionedId:"cloudstorage/key-value-storage",id:"cloudstorage/key-value-storage",isDocsHomePage:!1,title:"Key-Value Storage",description:"The key-value storage system can be broken down into several main concepts:",source:"@site/docs/cloudstorage/key-value-storage.md",sourceDirName:"cloudstorage",slug:"/cloudstorage/key-value-storage",permalink:"/docs/cloudstorage/key-value-storage",tags:[],version:"current",frontMatter:{title:"Key-Value Storage",sidebar_label:"Key-Value Storage"},sidebar:"cloudstorage",previous:{title:"Unity",permalink:"/docs/cloudstorage/add-the-plugin"},next:{title:"Document Store",permalink:"/docs/cloudstorage/document-store"}},s=[{value:"Set Values",id:"set-values",children:[]},{value:"Get Values",id:"get-values",children:[]},{value:"Remove Value",id:"remove-value",children:[]},{value:"Events",id:"events",children:[]},{value:"Example",id:"example",children:[]}],c={toc:s};function p(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The key-value storage system can be broken down into several main concepts:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"setting a value;"),(0,l.kt)("li",{parentName:"ul"},"getting a value;"),(0,l.kt)("li",{parentName:"ul"},"listen for changes;")),(0,l.kt)("p",null,"This represents all the functionality you will need to implement to be able to successfully\nstore values in the cloud. "),(0,l.kt)("h3",{id:"set-values"},"Set Values"),(0,l.kt)("p",null,"Firstly to set a value, you call ",(0,l.kt)("inlineCode",{parentName:"p"},"setString"),", which takes a ",(0,l.kt)("inlineCode",{parentName:"p"},"key")," and a ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," as parameters. "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-actionscript",metastring:'title="AIR"',title:'"AIR"'},'CloudStorage.service.keyValueStore.setString( "KEY_FOR_VALUE", "some_value" );\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity"',title:'"Unity"'},'CloudStorage.Instance.SetString("KEY_FOR_VALUE", "some_value");\n')),(0,l.kt)("p",null,"or to set an integer value:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-actionscript",metastring:'title="AIR"',title:'"AIR"'},'CloudStorage.service.keyValueStore.setInt( "KEY_FOR_VALUE", 5 );\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity"',title:'"Unity"'},'CloudStorage.Instance.SetInt("KEY_FOR_VALUE", 5);\n')),(0,l.kt)("h3",{id:"get-values"},"Get Values"),(0,l.kt)("p",null,"You can then retrieve the value using ",(0,l.kt)("inlineCode",{parentName:"p"},"getString")," providing the same ",(0,l.kt)("inlineCode",{parentName:"p"},"key")," as\na parameter which will then return the value set previously."),(0,l.kt)("p",null,"For example: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-actionscript",metastring:'title="AIR"',title:'"AIR"'},'var value:String = CloudStorage.service.keyValueStore.getString( "KEY_FOR_VALUE" );\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity"',title:'"Unity"'},'var value = CloudStorage.Instance.GetString("KEY_FOR_VALUE");\n')),(0,l.kt)("h3",{id:"remove-value"},"Remove Value"),(0,l.kt)("p",null,"To remove a value that you have previously set you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"Remove")," function:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-actionscript",metastring:'title="AIR"',title:'"AIR"'},'CloudStorage.service.keyValueStore.remove("KEY_FOR_VALUE");\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity"',title:'"Unity"'},'CloudStorage.Instance.Remove("KEY_FOR_VALUE");\n')),(0,l.kt)("h3",{id:"events"},"Events"),(0,l.kt)("p",null,"The extension will dispatch events when the values are changed (on another device) and when\nother system events occur:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Changed: Indicates a value has changed and the event will contain an array of keys that changed",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"AIR: ",(0,l.kt)("inlineCode",{parentName:"li"},"KeyValueStoreEvent.CHANGED")),(0,l.kt)("li",{parentName:"ul"},"Unity: ",(0,l.kt)("inlineCode",{parentName:"li"},"OnChanged")))),(0,l.kt)("li",{parentName:"ul"},"Over Quota: Your app's key-value store has exceeded its space quota on the server",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"AIR: ",(0,l.kt)("inlineCode",{parentName:"li"},"KeyValueStoreEvent.OVER_QUOTA")),(0,l.kt)("li",{parentName:"ul"},"Unity: ",(0,l.kt)("inlineCode",{parentName:"li"},"OnOverQuota")))),(0,l.kt)("li",{parentName:"ul"},"Account Changed: The user's account was changed",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"AIR: ",(0,l.kt)("inlineCode",{parentName:"li"},"KeyValueStoreEvent.ACCOUNT_CHANGED")),(0,l.kt)("li",{parentName:"ul"},"Unity: ",(0,l.kt)("inlineCode",{parentName:"li"},"OnAccountChanged")))),(0,l.kt)("li",{parentName:"ul"},"Initial Sync: The initial data synchronisation from the server was received",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"AIR: ",(0,l.kt)("inlineCode",{parentName:"li"},"KeyValueStoreEvent.INITIAL_SYNC")),(0,l.kt)("li",{parentName:"ul"},"Unity: ",(0,l.kt)("inlineCode",{parentName:"li"},"OnInitialSync"))))),(0,l.kt)("p",null,"More information see the ",(0,l.kt)("inlineCode",{parentName:"p"},"KeyValueStoreEvent")," class documentation."),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("p",null,"The following example shows the core concepts, setting then retrieving a value and listening\nto the ",(0,l.kt)("inlineCode",{parentName:"p"},"KeyValueStoreEvent.CHANGED")," (",(0,l.kt)("inlineCode",{parentName:"p"},"OnChanged")," on Unity) event."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-actionscript",metastring:'title="AIR"',title:'"AIR"'},'CloudStorage.service.keyValueStore.addEventListener( KeyValueStoreEvent.CHANGED, keyStore_changedHandler );\nCloudStorage.service.keyValueStore.synchronise();\n\n// Set a value\nCloudStorage.service.keyValueStore.setString( "KEY_FOR_VALUE", newValue );\n\n// Retrieve the value\nvar value:String = CloudStorage.service.keyValueStore.getString( "KEY_FOR_VALUE" );\n\n\nfunction keyStore_changedHandler( event:KeyValueStoreEvent ):void\n{\n    trace( "KeyStore CHANGED" );\n    // event.changedKeys contains an array of changed keys\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Unity"',title:'"Unity"'},'CloudStorage.Instance.OnChanged += Instance_OnChanged;\nCloudStorage.Instance.Synchronise();\n\n// Set a value\nCloudStorage.Instance.SetString( "KEY_FOR_VALUE", "some_value" );\n\n// Retrieve the value\nstring value = CloudStorage.Instance.GetString( "KEY_FOR_VALUE" )\n\n\n\nprivate void Instance_OnChanged(KeyValueStoreEvent e)\n{\n    Debug.Log("OnChanged");\n    // e.changedKeys contains an array of changed keys\n    foreach (string key in e.changedKeys)\n    {\n        Debug.Log("OnChanged: " + key);\n    }\n}\n')))}p.isMDXComponent=!0}}]);
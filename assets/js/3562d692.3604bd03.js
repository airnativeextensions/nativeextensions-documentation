"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[64818],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),b=n,f=d["".concat(s,".").concat(b)]||d[b]||u[b]||o;return r?a.createElement(f,i(i({ref:t},p),{},{components:r})):a.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:n,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},57662:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var a=r(87462),n=(r(67294),r(3905));const o={title:"Parse WebP Data",sidebar_label:"Parse WebP Data"},i=void 0,c={unversionedId:"webp/parse-webp-data",id:"webp/parse-webp-data",title:"Parse WebP Data",description:"If you load data from a URL or other data source you can use the parseWebP",source:"@site/docs/webp/parse-webp-data.md",sourceDirName:"webp",slug:"/webp/parse-webp-data",permalink:"/docs/webp/parse-webp-data",draft:!1,tags:[],version:"current",frontMatter:{title:"Parse WebP Data",sidebar_label:"Parse WebP Data"},sidebar:"webp",previous:{title:"Load a WebP File",permalink:"/docs/webp/load-a-webp-file"},next:{title:"changelog",permalink:"/docs/webp/changelog"}},s={},l=[],p={toc:l},d="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"If you load data from a URL or other data source you can use the ",(0,n.kt)("inlineCode",{parentName:"p"},"parseWebP"),"\nfunction to decode the WebP data into useable bitmap pixel data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},'// For this example load data from a file into a ByteArray\nvar file:File = File.applicationDirectory.resolvePath( "image.webp" );\nvar fs:FileStream = new FileStream();\nfs.open( file, FileMode.READ );\nvar data:ByteArray = new ByteArray();\nfs.readBytes( data, 0, fs.bytesAvailable );\nfs.close();\n\nvar decodedData:ByteArray = new ByteArray();\n\n//\n// Use WebP to decode the data\nvar success:Boolean = WebP.service.parseWebP( data, decodedData );\n\nif (success) \n{\n    var rect:Rectangle = new Rectangle( 0, 0, WebP.service.width, WebP.service.height );\n    var bd:BitmapData = new BitmapData( WebP.service.width, WebP.service.height, true );\n    bd.setPixels( rect, decodedData );\n    \n    // Use the BitmapData as required\n}\n')))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[86004],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var u=a.createContext({}),l=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=l(n),d=s,m=p["".concat(u,".").concat(d)]||p[d]||h[d]||i;return n?a.createElement(m,r(r({ref:t},c),{},{components:n})):a.createElement(m,r({ref:t},c))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,r=new Array(i);r[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[p]="string"==typeof e?e:s,r[1]=o;for(var l=2;l<i;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),s=n(86010);const i={tabItem:"tabItem_Ymn6"};function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,s.Z)(i.tabItem,r),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>A});var a=n(87462),s=n(67294),i=n(86010),r=n(12466),o=n(16550),u=n(91980),l=n(67392),c=n(50012);function p(e){return function(e){var t,n;return null!=(t=null==(n=s.Children.map(e,(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:s}}=e;return{value:t,label:n,attributes:a,default:s}}))}function h(e){const{values:t,children:n}=e;return(0,s.useMemo)((()=>{const e=null!=t?t:p(n);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,u._X)(i),(0,s.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function v(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=h(e),[r,o]=(0,s.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const s=null!=(t=a.find((e=>e.default)))?t:a[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:i}))),[u,l]=m({queryString:n,groupId:a}),[p,v]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[a,i]=(0,c.Nk)(n);return[a,(0,s.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),k=(()=>{const e=null!=u?u:p;return d({value:e,tabValues:i})?e:null})();(0,s.useLayoutEffect)((()=>{k&&o(k)}),[k]);return{selectedValue:r,selectValue:(0,s.useCallback)((e=>{if(!d({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);o(e),l(e),v(e)}),[l,v,i]),tabValues:i}}var k=n(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:n,selectedValue:o,selectValue:u,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,r.o5)(),h=e=>{const t=e.currentTarget,n=c.indexOf(t),a=l[n].value;a!==o&&(p(t),u(a))},d=e=>{var t;let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{var a;const t=c.indexOf(e.currentTarget)+1;n=null!=(a=c[t])?a:c[0];break}case"ArrowLeft":{var s;const t=c.indexOf(e.currentTarget)-1;n=null!=(s=c[t])?s:c[c.length-1];break}}null==(t=n)||t.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},l.map((e=>{let{value:t,label:n,attributes:r}=e;return s.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:h},r,{className:(0,i.Z)("tabs__item",b.tabItem,null==r?void 0:r.className,{"tabs__item--active":o===t})}),null!=n?n:t)})))}function f(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=v(e);return s.createElement("div",{className:(0,i.Z)("tabs-container",b.tabList)},s.createElement(g,(0,a.Z)({},e,t)),s.createElement(f,(0,a.Z)({},e,t)))}function A(e){const t=(0,k.Z)();return s.createElement(y,(0,a.Z)({key:String(t)},e))}},66653:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),s=(n(67294),n(3905)),i=n(74866),r=n(85162);const o={title:"Requesting Access",sidebar_label:"Requesting Access"},u=void 0,l={unversionedId:"permissions/requesting-access",id:"permissions/requesting-access",title:"Requesting Access",description:"When you are going to be accessing a 'dangerous' permission you must check that",source:"@site/docs/permissions/requesting-access.mdx",sourceDirName:"permissions",slug:"/permissions/requesting-access",permalink:"/docs/permissions/requesting-access",draft:!1,tags:[],version:"current",frontMatter:{title:"Requesting Access",sidebar_label:"Requesting Access"},sidebar:"permissions",previous:{title:"Set Permissions",permalink:"/docs/permissions/set-permissions"},next:{title:"File and Folder Access",permalink:"/docs/permissions/file-folder-access"}},c={},p=[{value:"Individual Permissions",id:"individual-permissions",level:2},{value:"Check Authorisation Status",id:"check-authorisation-status",level:3},{value:"Request Authorisation",id:"request-authorisation",level:3},{value:"Event",id:"event",level:4},{value:"Callback",id:"callback",level:4},{value:"Multiple Permissions",id:"multiple-permissions",level:2},{value:"Set Permissions",id:"set-permissions",level:3},{value:"Check Authorisation",id:"check-authorisation",level:3},{value:"Request Authorisation",id:"request-authorisation-1",level:3},{value:"Event",id:"event-1",level:4},{value:"Callback",id:"callback-1",level:4},{value:"Example",id:"example",level:3},{value:"Events",id:"events",level:2}],h={toc:p},d="wrapper";function m(e){let{components:t,...o}=e;return(0,s.kt)(d,(0,a.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"When you are going to be accessing a 'dangerous' permission you must check that\nyour application has been allowed access."),(0,s.kt)("p",null,(0,s.kt)("img",{src:n(68668).Z,width:"1240",height:"930"})),(0,s.kt)("p",null,"On Android these permissions are listed through the manifest additions. On older\nversions of Android these permissions are accepted when the user installs the\napplication. More modern versions (Marshmallow 6 ","[API v23]","+) require that you request\nthe permissions similar to iOS. You will still need to list them in your manifest\nand then follow the same code below."),(0,s.kt)("h2",{id:"individual-permissions"},"Individual Permissions"),(0,s.kt)("p",null,"Instead of using multiple permissions together it is often more important to request permissions individually and when appropriate functionality is being used in your application (eg requesting camera permission when the user requests to take a photo)."),(0,s.kt)("h3",{id:"check-authorisation-status"},"Check Authorisation Status"),(0,s.kt)("p",null,"You can check the authorisation status for a specific permission by using the ",(0,s.kt)("inlineCode",{parentName:"p"},"authorisationStatusForPermission()")," method:"),(0,s.kt)(i.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"air",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},'var status:String = Permissions.instance.authorisationStatusForPermission( "android.permission.CAMERA" );\n'))),(0,s.kt)(r.Z,{value:"unity",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'string status = Permissions.Instance.AuthorisationStatusForPermission("android.permission.CAMERA");\n')))),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"status")," can be one of the values defined in the ",(0,s.kt)("inlineCode",{parentName:"p"},"AuthorisationStatus")," class:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"AuthorisationStatus.AUTHORISED"),": This device has been authorised."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"AuthorisationStatus.NOT_DETERMINED"),": You are yet to ask for authorisation."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"AuthorisationStatus.SHOULD_EXPLAIN"),": You need to further explain."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"AuthorisationStatus.DENIED"),": The user has disabled the permission."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"AuthorisationStatus.UNKNOWN"),": The permission is in an unknown state, normally indicating an error has occurred."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"AuthorisationStatus.RESTRICTED"),": The user has restricted the permission to certain assets.\n")),(0,s.kt)("h3",{id:"request-authorisation"},"Request Authorisation"),(0,s.kt)("p",null,"To request authorisation for an individual permission you can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"requestAuthorisationForPermission()")," method passing the permission of interest."),(0,s.kt)(i.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"air",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},'Permissions.instance.requestAuthorisationForPermission( "android.permission.CAMERA" );\n'))),(0,s.kt)(r.Z,{value:"unity",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'Permissions.Instance.RequestAuthorisationForPermission( "android.permission.CAMERA" );\n')))),(0,s.kt)("p",null,"This method can either be handled with an event result or via a callback function."),(0,s.kt)("h4",{id:"event"},"Event"),(0,s.kt)("p",null,"You will receive an ",(0,s.kt)("inlineCode",{parentName:"p"},"AuthorisationEvent.CHANGED")," (or ",(0,s.kt)("inlineCode",{parentName:"p"},"AuthorisationEvent.PERMISSION_CHANGED"),") event after the process completes which contains the updated ",(0,s.kt)("inlineCode",{parentName:"p"},"status"),": "),(0,s.kt)(i.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"air",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},'Permissions.service.addEventListener( AuthorisationEvent.CHANGED, authorisationChangedHandler );\n\nPermissions.service.requestAuthorisationForPermission( "android.permission.CAMERA" );\n')),(0,s.kt)("p",null,"You will then receive a change event if the user accepted your permission request:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},"function authorisationChangedHandler( event:AuthorisationEvent ):void\n{\n    // Check the authorisation state again (as above)\n}\n"))),(0,s.kt)(r.Z,{value:"unity",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'Permissions.Instance.OnAuthorisationChanged += Permissions_OnAuthorisationChanged;\n\nPermissions.service.RequestAuthorisationForPermission( "android.permission.CAMERA" );\n')),(0,s.kt)("p",null,"You will then receive a change event if the user accepted your permission request:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"private void Permissions_OnAuthorisationChanged(AuthorisationEvent e)\n{\n    // Check the authorisation state again (as above)\n}\n")))),(0,s.kt)("h4",{id:"callback"},"Callback"),(0,s.kt)("p",null,"You can supply a function to the ",(0,s.kt)("inlineCode",{parentName:"p"},"requestAuthorisationForPermission()")," method that will be called when the process completes.\nThis method should have the following signature ",(0,s.kt)("inlineCode",{parentName:"p"},"function( status:String ):void"),".\nThe ",(0,s.kt)("inlineCode",{parentName:"p"},"status")," parameter is the updated authorisation status."),(0,s.kt)(i.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"air",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},'Permissions.instance.requestAuthorisationForPermission(\n        "android.permission.CAMERA",\n        function ( status:String ):void\n        {\n            trace( "requestAuthorisationForPermission(): status=" + status );\n            // Check the authorisation state again (as above)\n        } );\n'))),(0,s.kt)(r.Z,{value:"unity",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'Permissions.Instance.RequestAuthorisationForPermission(\n    "android.permission.CAMERA",\n    (string status) =>\n    {\n        Log("request auth status = " + status);\n        // Check the authorisation state again (as above)\n    }\n);\n')))),(0,s.kt)("h2",{id:"multiple-permissions"},"Multiple Permissions"),(0,s.kt)("p",null,"You can use the extension to handle multiple permissions by passing an array of permissions to the extension and then using the following functionality to check for authorisation status of all the permissions combined."),(0,s.kt)("h3",{id:"set-permissions"},"Set Permissions"),(0,s.kt)("p",null,"You must inform the extension which permissions you wish to request.\nThis is done by passing an array of ",(0,s.kt)("inlineCode",{parentName:"p"},"String"),"s each being the permission required."),(0,s.kt)("p",null,"For example to set the camera permission:"),(0,s.kt)(i.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"air",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},'Permissions.service.setPermissions( \n    [ \n        "android.permission.CAMERA" \n    ] \n);\n'))),(0,s.kt)(r.Z,{value:"unity",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'Permissions.Instance.SetPermissions( \n    [ \n        "android.permission.CAMERA" \n    ] \n);\n')))),(0,s.kt)("h3",{id:"check-authorisation"},"Check Authorisation"),(0,s.kt)("p",null,"You can check the current authorisation status by calling the ",(0,s.kt)("inlineCode",{parentName:"p"},"authorisationStatus()")," method:"),(0,s.kt)(i.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"air",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},"switch (Permissions.service.authorisationStatus())\n{\n    case AuthorisationStatus.AUTHORISED:\n        // This device has been authorised.\n        break;\n        \n    case AuthorisationStatus.NOT_DETERMINED:\n    case AuthorisationStatus.SHOULD_EXPLAIN:\n        // You are yet to ask for authorisation or need to further explain\n        // At this point you should consider your strategy to get your \n        // user to authorise by explaining your need for the permissions\n        break;\n        \n    case AuthorisationStatus.DENIED:\n    case AuthorisationStatus.UNKNOWN:\n    case AuthorisationStatus.RESTRICTED:\n        // The user has disabled the permissions\n        // Advise your user of the lack of permissions as you see fit\n        break;\n}\n"))),(0,s.kt)(r.Z,{value:"unity",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"TODO\n")))),(0,s.kt)("p",null,"You should respect the ",(0,s.kt)("inlineCode",{parentName:"p"},"SHOULD_EXPLAIN")," status by displaying additional information\nto your user about why you require this functionality."),(0,s.kt)("h3",{id:"request-authorisation-1"},"Request Authorisation"),(0,s.kt)("p",null,"To request authorisation call the ",(0,s.kt)("inlineCode",{parentName:"p"},"requestAuthorisation()")," function.\nYou can either wait for the event or supply a callback function to get details on when the request authorisation process completes."),(0,s.kt)("h4",{id:"event-1"},"Event"),(0,s.kt)("p",null,"You will receive an ",(0,s.kt)("inlineCode",{parentName:"p"},"AuthorisationEvent.CHANGED")," event after the process completes which contains the updated ",(0,s.kt)("inlineCode",{parentName:"p"},"status"),": "),(0,s.kt)(i.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"air",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},"Permissions.service.addEventListener( AuthorisationEvent.CHANGED, authorisationChangedHandler );\nPermissions.service.requestAuthorisation();\n")),(0,s.kt)("p",null,"You will then receive a change event if the user accepted your permission request:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},"function authorisationChangedHandler( event:AuthorisationEvent ):void\n{\n    // Check the authorisation state again (as above)\n}\n"))),(0,s.kt)(r.Z,{value:"unity",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"Permissions.Instance.OnAuthorisationChanged += Permissions_OnAuthorisationChanged;\n\nPermissions.service.RequestAuthorisation();\n")),(0,s.kt)("p",null,"You will then receive a change event if the user accepted your permission request:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'private void Permissions_OnAuthorisationChanged(AuthorisationEvent e)\n{\n    Debug.Log("Permissions_OnAuthorisationChanged");\n}\n')))),(0,s.kt)("h4",{id:"callback-1"},"Callback"),(0,s.kt)("p",null,"You can supply a function to the ",(0,s.kt)("inlineCode",{parentName:"p"},"requestAuthorisation()")," method that will be called when the process completes. This method should have the following signature ",(0,s.kt)("inlineCode",{parentName:"p"},"function( status:String ):void"),". The ",(0,s.kt)("inlineCode",{parentName:"p"},"status")," parameter is the updated authorisation status."),(0,s.kt)(i.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"air",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},'Permissions.instance.requestAuthorisation(\n        function ( status:String ):void\n        {\n            trace( "requestAuthorisation(): status=" + status );\n            // Check the authorisation state again (as above)\n        } );\n'))),(0,s.kt)(r.Z,{value:"unity",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'Permissions.Instance.RequestAuthorisation(\n    (string status) =>\n    {\n        Log("request auth status = " + status);\n    }\n);\n')))),(0,s.kt)("h3",{id:"example"},"Example"),(0,s.kt)(i.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"air",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},"function checkAndRequestAuthorisation():void \n{\n    switch (Permissions.service.authorisationStatus())\n    {\n        case AuthorisationStatus.AUTHORISED:\n            // This device has been authorised.\n            break;\n            \n        case AuthorisationStatus.NOT_DETERMINED:\n            // You are yet to ask for authorisation \n            Permissions.service.addEventListener( AuthorisationEvent.CHANGED, authorisationChangedHandler );\n            Permissions.service.requestAuthorisation();\n            break;\n\n        case AuthorisationStatus.SHOULD_EXPLAIN:\n            // At this point you should consider your strategy to get your \n            // user to authorise by explaining your need for the permissions\n            \n            // You can attempt a request again or show a dialog as to the requirement for the permission\n\n            break;\n\n        case AuthorisationStatus.DENIED:\n        case AuthorisationStatus.UNKNOWN:\n        case AuthorisationStatus.RESTRICTED:\n            // The user has disabled the permissions\n            // Advise your user of the lack of permissions as you see fit\n            break;\n    }\n}\n\nfunction authorisationChangedHandler( event:AuthorisationEvent ):void\n{\n    // Check the authorisation state again (as above)\n    checkAndRequestAuthorisation();\n}\n"))),(0,s.kt)(r.Z,{value:"unity",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"")))),(0,s.kt)("h2",{id:"events"},"Events"),(0,s.kt)(i.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"air",mdxType:"TabItem"},(0,s.kt)("p",null,"There are two main events of interest dispatched by this extension."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"AuthorisationEvent.CHANGED"),": Dispatched when the authorisation status has changed. This is independent of any particular permission and just indicates something has changed. "),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"AuthorisationEvent.PERMISSION_CHANGED"),': Dispatched when the authorisation status of a specific permission changes. The event contains the permission and the new status. If you are using the "multiple permissions" approach you may receive multiple of these events after a request authorisation process has completed.')),(0,s.kt)("p",null,".")),(0,s.kt)(r.Z,{value:"unity",mdxType:"TabItem"})))}m.isMDXComponent=!0},68668:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/userflow-d4ecbb827a3dfd60eef5e1f58b30bb5b.png"}}]);
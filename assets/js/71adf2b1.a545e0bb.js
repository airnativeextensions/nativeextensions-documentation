"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[10773],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(t),m=i,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||o;return t?a.createElement(h,r(r({ref:n},u),{},{components:t})):a.createElement(h,r({ref:n},u))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:i,r[1]=l;for(var d=2;d<o;d++)r[d]=t[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294),i=t(86010);const o={tabItem:"tabItem_Ymn6"};function r(e){let{children:n,hidden:t,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(o.tabItem,r),hidden:t},n)}},74866:(e,n,t)=>{t.d(n,{Z:()=>N});var a=t(87462),i=t(67294),o=t(86010),r=t(12466),l=t(16550),s=t(91980),d=t(67392),u=t(50012);function p(e){return function(e){var n,t;return null!=(n=null==(t=i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:i}}=e;return{value:n,label:t,attributes:a,default:i}}))}function c(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=null!=n?n:p(t);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,s._X)(o),(0,i.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=c(e),[r,l]=(0,i.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const i=null!=(n=a.find((e=>e.default)))?n:a[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:o}))),[s,d]=h({queryString:t,groupId:a}),[p,g]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[a,o]=(0,u.Nk)(t);return[a,(0,i.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),y=(()=>{const e=null!=s?s:p;return m({value:e,tabValues:o})?e:null})();(0,i.useLayoutEffect)((()=>{y&&l(y)}),[y]);return{selectedValue:r,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error("Can't select invalid tab value="+e);l(e),d(e),g(e)}),[d,g,o]),tabValues:o}}var y=t(72389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:n,block:t,selectedValue:l,selectValue:s,tabValues:d}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,r.o5)(),c=e=>{const n=e.currentTarget,t=u.indexOf(n),a=d[t].value;a!==l&&(p(n),s(a))},m=e=>{var n;let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var a;const n=u.indexOf(e.currentTarget)+1;t=null!=(a=u[n])?a:u[0];break}case"ArrowLeft":{var i;const n=u.indexOf(e.currentTarget)-1;t=null!=(i=u[n])?i:u[u.length-1];break}}null==(n=t)||n.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},d.map((e=>{let{value:n,label:t,attributes:r}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>u.push(e),onKeyDown:m,onClick:c},r,{className:(0,o.Z)("tabs__item",k.tabItem,null==r?void 0:r.className,{"tabs__item--active":l===n})}),null!=t?t:n)})))}function b(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function v(e){const n=g(e);return i.createElement("div",{className:(0,o.Z)("tabs-container",k.tabList)},i.createElement(f,(0,a.Z)({},e,n)),i.createElement(b,(0,a.Z)({},e,n)))}function N(e){const n=(0,y.Z)();return i.createElement(v,(0,a.Z)({key:String(n)},e))}},42811:(e,n,t)=>{t.d(n,{ZP:()=>l});var a=t(87462),i=(t(67294),t(3905));const o={toc:[{value:"Install APM",id:"install-apm",level:3},{value:"Setup an APM project",id:"setup-an-apm-project",level:3},{value:"Check your github token",id:"check-your-github-token",level:4}]},r="wrapper";function l(e){let{components:n,...t}=e;return(0,i.kt)(r,(0,a.Z)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"If you don't have an APM project setup, expand the guide below to setup an APM project before installing the extension.")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Setup APM"),(0,i.kt)("p",null,(0,i.kt)("h3",{id:"install-apm"},"Install APM"),(0,i.kt)("p",null,"If you haven't installed ",(0,i.kt)("inlineCode",{parentName:"p"},"apm")," follow the install guide on ",(0,i.kt)("a",{parentName:"p",href:"https://airsdk.dev/docs/basics/install-apm"},"airsdk.dev"),"."),(0,i.kt)("h3",{id:"setup-an-apm-project"},"Setup an APM project"),(0,i.kt)("p",null,"You will need an APM project for your application."),(0,i.kt)("p",null,"There are many ways to do this and for more options see the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/airsdk/apm/wiki/Usage-ProjectsAndPackages#initialise"},"APM documentation"),". Here we will just initialise a new empty project:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apm init\n")),(0,i.kt)("h4",{id:"check-your-github-token"},"Check your github token"),(0,i.kt)("p",null,"We use github to secure our extensions so you must have created a github personal access token and configured ",(0,i.kt)("inlineCode",{parentName:"p"},"apm")," to use it. "),(0,i.kt)("p",null,"To do this create a token using this ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token"},"guide from github")," and then set it in your apm config using:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apm config set github_token ghp_XXXXXXXXXXXXXXXXXXXXXXXXXXXX\n")),(0,i.kt)("p",null,"If you don't do this correctly you may find the install will fail."))))}l.isMDXComponent=!0},42390:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>A,contentTitle:()=>N,default:()=>E,frontMatter:()=>v,metadata:()=>x,toc:()=>w});var a=t(87462),i=(t(67294),t(3905)),o=t(74866),r=t(85162),l=t(42811);const s={toc:[{value:"Install the extension",id:"install-the-extension",level:3}]},d="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Note: All of the commands below should be run in a terminal / command prompt in the root directory of your application, generally the level above your source directory.")),(0,i.kt)(l.ZP,{mdxType:"SetupAPM"}),(0,i.kt)("h3",{id:"install-the-extension"},"Install the extension"),(0,i.kt)("p",null,"Install the extension by running: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apm install com.distriqt.Location\n")),(0,i.kt)("p",null,"This will download and install the extension, required assets, and all dependencies."),(0,i.kt)("p",null,"Once complete ",(0,i.kt)("inlineCode",{parentName:"p"},"apm")," will have created something like the following file structure: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},".\n|____ ane\n| |____ com.distriqt.Location.ane   # Location extension\n| |____ [dependencies]\n|____ apm_packages                  # cache directory - ignore\n|____ project.apm                   # apm project file\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Add the ",(0,i.kt)("inlineCode",{parentName:"li"},"ane")," directory to your IDE. ",(0,i.kt)("em",{parentName:"li"},"See the tutorials located ",(0,i.kt)("a",{parentName:"em",href:"/docs/tutorials/getting-started"},"here")," on adding an extension to your IDE."))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"We suggest you use the locations directly in your builds rather than copying the files elsewhere. The reason for this is if you ever go to update the extensions using ",(0,i.kt)("inlineCode",{parentName:"p"},"apm")," that these updates will be pulled into your build automatically.")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You will need to set the usage description strings for use in the authorisation dialogs. Call the following to step through the configuration values for this extension:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apm project config set com.distriqt.Location\n")))}u.isMDXComponent=!0;const p={toc:[{value:"Dependencies",id:"dependencies",level:3},{value:"Core",id:"core",level:4},{value:"Android Support",id:"android-support",level:4},{value:"Google Play Services",id:"google-play-services",level:4}]},c="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(c,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The following guide is used to manually install the extension, download dependencies and update the application descriptor. We highly recommend installing extensions using ",(0,i.kt)("inlineCode",{parentName:"p"},"apm"),". Using ",(0,i.kt)("inlineCode",{parentName:"p"},"apm")," will automate the installation and automatically handle updates and dependencies along with greatly simplifying the application descriptor generation.")),(0,i.kt)("p",null,"First step is always to add the extension to your development environment. Download the extension from the repository and then follow the tutorial located ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/getting-started"},"here")," to add the extension to your development environment."),(0,i.kt)("h3",{id:"dependencies"},"Dependencies"),(0,i.kt)("p",null,"Many of our extensions use some common libraries, for example, the Android Support libraries."),(0,i.kt)("p",null,"We have to separate these libraries into separate extensions in order to avoid multiple versions of the libraries being included in your application and causing packaging conflicts. This means that you need to include some additional extensions in your application along with the main extension file."),(0,i.kt)("p",null,"You will add these extensions as you do with any other extension, and you need to ensure it is packaged with your application."),(0,i.kt)("h4",{id:"core"},"Core"),(0,i.kt)("p",null,"The Core ANE is required by this ANE. You must include and package this extension in your application."),(0,i.kt)("p",null,"The Core ANE doesn't provide any functionality in itself but provides support libraries and frameworks used by our extensions.\nIt also includes some centralised code for some common actions that can cause issues if they are implemented in each individual extension."),(0,i.kt)("p",null,"You can access this extension here: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-Core"},"https://github.com/distriqt/ANE-Core"),"."),(0,i.kt)("h4",{id:"android-support"},"Android Support"),(0,i.kt)("p",null,"The Android Support libraries encompass the Android Support, Android X and common Google libraries. "),(0,i.kt)("p",null,"These libraries are specific to Android. There are no issues including these on all platforms, they are just ",(0,i.kt)("strong",{parentName:"p"},"required")," for Android."),(0,i.kt)("p",null,"This extension requires the following extensions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-AndroidSupport/raw/master/lib/androidx.core.ane"},(0,i.kt)("inlineCode",{parentName:"a"},"androidx.core"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-AndroidSupport/raw/master/lib/com.jetbrains.kotlin.ane"},(0,i.kt)("inlineCode",{parentName:"a"},"com.jetbrains.kotlin")))),(0,i.kt)("p",null,"You can access these extensions here: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-AndroidSupport"},"https://github.com/distriqt/ANE-AndroidSupport"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note"),": if you have been using the older ",(0,i.kt)("inlineCode",{parentName:"p"},"com.distriqt.androidsupport.*")," (Android Support) extensions you should remove these extensions and replace it with the ",(0,i.kt)("inlineCode",{parentName:"p"},"androidx")," extensions listed above. This is the new version of the android support libraries and moving forward all our extensions will require AndroidX.")),(0,i.kt)("h4",{id:"google-play-services"},"Google Play Services"),(0,i.kt)("p",null,"This ANE requires usage of certain aspects of the Google Play Services client library.\nThe client library is available as a series of ANEs that you add into your applications\npackaging options. Each separate ANE provides a component from the Play Services client\nlibrary and are used by different ANEs. These client libraries aren't packaged with this\nANE as they are used by multiple ANEs and separating them will avoid conflicts, allowing\nyou to use multiple ANEs in the one application."),(0,i.kt)("p",null,"This ANE requires the following Google Play Services:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.distriqt.playservices.Base.ane"},(0,i.kt)("inlineCode",{parentName:"a"},"com.distriqt.playservices.Base"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.distriqt.playservices.Location.ane"},(0,i.kt)("inlineCode",{parentName:"a"},"com.distriqt.playservices.Location")))),(0,i.kt)("p",null,"You must include the above native extensions in your application along with this extension,\nand you need to ensure they are packaged with your application."),(0,i.kt)("p",null,"You can access the Google Play Services client library extensions here: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-GooglePlayServices"},"https://github.com/distriqt/ANE-GooglePlayServices"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note:")," The Google Play Services and Android Support ANEs are only ",(0,i.kt)("strong",{parentName:"p"},"required")," on Android devices.\nThere are no issues packaging these extensions with all platforms as there are default implementations available which will allow your code to package without errors however if you are only building an iOS application feel free to remove the Google Play Services and Android Support ANEs from your application.")))}m.isMDXComponent=!0;const h={toc:[]},g="wrapper";function y(e){let{components:n,...t}=e;return(0,i.kt)(g,(0,a.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Updating your application descriptor will insert the required ",(0,i.kt)("inlineCode",{parentName:"p"},"extensionID"),"'s and generate the manifest and info additions for your application. "),(0,i.kt)("p",null,"You update your application descriptor by running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apm generate app-descriptor src/MyApp-app.xml\n")),(0,i.kt)("p",null,"Change the path (",(0,i.kt)("inlineCode",{parentName:"p"},"src/MyApp-app.xml"),") to point to your application descriptor."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"This will modify your application descriptor replacing the manifest additions and info additions with the ones generated from ",(0,i.kt)("inlineCode",{parentName:"p"},"apm"),". "),(0,i.kt)("p",{parentName:"admonition"},"You should backup your application descriptor before running this command to ensure you don't lose any information."),(0,i.kt)("p",{parentName:"admonition"},"If you need to insert custom data into these sections see the guides for ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/airsdk/apm/wiki/Usage-Generate#android"},"Android")," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/airsdk/apm/wiki/Usage-Generate#ios"},"iOS"))))}y.isMDXComponent=!0;const k={toc:[{value:"Extension IDs",id:"extension-ids",level:3},{value:"Android",id:"android",level:3},{value:"Manifest Additions",id:"manifest-additions",level:4},{value:"Android Gradle Version",id:"android-gradle-version",level:4},{value:"iOS",id:"ios",level:3},{value:"InfoAdditions",id:"infoadditions",level:4}]},f="wrapper";function b(e){let{components:n,...t}=e;return(0,i.kt)(f,(0,a.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"extension-ids"},"Extension IDs"),(0,i.kt)("p",null,"The following should be added to your ",(0,i.kt)("inlineCode",{parentName:"p"},"extensions")," node in your application descriptor to identify all the required ANEs in your application:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<extensions>\n    <extensionID>com.distriqt.Location</extensionID>\n    <extensionID>com.distriqt.Core</extensionID>\n    <extensionID>androidx.core</extensionID>\n    <extensionID>com.distriqt.playservices.Base</extensionID>\n    <extensionID>com.distriqt.playservices.Location</extensionID>\n</extensions>\n")),(0,i.kt)("h3",{id:"android"},"Android"),(0,i.kt)("h4",{id:"manifest-additions"},"Manifest Additions"),(0,i.kt)("p",null,"The Location extension requires a few additions to the manifest. These additions are to request permissions for the location information and to list receivers for the location updates. You should add the listing below to your manifest, you only need one of the permission\nstrings (coarse/fine) however both are listed below."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Make sure you replace ",(0,i.kt)("inlineCode",{parentName:"p"},"APPLICATION_PACKAGE")," with your applications package eg. ",(0,i.kt)("inlineCode",{parentName:"p"},"air.com.distriqt.test"),".\nThis is generally your AIR application id prefixed with ",(0,i.kt)("inlineCode",{parentName:"p"},"air."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest android:installLocation="auto">\n    <uses-permission android:name="android.permission.INTERNET"/>\n    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />\n    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_LOCATION"/>\n    \n    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>\n    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />\n\n    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>\n\n\n    <application>\n    \n        <service android:name="com.distriqt.extension.location.services.LocationUpdateService" android:foregroundServiceType="location" android:exported="true" android:enabled="true" />\n\n        <receiver android:name="com.distriqt.extension.location.receivers.GeofenceTransitionReceiver" android:exported="true" android:enabled="true" />\n        <service android:name="com.distriqt.extension.location.services.GeofenceRestartService" android:exported="true" android:enabled="true" />\n\n        <receiver android:name="com.distriqt.extension.location.receivers.BootReceiver" android:exported="true" android:enabled="true" >\n            <intent-filter>\n                <action android:name="android.intent.action.BOOT_COMPLETED"/>\n                <action android:name="android.location.PROVIDERS_CHANGED"/>\n            </intent-filter>\n        </receiver>\n\n        <activity android:name="com.distriqt.core.auth.AuthorisationActivity" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n        \n    </application>\n    \n</manifest>\n')),(0,i.kt)("h4",{id:"android-gradle-version"},"Android Gradle Version"),(0,i.kt)("p",null,"We have updated the required gradle version used to build your application to be higher than the default AIR currently uses (April 2025). "),(0,i.kt)("p",null,"To specify a higher version add the following to your android node in your application descriptor:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<android>\n    <gradleVersion>8.9</gradleVersion>\n    <androidGradlePluginVersion>8.7.3</androidGradlePluginVersion>\n\n  ...\n</android>\n")),(0,i.kt)("p",null,"If you don't do this you will see the following error when building your application:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Unexpected failure: Unable to run java: com.adobe.air.ADTException: gradle tool failed: \nFAILURE: Build failed with an exception.\n\n...\n\n   > BUG! exception in phase 'semantic analysis' in source unit '_BuildScript_' Unsupported class file major version 65\n")),(0,i.kt)("h3",{id:"ios"},"iOS"),(0,i.kt)("h4",{id:"infoadditions"},"InfoAdditions"),(0,i.kt)("p",null,"Location updates require a few additions to the Info plist and Entitlements section of your application to correctly configure your application for location. You should add the listing below to your application descriptor iPhone info additions node."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"\x3c!-- iOS 6,7 --\x3e\n<key>NSLocationUsageDescription</key>\n<string>This application would like to use your location.</string>\n\n\x3c!-- iOS 8 + --\x3e\n<key>NSLocationWhenInUseUsageDescription</key>\n<string>This application would like to use your location when in use.</string>\n<key>NSLocationAlwaysUsageDescription</key>\n<string>This application would like to use your location in the background.</string>\n\n\x3c!-- iOS 11 + --\x3e\n<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>\n<string>This application would like to use your location in the background and the foreground.</string>\n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"If you are going to be sending data to a url don't forget to add the appropriate ",(0,i.kt)("inlineCode",{parentName:"p"},"NSAppTransportSecurity")," definitions to your info additions."),(0,i.kt)("p",{parentName:"admonition"},"For example to allow all http requests:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<key>NSAppTransportSecurity</key>\n<dict>\n    <key>NSAllowsArbitraryLoads</key>\n    <true/>\n</dict>\n"))))}b.isMDXComponent=!0;const v={title:"Add the Extension",sidebar_label:"Add the Extension"},N=void 0,x={unversionedId:"location/add-the-extension",id:"location/add-the-extension",title:"Add the Extension",description:"The simplest way to install and manage your AIR native extensions and libraries is to use the AIR Package Manager (apm). We highly recommend using apm, as it will handle downloading all required dependencies and manage your application descriptor (Android manifest additions, iOS info additions etc).",source:"@site/docs/location/add-the-extension.mdx",sourceDirName:"location",slug:"/location/add-the-extension",permalink:"/docs/location/add-the-extension",draft:!1,tags:[],version:"current",frontMatter:{title:"Add the Extension",sidebar_label:"Add the Extension"},sidebar:"location",previous:{title:"Location",permalink:"/docs/location/"},next:{title:"Initialise the Extension",permalink:"/docs/location/initialise-the-extension"}},A={},w=[{value:"Install",id:"install",level:2},{value:"Application Descriptor",id:"application-descriptor",level:2},{value:"Background Updates",id:"background-updates",level:3},{value:"Android",id:"android",level:4},{value:"iOS",id:"ios",level:4}],T={toc:w},I="wrapper";function E(e){let{components:n,...t}=e;return(0,i.kt)(I,(0,a.Z)({},T,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The simplest way to install and manage your AIR native extensions and libraries is to use the AIR Package Manager (",(0,i.kt)("inlineCode",{parentName:"p"},"apm"),"). We highly recommend using ",(0,i.kt)("inlineCode",{parentName:"p"},"apm"),", as it will handle downloading all required dependencies and manage your application descriptor (Android manifest additions, iOS info additions etc)."),(0,i.kt)("p",null,"However you can choose to install it manually, as you would have done in the past. "),(0,i.kt)("admonition",{title:"AIR SDK",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This ANE currently requires at least AIR 33+. This is required in order to support versions of Android > 9.0 (API 28). We always recommend using the most recent build with AIR especially for mobile development where the OS changes rapidly.")),(0,i.kt)("h2",{id:"install"},"Install"),(0,i.kt)(o.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"apm",mdxType:"TabItem"},(0,i.kt)(u,{mdxType:"InstallAPM"})),(0,i.kt)(r.Z,{value:"manual",mdxType:"TabItem"},(0,i.kt)(m,{mdxType:"InstallManual"}))),(0,i.kt)("h2",{id:"application-descriptor"},"Application Descriptor"),(0,i.kt)(o.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"apm",mdxType:"TabItem"},(0,i.kt)(y,{mdxType:"AppDescriptorAPM"})),(0,i.kt)(r.Z,{value:"manual",mdxType:"TabItem"},(0,i.kt)(b,{mdxType:"AppDescriptorManual"}))),(0,i.kt)("h3",{id:"background-updates"},"Background Updates"),(0,i.kt)("h4",{id:"android"},"Android"),(0,i.kt)("p",null,"On Android, if you require access to the location data in the background or if you are using geofences then you must also add the background permission:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- NEEDED FOR BACKGROUND LOCATION AND GEOFENCES --\x3e\n<uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />\n')),(0,i.kt)(o.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"apm",mdxType:"TabItem"},"To add this you need to add some additional configuration to apm. Firstly add a custom Android configuration file by running:",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apm generate config android\n")),(0,i.kt)("p",null,"Edit the ",(0,i.kt)("inlineCode",{parentName:"p"},"config/android/AndroidManifest.xml")," file that was generated to resemble the following, adding the required permissions, i.e.:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n<manifest xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools">\n\n  <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />\n  <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>\n\n</manifest>\n')),(0,i.kt)("p",null,"Once you have added this configuration run the steps above to update / generate your ",(0,i.kt)("a",{parentName:"p",href:"#application-descriptor"},"application descriptor"),"."),(0,i.kt)("p",null,"You can add any other additions you require in your application here and these will be merged by ",(0,i.kt)("inlineCode",{parentName:"p"},"apm")," when you generate your application descriptor. ")),(0,i.kt)(r.Z,{value:"manual",mdxType:"TabItem"},(0,i.kt)("p",null,"If you require access to the location data in the background or if you are using geofences then you must also add the background permission:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- NEEDED FOR BACKGROUND LOCATION AND GEOFENCES --\x3e\n<uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />\n<uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>\n')))),(0,i.kt)("h4",{id:"ios"},"iOS"),(0,i.kt)("p",null,"If you are planning to setup your application to receive background updates then you should include the ",(0,i.kt)("inlineCode",{parentName:"p"},"UIBackgroundModes")," key, (however it is not required).\nIf it is enabled, you will be able to receive updates in the background to trigger an event when your application is running in the background\n(and you have been granted the ",(0,i.kt)("inlineCode",{parentName:"p"},"ALWAYS")," authorisation by the user, see later). If you don't add it, then you will only receive the updates when the application is running in the foreground. "),(0,i.kt)("p",null,"Currently due to an AIR bug we can't receive location updates on iOS when the application isn't running. This is due to a bug where AIR applications cannot \"start into the background\" on iOS."),(0,i.kt)(o.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"apm",mdxType:"TabItem"},"To add these additions you need to add some additional configuration. Firstly add a custom iOS configuration file by running:",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apm generate config ios\n")),(0,i.kt)("p",null,"Edit the ",(0,i.kt)("inlineCode",{parentName:"p"},"config/ios/InfoAdditions.xml")," file that was generated to resemble the following, adding the ",(0,i.kt)("inlineCode",{parentName:"p"},"UIBackgroundModes")," node:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<plist version="1.0">\n    <dict>\n\n    \x3c!-- Required if you wish to receive background location updates --\x3e\n    <key>UIBackgroundModes</key>\n    <array>\n        <string>location</string>\n    </array>\n\n    </dict>\n</plist>\n')),(0,i.kt)("p",null,"Once you have added this configuration run the steps above to update / generate your ",(0,i.kt)("a",{parentName:"p",href:"#application-descriptor"},"application descriptor"),"."),(0,i.kt)("p",null,"You can add any other additions you require in your application here and these will be merged by ",(0,i.kt)("inlineCode",{parentName:"p"},"apm")," when you generate your application descriptor. ")),(0,i.kt)(r.Z,{value:"manual",mdxType:"TabItem"},(0,i.kt)("p",null,"To add these additions you need to add some additional configuration.\nThen edit your info additions in your application descriptor to add the following: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<iPhone>\n        <InfoAdditions><![CDATA[\n        \n        \x3c!-- Required if you wish to receive background location updates --\x3e\n        <key>UIBackgroundModes</key>\n        <array>\n            <string>location</string>\n        </array>\n\n        \x3c!-- Other additions here --\x3e\n\n    ]]></InfoAdditions>\n</iPhone>\n        \n")))),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"If your application requires locations services to run then you should also add the following to your info additions:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"\x3c!-- Add this if your application needs location services to run --\x3e\n<key>UIRequiredDeviceCapabilities</key>\n<array>\n    <string>location-services</string>\n</array> \n"))))}E.isMDXComponent=!0}}]);
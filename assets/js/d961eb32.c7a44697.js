"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[65376],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),i=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=i(n),h=r,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||o;return n?a.createElement(m,s(s({ref:t},u),{},{components:n})):a.createElement(m,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:r,s[1]=c;for(var i=2;i<o;i++)s[i]=n[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},63525:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var a=n(87462),r=(n(67294),n(3905));const o={title:"Batch",sidebar_label:"Batch"},s=void 0,c={unversionedId:"facebookapi/core/graph-api/batch",id:"facebookapi/core/graph-api/batch",title:"Batch",description:"If you have several requests you wish to batch together you can use the GraphRequestBatchBuilder to create a batch request.",source:"@site/docs/facebookapi/core/graph-api/batch.md",sourceDirName:"facebookapi/core/graph-api",slug:"/facebookapi/core/graph-api/batch",permalink:"/docs/facebookapi/core/graph-api/batch",draft:!1,tags:[],version:"current",frontMatter:{title:"Batch",sidebar_label:"Batch"},sidebar:"facebookapi",previous:{title:"Basics",permalink:"/docs/facebookapi/core/graph-api/basics"},next:{title:"Examples",permalink:"/docs/facebookapi/core/graph-api/examples"}},l={},i=[{value:"Events",id:"events",level:2},{value:"Callbacks",id:"callbacks",level:2}],u={toc:i},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"If you have several requests you wish to batch together you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequestBatchBuilder")," to create a batch request."),(0,r.kt)("p",null,"To create a batch, firstly create your ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequest")," instances as normal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var request1:GraphRequest = new GraphRequestBuilder()\n        .setPath(\'/me\')\n        .setMethod(\'GET\')\n        .addFields(["first_name","gender","picture.width(160).height(160)" ])\n        .build();\n\nvar request2:GraphRequest = new GraphRequestBuilder()\n        .setPath(\'/me/friends\')\n        .setMethod(\'GET\')\n        .addParameter("limit", 200 )\n        .addFields(["id","first_name","installed","picture.width(160).height(160)" ])\n        .build();\n')),(0,r.kt)("p",null,"Then construct the ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequestBatch")," using a ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequestBatchBuilder"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var batch:GraphRequestBatch = new GraphRequestBatchBuilder()\n    .addRequest( request1 )\n    .addRequest( request2 )\n    .build();\n")),(0,r.kt)("p",null,"Then call ",(0,r.kt)("inlineCode",{parentName:"p"},"makeBatchRequest()")," with your ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequestBatch")," instance:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"Facebook.instance.graphAPI.makeBatchRequest( batch );\n")),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("p",null,"You can add event listeners to the request objects to process the return data from each individual request, as you would for a single request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"request1.addEventListener( GraphRequestEvent.COMPLETE, request1_completeHandler );\nrequest1.addEventListener( GraphRequestEvent.ERROR, request1_errorHandler );\nrequest2.addEventListener( GraphRequestEvent.COMPLETE, request2_completeHandler );\nrequest2.addEventListener( GraphRequestEvent.ERROR, request2_errorHandler );\n\nfunction request1_completeHandler( event:GraphRequestEvent ):void \n{\n    // event.data will contain the Facebook response\n}\n\nfunction request1_errorHandler( event:GraphRequestEvent ):void \n{\n    // event.errorCode and event.errorMessage will contain details on the error\n}\n\nfunction request2_completeHandler( event:GraphRequestEvent ):void \n{\n    // event.data will contain the Facebook response\n}\n\nfunction request2_errorHandler( event:GraphRequestEvent ):void \n{\n    // event.errorCode and event.errorMessage will contain details on the error\n}\n")),(0,r.kt)("p",null,"Additionally you can listen for a ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequestEvent.BATCH_COMPLETE")," event to be notified when all the requests have been completed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'batch.addEventListener( GraphRequestEvent.BATCH_COMPLETE, batch_completeHandler );\n                \nfunction batch_completeHandler( event:GraphRequestEvent ):void\n{\n    trace( "batch complete" );\n}\n')),(0,r.kt)("p",null,"You should make sure to add these listeners before the call to ",(0,r.kt)("inlineCode",{parentName:"p"},"makeBatchRequest()"),"."),(0,r.kt)("h2",{id:"callbacks"},"Callbacks"),(0,r.kt)("p",null,"As an alternative to events, you can add callbacks to the requests as you do with a normal ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequest"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var request1:GraphRequest = new GraphRequestBuilder()\n    .setPath( "/me" )\n    .setCompleteCallback(\n            function( data:Object ):void \n            {\n                log( "request complete: " + JSON.stringify(data) );\n            }\n    )\n    .setErrorCallback(\n            function( code:int, message:String ):void \n            {\n                log( "request error: " + code + "::"+ message );\n            }\n    )\n    .build();\n')),(0,r.kt)("p",null,"Additionally you can add a completion callback to the ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequestBatch")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var batch:GraphRequestBatch = new GraphRequestBatchBuilder()\n    .addRequest( request1 )\n    .addRequest( request2 )\n    .addRequest( request3 )\n    .setCompleteCallback(\n            function():void\n            {\n                log( "batch complete" );\n            }\n    )\n    .build();\n')))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[26651],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),h=u(n),d=a,f=h["".concat(c,".").concat(d)]||h[d]||p[d]||i;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=h;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},10948:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return p}});var r=n(83117),a=n(80102),i=(n(67294),n(3905)),s=["components"],o={title:"Get Purchases",sidebar_label:"Get Purchases"},c=void 0,u={unversionedId:"inappbilling/get-purchases",id:"inappbilling/get-purchases",title:"Get Purchases",description:"On services where you can directly query the service for user purchases you can call the getPurchases",source:"@site/docs/inappbilling/get-purchases.md",sourceDirName:"inappbilling",slug:"/inappbilling/get-purchases",permalink:"/docs/inappbilling/get-purchases",draft:!1,tags:[],version:"current",frontMatter:{title:"Get Purchases",sidebar_label:"Get Purchases"},sidebar:"inappbilling",previous:{title:"Restore Purchases",permalink:"/docs/inappbilling/restore-purchases"},next:{title:"Consuming Purchases",permalink:"/docs/inappbilling/consuming-purchases"}},l={},p=[],h={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"On services where you can directly query the service for user purchases you can call the ",(0,i.kt)("inlineCode",{parentName:"p"},"getPurchases"),"\nfunction to retrieve them directly from the service."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This is not supported on services like Apple's InAppPurchases where the only method of retrieving\npurchases is through a user initiated restore purchases process. See ",(0,i.kt)("a",{parentName:"p",href:"/docs/inappbilling/restore-purchases"},"Restore Purchases"),"\nfor more on this."),(0,i.kt)("p",{parentName:"blockquote"},"Except in the situation where you are using the application receipt variant of the ANE. In that variant on iOS\nthis functionality will extract all the purchase information from the application receipt by decoding the receipt\nlocally on the device. ")),(0,i.kt)("p",null,"To query the purchases, simply call ",(0,i.kt)("inlineCode",{parentName:"p"},"getPurchases")," and wait for one of the following events:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"PurchaseEvent.GET_PURCHASES_COMPLETE"),": Dispatched when the purchases have been retrieved successfully"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"PurchaseEvent.GET_PURCHASES_FAILED"),": Dispatched when there was an error")),(0,i.kt)("p",null,"If the call is not supported it will return ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("p",null,"You can also check the ",(0,i.kt)("inlineCode",{parentName:"p"},"isGetPurchasesSupported")," flag to determine if the functionality is supported\non the current service."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (InAppBilling.service.isGetPurchasesSupported)\n{\n    InAppBilling.service.addEventListener( PurchaseEvent.GET_PURCHASES_COMPLETE, getPurchasesCompleteHandler );\n    InAppBilling.service.addEventListener( PurchaseEvent.GET_PURCHASES_FAILED, getPurchasesFailedHandler );\n\n    InAppBilling.service.getPurchases();\n}\nelse \n{\n    // Not supported - you should use restore purchases and track purchases in your app\n}\n\nfunction getPurchasesCompleteHandler( event:PurchaseEvent ):void\n{\n    for each (var purchase:Purchase in event.data)\n    {\n        processPurchase( purchase );\n    }\n} \n\nfunction getPurchasesFailedHandler( event:PurchaseEvent ):void \n{\n    // getPurchases failed\n}\n\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"During your ",(0,i.kt)("inlineCode",{parentName:"p"},"processPurchase")," implementation you should be sure to check the ",(0,i.kt)("inlineCode",{parentName:"p"},"purchase.transactionState"),". Only purchases in the state ",(0,i.kt)("inlineCode",{parentName:"p"},"Purchase.STATE_PURCHASED")," should be delivered to your user. You may find there are deferred states on some platforms.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"// Check the purchase state\nif (purchase.transactionState == Purchase.STATE_PURCHASED)\n{\n    //  Deliver product to user\n}\n")))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[44247],{3905:function(e,a,n){n.d(a,{Zo:function(){return v},kt:function(){return u}});var t=n(67294);function s(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){s(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,s=function(e,a){if(null==e)return{};var n,t,s={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(s[n]=e[n]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var d=t.createContext({}),l=function(e){var a=t.useContext(d),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},v=function(e){var a=l(e.components);return t.createElement(d.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,s=e.mdxType,r=e.originalType,d=e.parentName,v=o(e,["components","mdxType","originalType","parentName"]),m=l(n),u=s,p=m["".concat(d,".").concat(u)]||m[u]||c[u]||r;return n?t.createElement(p,i(i({ref:a},v),{},{components:n})):t.createElement(p,i({ref:a},v))}));function u(e,a){var n=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var d in a)hasOwnProperty.call(a,d)&&(o[d]=a[d]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var l=2;l<r;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},24694:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return l},default:function(){return c}});var t=n(87462),s=n(63366),r=(n(67294),n(3905)),i={title:"Saved Games",sidebar_label:"Usage"},o=void 0,d={unversionedId:"gameservices/saved-games",id:"gameservices/saved-games",isDocsHomePage:!1,title:"Saved Games",description:"The Saved Games service gives you a convenient way to save your players' game progression to the game",source:"@site/docs/gameservices/saved-games.md",sourceDirName:"gameservices",slug:"/gameservices/saved-games",permalink:"/docs/gameservices/saved-games",tags:[],version:"current",frontMatter:{title:"Saved Games",sidebar_label:"Usage"},sidebar:"gameservices",previous:{title:"Achievements",permalink:"/docs/gameservices/achievements"},next:{title:"Conflicts",permalink:"/docs/gameservices/saved-games---conflicts"}},l=[{value:"Loading Saved Games",id:"loading-saved-games",children:[]},{value:"Opening Saved Games",id:"opening-saved-games",children:[]},{value:"Creating Saved Games",id:"creating-saved-games",children:[]},{value:"Updating Saved Games",id:"updating-saved-games",children:[]},{value:"Deleting Saved Games",id:"deleting-saved-games",children:[]},{value:"Saved Games UI",id:"saved-games-ui",children:[]}],v={toc:l};function c(e){var a=e.components,n=(0,s.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,t.Z)({},v,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Saved Games service gives you a convenient way to save your players' game progression to the game\nservice servers. Your game can retrieve the saved game data to allow returning players to continue a\ngame at their last save point from any device."),(0,r.kt)("p",null,"The Saved Games service makes it possible to synchronize a player's game data across multiple devices.\nFor example, you can use the Saved Games service to allow a player to start a game on their phone, and\nthen continue playing on a tablet without losing any of their progress. This service can also be used\nto ensure that a player's game play continues from where it left off even if their device is lost,\ndestroyed, or traded in for a newer model."),(0,r.kt)("p",null,"Before getting started with Saved Games you must make sure that you enable them in your service configuration.\nThis is necessary to ensure the service is initialised with the correct scopes and that your user is asked\nfor the correct permissions when signing in."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var service:Service = new Service( Service.GOOGLE_PLAY_GAME_SERVICES );\nservice.enableSavedGames = true;\n\nGameServices.service.initialiseService( service );\n")),(0,r.kt)("p",null,"You can also check the ",(0,r.kt)("inlineCode",{parentName:"p"},"isSupported")," flag to ensure the current user has saved game functionality available:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (GameServices.service.savedGames.isSupported)\n{\n    // Saved games functionality is available\n}\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"SavedGame")," class contains a series of game metadata along with a data ",(0,r.kt)("inlineCode",{parentName:"p"},"ByteArray")," representing the\nactual saved data. Certain operations, such as opening, will return the saved data however most will only\nreturn the metadata, reducing server data loads to particular operations."),(0,r.kt)("h2",{id:"loading-saved-games"},"Loading Saved Games"),(0,r.kt)("p",null,"The most common starting point is to load a list of available save games. You do this by calling\n",(0,r.kt)("inlineCode",{parentName:"p"},"loadSavedGames()")," and listening for the ",(0,r.kt)("inlineCode",{parentName:"p"},"SavedGamesEvent.LOAD_SUCCESS")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"SavedGamesEvent.LOAD_ERROR"),"\nevents."),(0,r.kt)("p",null,"To retrieve all saved games for the currently signed-in player:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"GameServices.service.savedGames.addEventListener( SavedGamesEvent.LOAD_ERROR, loadErrorHandler );\nGameServices.service.savedGames.addEventListener( SavedGamesEvent.LOAD_SUCCESS, loadSuccessHandler );\n\nGameServices.service.savedGames.loadSavedGames();\n")),(0,r.kt)("p",null,"Then in your handlers:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'function loadSuccessHandler( event:SavedGamesEvent ):void\n{\n    for each (var s:SavedGame in event.data)\n    {\n        trace( "GAME: ["+ s.uniqueName +"] "+s.description );\n    }\n}\n\nfunction loadErrorHandler( event:SavedGamesEvent ):void\n{\n    trace( "SAVED GAMES LOAD ERROR" + event.data );\n}\n')),(0,r.kt)("p",null,"The boolean option allows you to force a refresh of the locally cached content. Generally\nyou should leave this to false and allow Play Games to automatically update the games,\nhowever there are times when you need force a refresh of the current content."),(0,r.kt)("h2",{id:"opening-saved-games"},"Opening Saved Games"),(0,r.kt)("p",null,"Once you have a list of the saved games you can load the data for a particular saved game by\ncalling ",(0,r.kt)("inlineCode",{parentName:"p"},"openGame"),". This will open the save game and retrieve any saved data associated,\nrefreshing from the server if required."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var savedGame:SavedGame = ...; // You should use a reference from the loadSavedGames call here\n\nGameServices.service.savedGames.addEventListener( SavedGamesEvent.OPEN_SUCCESS, savedGamesOpenSuccessHandler );\n\nGameServices.service.savedGames.openGame( savedGame );\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'function savedGamesOpenSuccessHandler( event:SavedGamesEvent ):void\n{\n    // Here event.data should be an array of one SavedGame representing the loaded game.\n    // It will have loaded saved game data\n    for each (var s:SavedGame in event.data)\n    {\n        trace( "GAME: ["+ s.uniqueName +"] "+s.description + " :: " + s.data.toString());\n    }\n}\n')),(0,r.kt)("p",null,"There are also 3 error events that can occur when opening a file:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OPEN_NOT_FOUND"),": This is dispatched in the unusual situation where you have specified a saved\ngame that doesn't exist. If you use a save game reference from the load saved games call this\nshould never happen."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OPEN_FAILED"),": Dispatched when the data could not be loaded at this time, perhaps from a network error"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OPEN_ERROR"),": Dispatched if an error occurred retrieve")),(0,r.kt)("h2",{id:"creating-saved-games"},"Creating Saved Games"),(0,r.kt)("p",null,"If you need to create a new saved game, either because this is the first time a user is playing\nyour game or if you have allowed them to create multiple save games, you will need to call ",(0,r.kt)("inlineCode",{parentName:"p"},"createGame"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var uniqueName:String = ...; // Some unique name to reference the created save game\n\nGameServices.service.savedGames.addEventListener( SavedGamesEvent.CREATE_SUCCESS, savedGamesCreateSuccessHandler );\nGameServices.service.savedGames.addEventListener( SavedGamesEvent.CREATE_ERROR, savedGamesCreateErrorHandler );\n\nGameServices.service.savedGames.createGame( uniqueName );\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'function savedGamesCreateSuccessHandler( event:SavedGamesEvent ):void\n{\n    // Successfully created a save game\n    var sg:SavedGame = SavedGame( event.data[0] );\n    //\n    //  Good point to initialise the data \n    sg.data.writeUTFBytes( "asdf" );\n    \n    //\n    //  Until we save the game it won\'t actually be stored \n    GameServices.service.savedGames.saveGame( sg );\n}\n\nfunction savedGamesCreateErrorHandler( event:SavedGamesEvent ):void\n{\n    trace( "Error creating saved game: " + event.data );\n}\n')),(0,r.kt)("h2",{id:"updating-saved-games"},"Updating Saved Games"),(0,r.kt)("p",null,"Saving data to the saved game involves firstly updating the ByteArray and then passing the updated\n",(0,r.kt)("inlineCode",{parentName:"p"},"SavedGame")," object to the saved game. The data can be any format you require and is saved as binary\ndata. It is your applications responsibility to format and parse the data contained in a saved game."),(0,r.kt)("p",null,"Generally you should keep this data as small as possible however Play Games support up to 3Mb and\nGame Center is only limited by the users' iCloud available space."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var savedGame:SavedGame = ...; // This should be the currently opened user saved game\n\n// Some game data\nvar data:String = "<game><a>data</a><b>"+Math.random().toPrecision(5)+"</b></game>";\n\n// Change the description of the saved game\nsavedGame.description = "Saved game " + String( 1000 * Math.random());\n\n// Write the new data\nsavedGame.data.clear();\nsavedGame.data.writeUTFBytes( data );\nsavedGame.data.position = 0;\n\nGameServices.service.savedGames.addEventListener( SavedGamesEvent.SAVE_SUCCESS, savedGamesSaveSuccessHandler );\nGameServices.service.savedGames.addEventListener( SavedGamesEvent.SAVE_ERROR, savedGamesSaveErrorHandler );\n\nGameServices.service.savedGames.saveGame( savedGame );\n')),(0,r.kt)("p",null,"The events will tell us the success or failure of the save:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'function savedGamesSaveSuccessHandler( event:SavedGamesEvent ):void\n{\n    trace( "SAVE SUCCESS" );\n}\n\nfunction savedGamesSaveErrorHandler( event:SavedGamesEvent ):void\n{\n    trace( "SAVE ERROR: "+event.data );\n}\n')),(0,r.kt)("h2",{id:"deleting-saved-games"},"Deleting Saved Games"),(0,r.kt)("p",null,"Deleting a saved game is simply a process of calling deleteGame and passing a valid SavedGame object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var savedGame:SavedGame = ...; // This should be a reference to a saved from returned from a load or open\n\nGameServices.service.savedGames.addEventListener( SavedGamesEvent.DELETE_SUCCESS, savedGamesDeleteSuccessHandler );\nGameServices.service.savedGames.addEventListener( SavedGamesEvent.DELETE_ERROR, savedGamesDeleteErrorHandler );\n\nGameServices.service.savedGames.deleteGame( savedGame );\n\n\nfunction savedGamesDeleteSuccessHandler( event:SavedGamesEvent ):void\n{\n    trace( "SAVE SUCCESS" );\n}\n\nfunction savedGamesDeleteErrorHandler( event:SavedGamesEvent ):void\n{\n    trace( "SAVE ERROR: "+event.data );\n}\n')),(0,r.kt)("h2",{id:"saved-games-ui"},"Saved Games UI"),(0,r.kt)("p",null,"To simplify your development, the Saved Games API provides a default Saved Games selection user\ninterface (UI) that you can use out-of-the-box. The Saved Games selection UI allows players to\ncreate a new saved game, view details about existing saved games, and load previous saved games."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'GameServices.service.savedGames.displaySavedGamesUI( "Saved Games" );\n\n\n')))}c.isMDXComponent=!0}}]);
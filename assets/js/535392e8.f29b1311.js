"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[69689],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=o.createContext({}),l=function(e){var n=o.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=l(e.components);return o.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=l(t),f=r,b=d["".concat(u,".").concat(f)]||d[f]||p[f]||i;return t?o.createElement(b,c(c({ref:n},s),{},{components:t})):o.createElement(b,c({ref:n},s))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=d;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:r,c[1]=a;for(var l=2;l<i;l++)c[l]=t[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},70716:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return a},metadata:function(){return u},toc:function(){return l},default:function(){return p}});var o=t(87462),r=t(63366),i=(t(67294),t(3905)),c={title:"Connecting",sidebar_label:"Connecting"},a=void 0,u={unversionedId:"bluetooth/connecting",id:"bluetooth/connecting",isDocsHomePage:!1,title:"Connecting",description:"Creating a connection between devices",source:"@site/docs/bluetooth/connecting.md",sourceDirName:"bluetooth",slug:"/bluetooth/connecting",permalink:"/docs/bluetooth/connecting",tags:[],version:"current",frontMatter:{title:"Connecting",sidebar_label:"Connecting"},sidebar:"bluetooth",previous:{title:"Add the Extension",permalink:"/docs/bluetooth/add-the-extension"},next:{title:"iOS",permalink:"/docs/bluetooth/ios"}},l=[{value:"Creating a connection between devices",id:"creating-a-connection-between-devices",children:[]}],s={toc:l};function p(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"creating-a-connection-between-devices"},"Creating a connection between devices"),(0,i.kt)("p",null,"For a bluetooth connection there must be a 'server' or a listener and a 'client' or connector.\nOne device must create a listening connection to accept incoming connections and another device\nmust connect to this device."),(0,i.kt)("p",null,"Each connection has a unique uuid that you should share between your application. A listener\nand a client must have the same uuid in order to initiate a connection."),(0,i.kt)("p",null,"The simplest way to handle this is to create a listener on both devices and only connect from\nthe device initiating the connection."))}p.isMDXComponent=!0}}]);
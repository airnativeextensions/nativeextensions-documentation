"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[41344],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=o.createContext({}),c=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return o.createElement(u.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),h=c(n),d=i,m=h["".concat(u,".").concat(d)]||h[d]||p[d]||r;return n?o.createElement(m,a(a({ref:t},l),{},{components:n})):o.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[h]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},24562:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(87462),i=(n(67294),n(3905));const r={title:"Requesting Authorisation",sidebar_label:"Requesting Authorisation"},a=void 0,s={unversionedId:"beacon/requesting-authorisation",id:"beacon/requesting-authorisation",title:"Requesting Authorisation",description:"When you are going to be accessing the user's location by scanning for beacons you",source:"@site/docs/beacon/requesting-authorisation.md",sourceDirName:"beacon",slug:"/beacon/requesting-authorisation",permalink:"/docs/beacon/requesting-authorisation",draft:!1,tags:[],version:"current",frontMatter:{title:"Requesting Authorisation",sidebar_label:"Requesting Authorisation"},sidebar:"beacon",previous:{title:"Add the Extension",permalink:"/docs/beacon/add-the-extension"},next:{title:"Monitoring a Region",permalink:"/docs/beacon/monitoring-a-region"}},u={},c=[{value:"Usage Description",id:"usage-description",level:2}],l={toc:c},h="wrapper";function p(e){let{components:t,...r}=e;return(0,i.kt)(h,(0,o.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"When you are going to be accessing the user's location by scanning for beacons you\nmust check that your application has been allowed access. To this end the extension\nprovides several helpers to check and request access to the required permissions."),(0,i.kt)("p",null,"On Android these permissions are listed through the manifest additions. On older\nversions of Android these permissions are accepted when the user installs the application.\nMore modern versions (Marshmallow 6 ","[v23]","+) require that you request the permissions\nsimilar to iOS. You will still need to list them in your manifest and then follow the\nsame code below as for iOS, except that on Android you will be able to ask multiple times.\nYou should respect the ",(0,i.kt)("inlineCode",{parentName:"p"},"SHOULD_EXPLAIN")," status by displaying additional information to your\nuser about why you require this functionality."),(0,i.kt)("p",null,"On iOS the user must be asked at runtime, which you only get one chance to ask, after which\nyou must direct the user to manually change the permissions in the settings."),(0,i.kt)("p",null,"The following code will work across both platforms"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"Beacon.service.addEventListener( AuthorisationEvent.CHANGED, authorisationChangedHandler );\n\nswitch (Beacon.service.authorisationStatus())\n{\n    case AuthorisationStatus.AUTHORISED:\n    case AuthorisationStatus.ALWAYS:\n    case AuthorisationStatus.IN_USE:\n        // This device has been authorised for the particular use case\n        break;\n    \n    case AuthorisationStatus.NOT_DETERMINED:\n    case AuthorisationStatus.SHOULD_EXPLAIN:\n        // You are yet to ask for authorisation \n        // At this point you should consider your strategy to get your \n        // user to authorise by explaining your need for the permissions\n\n        Beacon.service.requestAuthorisation();\n        break;\n    \n    case AuthorisationStatus.DENIED:\n    case AuthorisationStatus.UNKNOWN:\n    case AuthorisationStatus.RESTRICTED:\n        // The user has disabled the permissions\n        // Advise your user of the lack of permissions as you see fit\n        break;\n}\n\nfunction authorisationChangedHandler( event:AuthorisationEvent ):void\n{\n    // You should check the authorisation status again \n}\n")),(0,i.kt)("p",null,"Without authorisation none of the beacon functionality will work, so make sure you have been\nthrough this process and gotten a positive response from ",(0,i.kt)("inlineCode",{parentName:"p"},"hasAuthorisation()"),"."),(0,i.kt)("h2",{id:"usage-description"},"Usage Description"),(0,i.kt)("p",null,"You can customise the usage description messages as you see fit to suit your application. These messages are displayed in the main body area of the iOS authorisation dialog with the title and buttons being standard (and not customisable)."),(0,i.kt)("p",null,"The image below is an example of the authorisation dialog. The content ",(0,i.kt)("em",{parentName:"p"},'"Access to photo library is required to save images."')," is the usage description message you can set."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(26345).Z,width:"573",height:"357"})),(0,i.kt)("p",null,"You set these values through adding the usage description keys to your info additions or simply by setting up your configuration options in your ",(0,i.kt)("inlineCode",{parentName:"p"},"apm")," project."))}p.isMDXComponent=!0},26345:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/ios-permission-dialog-fb435e911b1ce9d2619a0dff5db7e237.png"}}]);
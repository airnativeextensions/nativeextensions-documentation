"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[72033],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>y});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=a.createContext({}),p=function(e){var r=a.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=p(e.components);return a.createElement(i.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(t),m=n,y=c["".concat(i,".").concat(m)]||c[m]||d[m]||o;return t?a.createElement(y,s(s({ref:r},u),{},{components:t})):a.createElement(y,s({ref:r},u))}));function y(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l[c]="string"==typeof e?e:n,s[1]=l;for(var p=2;p<o;p++)s[p]=t[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},56933:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=t(87462),n=(t(67294),t(3905));const o={title:"User Properties",sidebar_label:"User Properties"},s=void 0,l={unversionedId:"flurry/user-properties",id:"flurry/user-properties",title:"User Properties",description:"User Properties allow you to label your users based on preferences, behaviors or attributes unique to your app.",source:"@site/docs/flurry/user-properties.md",sourceDirName:"flurry",slug:"/flurry/user-properties",permalink:"/docs/flurry/user-properties",draft:!1,tags:[],version:"current",frontMatter:{title:"User Properties",sidebar_label:"User Properties"},sidebar:"flurry",previous:{title:"Standard Events",permalink:"/docs/flurry/analytics-standard-events"},next:{title:"Migrating to v6.0",permalink:"/docs/flurry/migrating-to-v6"}},i={},p=[{value:"Client Side API",id:"client-side-api",level:2},{value:"Set",id:"set",level:4},{value:"Add",id:"add",level:4},{value:"Remove",id:"remove",level:4},{value:"Flag",id:"flag",level:4}],u={toc:p},c="wrapper";function d(e){let{components:r,...t}=e;return(0,n.kt)(c,(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"User Properties allow you to label your users based on preferences, behaviors or attributes unique to your app."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"For details on the different types and using User Properties see the ",(0,n.kt)("a",{parentName:"p",href:"https://developer.yahoo.com/flurry/docs/analytics/userproperties/"},"official documentation"),".")),(0,n.kt)("h2",{id:"client-side-api"},"Client Side API"),(0,n.kt)("p",null,"The user properties state is on the server, and the SDK is a pass thru agent for client state change requests. There are 4 groups of operations (",(0,n.kt)("strong",{parentName:"p"},"set"),", ",(0,n.kt)("strong",{parentName:"p"},"add"),", ",(0,n.kt)("strong",{parentName:"p"},"remove"),", ",(0,n.kt)("strong",{parentName:"p"},"flag"),")."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"For (",(0,n.kt)("strong",{parentName:"li"},"set"),", ",(0,n.kt)("strong",{parentName:"li"},"add"),"), the fist parameter is a key, and the second parameter is a value."),(0,n.kt)("li",{parentName:"ul"},"For (",(0,n.kt)("strong",{parentName:"li"},"remove"),"), the first parameter is a key, and the second parameter is a value, or omitted to remove all values."),(0,n.kt)("li",{parentName:"ul"},"For (",(0,n.kt)("strong",{parentName:"li"},"flag"),"), the first parameter is a key and there is no second parameter.")),(0,n.kt)("h4",{id:"set"},"Set"),(0,n.kt)("p",null,"Sets and replaces (if any exist) the value(s) for the property."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},'Flurry.service.analytics.userProperties.setValue( "key", "value" );\n')),(0,n.kt)("h4",{id:"add"},"Add"),(0,n.kt)("p",null,"Adds a User Property value(s). Adding values already included in the state has no effect and does not error."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},'Flurry.service.analytics.userProperties.addValue( "key", "value" );\n')),(0,n.kt)("h4",{id:"remove"},"Remove"),(0,n.kt)("p",null,"Removes a specific User Property value(s) or removes all values. Removing values not already included in the state has no effect and does not error."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},'// Removes the value from the property\nFlurry.service.analytics.userProperties.removeValue( "key", "value" );\n')),(0,n.kt)("p",null,"or remove all values from the property:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},'Flurry.service.analytics.userProperties.remove( "key" );\n')),(0,n.kt)("h4",{id:"flag"},"Flag"),(0,n.kt)("p",null,"Exactly set, or replace if any previously exists, any value for the property to a single true state Implies that value is boolean and should only be flagged and cleared."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-actionscript"},'// Sets key to true\nFlurry.service.analytics.userProperties.flag( "key" );\n')))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[28085],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=c(n),y=o,g=u["".concat(p,".").concat(y)]||u[y]||d[y]||s;return n?r.createElement(g,a(a({ref:t},l),{},{components:n})):r.createElement(g,a({ref:t},l))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=y;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},52575:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const s={title:"Sensor Updates",sidebar_label:"Sensor Updates"},a=void 0,i={unversionedId:"gyroscope/sensor-updates",id:"gyroscope/sensor-updates",title:"Sensor Updates",description:"Listening for Sensor Updates",source:"@site/docs/gyroscope/sensor-updates.md",sourceDirName:"gyroscope",slug:"/gyroscope/sensor-updates",permalink:"/docs/gyroscope/sensor-updates",draft:!1,tags:[],version:"current",frontMatter:{title:"Sensor Updates",sidebar_label:"Sensor Updates"},sidebar:"gyroscope",previous:{title:"Add the Extension",permalink:"/docs/gyroscope/add-the-extension"},next:{title:"changelog",permalink:"/docs/gyroscope/changelog"}},p={},c=[{value:"Listening for Sensor Updates",id:"listening-for-sensor-updates",level:2},{value:"Stopping Sensor Updates",id:"stopping-sensor-updates",level:2}],l={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"listening-for-sensor-updates"},"Listening for Sensor Updates"),(0,o.kt)("p",null,"In order to listen for updates from the Gyroscope sensor you must first attach a listener\nfor the ",(0,o.kt)("inlineCode",{parentName:"p"},"GyroscopeEvent.UPDATE")," event and then call ",(0,o.kt)("inlineCode",{parentName:"p"},"register")," with your desired update\nrate."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"Gyroscope.service.addEventListener( GyroscopeEvent.UPDATE, gyro_updateHandler );\n\nGyroscope.service.register( Gyroscope.SENSOR_DELAY_GAME );\n")),(0,o.kt)("p",null,"The extension will now dispatch events at the specified rate giving you access to the\nangular speeds:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'private function gyro_updateHandler(event:GyroscopeEvent):void\n{\n    trace( "Angular Speeds: " + event.x +", "+ event.y +", "+ event.z );\n}\n')),(0,o.kt)("h2",{id:"stopping-sensor-updates"},"Stopping Sensor Updates"),(0,o.kt)("p",null,"Whenever you are done listening for sensor events you should inform the extension\nto stop monitoring the sensor and hence conserve battery life. "),(0,o.kt)("p",null,"This is done by a simple call to ",(0,o.kt)("inlineCode",{parentName:"p"},"unregister"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"Gyroscope.service.unregister();\n")),(0,o.kt)("p",null,"After calling this you will no longer receive ",(0,o.kt)("inlineCode",{parentName:"p"},"GyroscopeEvent.UPDATE")," events."))}d.isMDXComponent=!0}}]);
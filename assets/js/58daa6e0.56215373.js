"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[95403],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=m(n),f=r,d=u["".concat(l,".").concat(f)]||u[f]||p[f]||o;return n?a.createElement(d,i(i({ref:t},c),{},{components:n})):a.createElement(d,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},73190:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return m},toc:function(){return p}});var a=n(83117),r=n(80102),o=(n(67294),n(3905)),i=["components"],s={title:"Transformations",sidebar_label:"Transformations"},l=void 0,m={unversionedId:"image/transformations",id:"image/transformations",title:"Transformations",description:"You can apply transformations to BitmapData by using the transformAsync function to return BitmapData or the transformAndSaveAsync function to save to a file.",source:"@site/docs/image/transformations.md",sourceDirName:"image",slug:"/image/transformations",permalink:"/docs/image/transformations",draft:!1,tags:[],version:"current",frontMatter:{title:"Transformations",sidebar_label:"Transformations"},sidebar:"image",previous:{title:"Saving BitmapData to the Camera Roll",permalink:"/docs/image/saving-bitmapdata-to-the-camera-roll"},next:{title:"Capturing a Screenshot",permalink:"/docs/image/capturing-a-screenshot"}},c={},p=[{value:"Rotations",id:"rotations",level:2},{value:"Resizing",id:"resizing",level:2},{value:"Transform and Save",id:"transform-and-save",level:2},{value:"Events and Callbacks",id:"events-and-callbacks",level:2}],u={toc:p};function f(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can apply transformations to ",(0,o.kt)("inlineCode",{parentName:"p"},"BitmapData")," by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"transformAsync")," function to return ",(0,o.kt)("inlineCode",{parentName:"p"},"BitmapData")," or the ",(0,o.kt)("inlineCode",{parentName:"p"},"transformAndSaveAsync")," function to save to a file."),(0,o.kt)("p",null,"Each of these functions take an instance of the ",(0,o.kt)("inlineCode",{parentName:"p"},"ImageTransform")," class which specifies the details of the transformation to apply to the image."),(0,o.kt)("p",null,"The functions will return ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," if the transformation process was started successfully and ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," if there was an error either with the state of the extension or with the conversion of the parameters to native.  "),(0,o.kt)("p",null,"The transformation will occur on a background thread and once complete will dispatch the ",(0,o.kt)("inlineCode",{parentName:"p"},"ImageEvent.TRANSFORM_COMPLETE")," event or ",(0,o.kt)("inlineCode",{parentName:"p"},"ImageEvent.TRANSFORM_ERROR")," if there was an error."),(0,o.kt)("h2",{id:"rotations"},"Rotations"),(0,o.kt)("p",null,"To rotate an image set the ",(0,o.kt)("inlineCode",{parentName:"p"},"rotate")," property of your transform to be the angle of rotation in degrees:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"var transform:ImageTransform = new ImageTransform();\ntransform.rotate = 90;\n\nImage.service.addEventListener( ImageEvent.TRANSFORM_COMPLETE, completeHandler );\nImage.service.addEventListener( ImageEvent.TRANSFORM_ERROR, errorHandler );\n\nImage.service.transformAsync( bitmapData, transform );\n\nfunction completeHandler( event:ImageEvent ):void \n{\n    // event.bitmapData contains the transformation result\n}\n\nfunction errorHandler( event:ImageEvent ):void \n{\n    // An error occurred\n}\n")),(0,o.kt)("p",null,"You can specify any arbitrary angle to rotate the image by. The size of the resulting image will be a bounding box around the rotated image so will most likely be larger than the original image. "),(0,o.kt)("h2",{id:"resizing"},"Resizing"),(0,o.kt)("p",null,"To resize an image there are several options to achieve a different sized image."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"resizeMethod")," specifies the approach the resizing will take to handle dealing with aspect ratios and clipping. It can be one of the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ImageTransform.RESIZE_NONE"),": (Default) no resizing will occur"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ImageTransform.RESIZE_BEST_FIT"),": best fit the image to inside the specified width and height"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ImageTransform.RESIZE_FILL_NO_CROP"),": Uses the width and height as the minimum dimensions and performs no cropping. "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ImageTransform.RESIZE_FILL"),": Fill the specified width and height with the image, cropping if necessary.")),(0,o.kt)("p",null,"Along with this method you specify the ",(0,o.kt)("inlineCode",{parentName:"p"},"width")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"height")," you require. "),(0,o.kt)("p",null,"For example, to get an exact image sized ",(0,o.kt)("inlineCode",{parentName:"p"},"150x150")," we would use the fill method:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"var transform:ImageTransform = new ImageTransform();\ntransform.resizeMethod = ImageTransform.RESIZE_FILL;\ntransform.width = 150;\ntransform.height = 150;\n\nImage.service.transformAsync( bitmapData, transform );\n")),(0,o.kt)("p",null,"See the ",(0,o.kt)("inlineCode",{parentName:"p"},"ImageTransform")," class in asdocs for more on these methods. "),(0,o.kt)("h2",{id:"transform-and-save"},"Transform and Save"),(0,o.kt)("p",null,"In some circumstances you may need to transform an image and save to a file directly, rather than needing the transformed data in your application. Using the ",(0,o.kt)("inlineCode",{parentName:"p"},"transformAndSaveAsync")," function you will save on the time required to create and return the required bitmap data to AIR and the extension instead will save the result directly to a file on the user's device."),(0,o.kt)("p",null,"This function takes the same transformation options as the ",(0,o.kt)("inlineCode",{parentName:"p"},"transformAsync")," function however it additionally takes an output parameter that specifies the location and format of the output file."),(0,o.kt)("p",null,"For example, to generate a ",(0,o.kt)("inlineCode",{parentName:"p"},"150x150")," thumbnail for an image and save to the application storage:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'var transform:ImageTransform = new ImageTransform();\ntransform.resizeMethod = ImageTransform.RESIZE_FILL;\ntransform.width = 150;\ntransform.height = 150;\n\nvar file:File = File.applicationStorageDirectory.resolvePath("images/thumbnail.jpg");\n            \nvar output:ImageOutput = new ImageOutput( file.nativePath );\noutput.format = ImageFormat.JPG;\n\nImage.service.transformAndSaveAsync( transformImage.bitmapData, transform, output );\n')),(0,o.kt)("h2",{id:"events-and-callbacks"},"Events and Callbacks"),(0,o.kt)("p",null,"You can use the events to process the completion of the transformation."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"Image.service.addEventListener( ImageEvent.TRANSFORM_COMPLETE, completeHandler );\nImage.service.addEventListener( ImageEvent.TRANSFORM_ERROR, errorHandler );\n\nfunction completeHandler( event:ImageEvent ):void \n{\n    // event.bitmapData contains the transformation result\n}\n\nfunction errorHandler( event:ImageEvent ):void \n{\n    // An error occurred\n}\n")),(0,o.kt)("p",null,"Alternatively, you can use a callback function as a parameter to the ",(0,o.kt)("inlineCode",{parentName:"p"},"transformAsync")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"transformAndSaveAsync")," functions."),(0,o.kt)("p",null,"The callback for ",(0,o.kt)("inlineCode",{parentName:"p"},"transformAsync")," passes the transformed bitmap data as a parameter to the callback:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"Image.service.transformAsync( bitmapData, transform, callback );\n\nfunction callback( bitmapData:BitmapData ):void \n{\n    // This will be called when the above transform completes\n}\n")),(0,o.kt)("p",null,"The callback for ",(0,o.kt)("inlineCode",{parentName:"p"},"transformAndSaveAsync")," passes the success of the save operation to the callback:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"Image.service.transformAndSaveAsync( bitmapData, transform, output, callback );\n\nfunction callback( success:Boolean ):void \n{\n    // This will be called when the above transform completes\n}\n")))}f.isMDXComponent=!0}}]);
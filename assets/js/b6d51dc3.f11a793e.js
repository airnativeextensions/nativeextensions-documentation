"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[25613],{3905:function(e,n,i){i.d(n,{Zo:function(){return c},kt:function(){return p}});var a=i(67294);function t(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,a)}return i}function o(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function d(e,n){if(null==e)return{};var i,a,t=function(e,n){if(null==e)return{};var i,a,t={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var s=a.createContext({}),l=function(e){var n=a.useContext(s),i=n;return e&&(i="function"==typeof e?e(n):o(o({},n),e)),i},c=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var i=e.components,t=e.mdxType,r=e.originalType,s=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),m=l(i),p=t,h=m["".concat(s,".").concat(p)]||m[p]||u[p]||r;return i?a.createElement(h,o(o({ref:n},c),{},{components:i})):a.createElement(h,o({ref:n},c))}));function p(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=i.length,o=new Array(r);o[0]=m;var d={};for(var s in n)hasOwnProperty.call(n,s)&&(d[s]=n[s]);d.originalType=e,d.mdxType="string"==typeof e?e:t,o[1]=d;for(var l=2;l<r;l++)o[l]=i[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,i)}m.displayName="MDXCreateElement"},85162:function(e,n,i){i.d(n,{Z:function(){return o}});var a=i(67294),t=i(86010),r="tabItem_Ymn6";function o(e){var n=e.children,i=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,t.Z)(r,o),hidden:i},n)}},74866:function(e,n,i){i.d(n,{Z:function(){return S}});var a=i(87462),t=i(67294),r=i(86010),o=i(12466),d=i(16550),s=i(91980),l=i(67392),c=i(50012);function u(e){return function(e){var n,i;return null!=(n=null==(i=t.Children.map(e,(function(e){if(!e||(0,t.isValidElement)(e)&&(n=e.props)&&"object"==typeof n&&"value"in n)return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:i.filter(Boolean))?n:[]}(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}function m(e){var n=e.values,i=e.children;return(0,t.useMemo)((function(){var e=null!=n?n:u(i);return function(e){var n=(0,l.l)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,i])}function p(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function h(e){var n=e.queryString,i=void 0!==n&&n,a=e.groupId,r=(0,d.k6)(),o=function(e){var n=e.queryString,i=void 0!==n&&n,a=e.groupId;if("string"==typeof i)return i;if(!1===i)return null;if(!0===i&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:i,groupId:a});return[(0,s._X)(o),(0,t.useCallback)((function(e){if(o){var n=new URLSearchParams(r.location.search);n.set(o,e),r.replace(Object.assign({},r.location,{search:n.toString()}))}}),[o,r])]}function v(e){var n,i,a,r,o=e.defaultValue,d=e.queryString,s=void 0!==d&&d,l=e.groupId,u=m(e),v=(0,t.useState)((function(){return function(e){var n,i=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(i){if(!p({value:i,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+i+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return i}var t=null!=(n=a.find((function(e){return e.default})))?n:a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:o,tabValues:u})})),f=v[0],g=v[1],A=h({queryString:s,groupId:l}),y=A[0],w=A[1],E=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:l}.groupId),i=(0,c.Nk)(n),a=i[0],r=i[1],[a,(0,t.useCallback)((function(e){n&&r.set(e)}),[n,r])]),S=E[0],I=E[1],b=function(){var e=null!=y?y:S;return p({value:e,tabValues:u})?e:null}();return(0,t.useLayoutEffect)((function(){b&&g(b)}),[b]),{selectedValue:f,selectValue:(0,t.useCallback)((function(e){if(!p({value:e,tabValues:u}))throw new Error("Can't select invalid tab value="+e);g(e),w(e),I(e)}),[w,I,u]),tabValues:u}}var f=i(72389),g="tabList__CuJ",A="tabItem_LNqP";function y(e){var n=e.className,i=e.block,d=e.selectedValue,s=e.selectValue,l=e.tabValues,c=[],u=(0,o.o5)().blockElementScrollPositionUntilNextRender,m=function(e){var n=e.currentTarget,i=c.indexOf(n),a=l[i].value;a!==d&&(u(n),s(a))},p=function(e){var n,i=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":var a,t=c.indexOf(e.currentTarget)+1;i=null!=(a=c[t])?a:c[0];break;case"ArrowLeft":var r,o=c.indexOf(e.currentTarget)-1;i=null!=(r=c[o])?r:c[c.length-1]}null==(n=i)||n.focus()};return t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":i},n)},l.map((function(e){var n=e.value,i=e.label,o=e.attributes;return t.createElement("li",(0,a.Z)({role:"tab",tabIndex:d===n?0:-1,"aria-selected":d===n,key:n,ref:function(e){return c.push(e)},onKeyDown:p,onClick:m},o,{className:(0,r.Z)("tabs__item",A,null==o?void 0:o.className,{"tabs__item--active":d===n})}),null!=i?i:n)})))}function w(e){var n=e.lazy,i=e.children,a=e.selectedValue,r=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){var o=r.find((function(e){return e.props.value===a}));return o?(0,t.cloneElement)(o,{className:"margin-top--md"}):null}return t.createElement("div",{className:"margin-top--md"},r.map((function(e,n){return(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a})})))}function E(e){var n=v(e);return t.createElement("div",{className:(0,r.Z)("tabs-container",g)},t.createElement(y,(0,a.Z)({},e,n)),t.createElement(w,(0,a.Z)({},e,n)))}function S(e){var n=(0,f.Z)();return t.createElement(E,(0,a.Z)({key:String(n)},e))}},32704:function(e,n,i){i.r(n),i.d(n,{assets:function(){return m},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var a=i(87462),t=i(63366),r=(i(67294),i(3905)),o=i(74866),d=i(85162),s=["components"],l={title:"Huawei SDK Setup",sidebar_label:"Huawei"},c=void 0,u={unversionedId:"pushnotifications/onesignal/huawei",id:"pushnotifications/onesignal/huawei",title:"Huawei SDK Setup",description:"If you wish to use Huawei Push services (via Huawei Mobile Services (HMS)) you will need to do some additional changes to your installation.",source:"@site/docs/pushnotifications/onesignal/huawei.mdx",sourceDirName:"pushnotifications/onesignal",slug:"/pushnotifications/onesignal/huawei",permalink:"/docs/pushnotifications/onesignal/huawei",draft:!1,tags:[],version:"current",frontMatter:{title:"Huawei SDK Setup",sidebar_label:"Huawei"},sidebar:"pushnotifications",previous:{title:"Setup",permalink:"/docs/pushnotifications/onesignal/"},next:{title:"Migrating to v11.2",permalink:"/docs/pushnotifications/migrating-to-v11.2"}},m={},p=[{value:"Authorising OneSignal",id:"authorising-onesignal",level:2},{value:"Huawei Configuration File",id:"huawei-configuration-file",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Alongside Firebase",id:"alongside-firebase",level:3},{value:"Manifest Additions",id:"manifest-additions",level:4},{value:"Huawei Only",id:"huawei-only",level:3},{value:"Manifest Additions",id:"manifest-additions-1",level:4},{value:"Initialise HMS",id:"initialise-hms",level:2}],h={toc:p};function v(e){var n=e.components,l=(0,t.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},h,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"If you wish to use Huawei Push services (via Huawei Mobile Services (HMS)) you will need to do some additional changes to your installation. "),(0,r.kt)("p",null,"We will assume you have already setup your OneSignal account and have your App ID. If not see the ",(0,r.kt)("a",{parentName:"p",href:"/docs/pushnotifications/onesignal/"},"setup")," section."),(0,r.kt)("h2",{id:"authorising-onesignal"},"Authorising OneSignal"),(0,r.kt)("p",null,"Follow the instructions ",(0,r.kt)("a",{parentName:"p",href:"https://documentation.onesignal.com/docs/authorize-onesignal-to-send-huawei-push"},"here")," to authorise OneSignal to connect to your Huawei application. "),(0,r.kt)("h2",{id:"huawei-configuration-file"},"Huawei Configuration File"),(0,r.kt)("p",null,"Download the ",(0,r.kt)("inlineCode",{parentName:"p"},"agconnect-services.json")," file:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"From the AppGallery Connect Project List select your app.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Ensure you have added your certificate SHA fingerprint to your app configuration. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'Click on the "agconnect-services.json" button to download this file.'))),(0,r.kt)("p",null,(0,r.kt)("img",{src:i(99764).Z,width:"1262",height:"696"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Place this file at the root of your application and ensure it is packaged.")),(0,r.kt)("h2",{id:"dependencies"},"Dependencies"),(0,r.kt)("p",null,"There are two cases to consider here, "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"using Huawei only with no Firebase dependencies"),(0,r.kt)("li",{parentName:"ul"},"adding HMS alongside the Firebase implementation")),(0,r.kt)("h3",{id:"alongside-firebase"},"Alongside Firebase"),(0,r.kt)("p",null,"This case is useful if you wish to deploy your application to both Huawei devices and devices that have access to Google Play Services. OneSignal will favour Firebase in any situations where both are available."),(0,r.kt)("p",null,"To support this case, it is simply a matter of following the standard installation and adding the HMS dependencies."),(0,r.kt)(o.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,r.kt)(d.Z,{value:"apm",mdxType:"TabItem"},(0,r.kt)("p",null,"Using ",(0,r.kt)("inlineCode",{parentName:"p"},"apm")," this can be done via the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apm install com.huawei.hms.push\n")),(0,r.kt)("p",null,"This extension will install some required asset files to ",(0,r.kt)("inlineCode",{parentName:"p"},"assets/android"),". You must ensure all the files in that directory are packaged with your application at the root level."),(0,r.kt)("p",null,"Next you will need to add the additional OneSignal HMS manifest additions manually here by creating a custom configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apm generate config android\n")),(0,r.kt)("p",null,"Edit the file created at ",(0,r.kt)("inlineCode",{parentName:"p"},"config/android/AndroidManifest.xml")," and ensure it contains the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n<manifest xmlns:android="http://schemas.android.com/apk/res/android" >\n    <uses-sdk android:minSdkVersion="19" android:targetSdkVersion="33"/>\n\n    <application>\n       \n        <service\n            android:name="com.distriqt.extension.pushnotifications.onesignal.OneSignalHMSService"\n            android:exported="false">\n            <intent-filter>\n                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />\n            </intent-filter>\n        </service>\n\n        <activity\n            android:name="com.onesignal.notifications.activities.NotificationOpenedActivityHMS"\n            android:exported="true"\n            android:noHistory="true"\n            android:theme="@android:style/Theme.Translucent.NoTitleBar" >\n            <intent-filter>\n                <action android:name="android.intent.action.VIEW" />\n            </intent-filter>\n        </activity>\n\n    </application>\n\n</manifest>\n')),(0,r.kt)("p",null,"Then regenerate your application descriptor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apm generate app-descriptor\n"))),(0,r.kt)(d.Z,{value:"manual",mdxType:"TabItem"},(0,r.kt)("p",null,"To manually do this you will need to firstly download the following extensions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-HuaweiMobileServices/raw/master/lib/com.huawei.hms.base.ane"},(0,r.kt)("inlineCode",{parentName:"a"},"com.huawei.hms.base"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-HuaweiMobileServices/raw/master/lib/com.huawei.hms.push.ane"},(0,r.kt)("inlineCode",{parentName:"a"},"com.huawei.hms.push")))),(0,r.kt)("p",null,"Download the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-HuaweiMobileServices/tree/master/lib/assets/android"},(0,r.kt)("inlineCode",{parentName:"a"},"assets"))," folder from the repository as well and add all the files contained in their to the root of your application. "),(0,r.kt)("h4",{id:"manifest-additions"},"Manifest Additions"),(0,r.kt)("p",null,"The Huawei extensions require a few additions to the manifest to be able to start certain activities and services.\nYou should add the listing below to your manifest, ensure you merge the ",(0,r.kt)("inlineCode",{parentName:"p"},"application")," node with any existing node in your manifest.\nThe following listing should be added along with the listing used when originally installing OneSignal as these are solely the additions for HMS. "),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Ensure you replace:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"APPLICATION_PACKAGE")," with your AIR application's Java package name, something like ",(0,r.kt)("inlineCode",{parentName:"li"},"air.com.distriqt.test"),". Generally this is your AIR application id prefixed by ",(0,r.kt)("inlineCode",{parentName:"li"},"air.")," unless you have specified no air flair in your build options."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest android:installLocation="auto" >\n  <uses-sdk android:minSdkVersion="21" android:targetSdkVersion="33"/>\n  \x3c!-- \u68c0\u6d4b\u7f51\u7edc\u72b6\u6001 --\x3e\n  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>\n  <queries>\n    <intent>\n      <action android:name="com.huawei.hms.core.aidlservice"/>\n    </intent>\n    <intent>\n      <action android:name="com.huawei.hms.core"/>\n    </intent>\n    <package android:name="com.huawei.works"/>\n  </queries>\n  \x3c!-- HMS-SDK\u5f15\u5bfc\u5347\u7ea7HMS\u529f\u80fd\uff0c\u8bbf\u95eeOTA\u670d\u52a1\u5668\u9700\u8981\u7f51\u7edc\u6743\u9650 --\x3e\n  <uses-permission android:name="android.permission.INTERNET"/>\n  <permission android:name="APPLICATION_PACKAGE.permission.PROCESS_PUSH_MSG" android:protectionLevel="signature"/>\n  \x3c!-- PUSH_PROVIDER and PUSH_WRITE_PROVIDER are both provider registered permissions for the notification switch. --\x3e\n  \x3c!-- The SDK\'s notification bar switch, EMUI 9.x becomes write to the local sp, sharing the file through the provider to the push-rom, which reads the sp file to get the status of the notification bar switch. --\x3e\n  <permission android:name="APPLICATION_PACKAGE.permission.PUSH_PROVIDER" android:protectionLevel="signature"/>\n  <permission android:name="APPLICATION_PACKAGE.permission.PUSH_WRITE_PROVIDER" android:protectionLevel="signature"/>\n  <uses-permission android:name="APPLICATION_PACKAGE.permission.PROCESS_PUSH_MSG"/>\n  <uses-permission android:name="APPLICATION_PACKAGE.permission.PUSH_PROVIDER"/>\n  <application>\n    <meta-data android:name="android.max_aspect" android:value="2.5"/>\n    <meta-data android:name="android.notch_support" android:value="true"/>\n    <provider android:name="com.huawei.agconnect.core.provider.AGConnectInitializeProvider" android:authorities="APPLICATION_PACKAGE.AGCInitializeProvider" android:exported="false"/>\n    <service android:name="com.huawei.agconnect.core.ServiceDiscovery" android:exported="false"/>\n    \x3c!-- \u7528\u4e8e\u5224\u65ad\u662f\u5426\u96c6\u6210\u4e86\u672clib --\x3e\n    <meta-data android:name="availableLoaded" android:value="yes"/>\n    \x3c!-- \u4e3a\u540e\u7eed\u7edf\u8ba1\u7b2c\u4e09\u65b9app\u96c6\u6210\u4e86\u54ea\u4e9bKit\uff0c\u56e0\u6b64\u9700\u8981Kit\u5728\u81ea\u5df1\u7684AndroidManifest.xml\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e1a\u52a1\u6807\u7b7e\u5143\u6570\u636e --\x3e\n    <meta-data android:name="com.huawei.hms.client.service.name:base" android:value="base:6.11.0.301"/>\n    \x3c!-- SDK\u4f9d\u8d56\u7684HMSCore\u7684\u6700\u4f4eapi level\u5143\u6570\u636e --\x3e\n    <meta-data android:name="com.huawei.hms.min_api_level:base:hmscore" android:value="1"/>\n    <activity android:name="com.huawei.hms.activity.BridgeActivity" android:configChanges="orientation|locale|layoutDirection|fontScale|screenSize|smallestScreenSize|screenLayout|uiMode" android:excludeFromRecents="true" android:exported="false" android:hardwareAccelerated="true" android:screenOrientation="behind" android:theme="@style/Base_Translucent">\n      <meta-data android:name="hwc-theme" android:value="androidhwext:style/Theme.Emui.Translucent"/>\n    </activity>\n    <activity android:name="com.huawei.hms.activity.EnableServiceActivity" android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize|screenLayout" android:exported="false"/>\n    <activity android:name="com.huawei.hms.hwid.internal.ui.activity.HwIdSignInHubActivity" android:configChanges="fontScale|uiMode" android:excludeFromRecents="true" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n    <activity android:name="com.huawei.hms.account.internal.ui.activity.AccountSignInHubActivity" android:excludeFromRecents="true" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n    \x3c!-- \u5207\u8bb0\u540c\u6b65\u4fee\u6539 HuaweiIdAuthInternalConstant.HMS_SDK_VERSION --\x3e\n    <meta-data android:name="com.huawei.hms.client.service.name:hwid" android:value="hwid:6.11.0.300"/>\n    <meta-data android:name="com.huawei.hms.min_api_level:hwid:hwid" android:value="1"/>\n    \x3c!-- 5.3.0 \u72ec\u7acb\u6388\u6743\u4f9d\u8d56\u7684api_level\u4e3a11 --\x3e\n    \x3c!-- 5.3.0 setCarrierId\u4f9d\u8d56\u7684api_level\u4e3a13 --\x3e\n    <meta-data android:name="com.huawei.hms.min_api_level:hwid:account" android:value="13"/>\n    <provider android:name="com.huawei.hms.aaid.InitProvider" android:authorities="APPLICATION_PACKAGE.aaidinitprovider" android:exported="false" android:initOrder="500"/>\n    <meta-data android:name="com.huawei.hms.client.service.name:opendevice" android:value="opendevice:6.11.0.300"/>\n    <meta-data android:name="com.huawei.hms.min_api_level:opendevice:push" android:value="1"/>\n    <receiver android:name="com.huawei.hms.support.api.push.PushMsgReceiver" android:directBootAware="true" android:exported="true" android:permission="APPLICATION_PACKAGE.permission.PROCESS_PUSH_MSG">\n      <intent-filter>\n        \x3c!-- Mandatory, be used to receive notification bar message click event. --\x3e\n        <action android:name="com.huawei.intent.action.PUSH_DELAY_NOTIFY"/>\n        \x3c!-- Optional, compatible with old huawei phones. --\x3e\n        <action android:name="com.huawei.intent.action.PUSH"/>\n      </intent-filter>\n    </receiver>\n    <receiver android:name="com.huawei.hms.support.api.push.PushReceiver" android:directBootAware="true" android:exported="true" android:permission="APPLICATION_PACKAGE.permission.PROCESS_PUSH_MSG">\n      <intent-filter>\n        \x3c!-- Mandatory, be used to receive tokens. --\x3e\n        <action android:name="com.huawei.android.push.intent.REGISTRATION"/>\n        \x3c!-- Mandatory, be used to receive messages. --\x3e\n        <action android:name="com.huawei.android.push.intent.RECEIVE"/>\n      </intent-filter>\n    </receiver>\n    \x3c!-- Definition of receiving service for notification bar and pass-through message of non-huawei mobile phone. --\x3e\n    <service android:name="com.huawei.hms.support.api.push.service.HmsMsgService" android:directBootAware="true" android:enabled="true" android:exported="true" android:process=":pushservice">\n      <intent-filter>\n        <action android:name="com.huawei.push.msg.NOTIFY_MSG"/>\n        <action android:name="com.huawei.push.msg.PASSBY_MSG"/>\n      </intent-filter>\n    </service>\n    <provider android:name="com.huawei.hms.support.api.push.PushProvider" android:authorities="APPLICATION_PACKAGE.huawei.push.provider" android:exported="true" android:readPermission="APPLICATION_PACKAGE.permission.PUSH_PROVIDER" android:writePermission="APPLICATION_PACKAGE.permission.PUSH_WRITE_PROVIDER"/>\n    <meta-data android:name="com.huawei.hms.client.service.name:push" android:value="push:6.11.0.300"/>\n    <meta-data android:name="com.huawei.hms.min_api_level:push:push" android:value="1"/>\n    <activity android:name="com.huawei.hms.support.api.push.TransActivity" android:exported="false"/>\n\n\n    <service\n        android:name="com.distriqt.extension.pushnotifications.onesignal.OneSignalHMSService"\n        android:exported="false">\n        <intent-filter>\n            <action android:name="com.huawei.push.action.MESSAGING_EVENT" />\n        </intent-filter>\n    </service>\n\n    <activity\n        android:name="com.onesignal.notifications.activities.NotificationOpenedActivityHMS"\n        android:exported="true"\n        android:noHistory="true"\n        android:theme="@android:style/Theme.Translucent.NoTitleBar" >\n        <intent-filter>\n            <action android:name="android.intent.action.VIEW" />\n        </intent-filter>\n    </activity>\n\n  </application>\n</manifest>\n')))),(0,r.kt)("h3",{id:"huawei-only"},"Huawei Only"),(0,r.kt)("p",null,"If you need to solely use HMS you will need to uninstall the Firebase and Google Play Services dependencies and swap to Huawei Mobile Services. "),(0,r.kt)(o.Z,{groupId:"packagemanager",defaultValue:"apm",values:[{label:"APM",value:"apm"},{label:"Manual",value:"manual"}],mdxType:"Tabs"},(0,r.kt)(d.Z,{value:"apm",mdxType:"TabItem"},(0,r.kt)("p",null,"The simplest way to do this is to remove the ",(0,r.kt)("inlineCode",{parentName:"p"},"com.distriqt.PushNotifications-OneSignal")," package and install the ",(0,r.kt)("inlineCode",{parentName:"p"},"com.distriqt.PushNotifications-OneSignalHMS")," package."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apm uninstall com.distriqt.PushNotifications-OneSignal\napm install com.distriqt.PushNotifications-OneSignalHMS\n")),(0,r.kt)("p",null,"Then regenerate your application descriptor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apm generate app-descriptor\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Ensure that any of the ",(0,r.kt)("inlineCode",{parentName:"p"},"com.google.firebase.*")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"com.distriqt.playservices.*")," extensions were removed from your ",(0,r.kt)("inlineCode",{parentName:"p"},"extension")," list in your application descriptor. "),(0,r.kt)("p",{parentName:"admonition"},"If you have other services relying on playservices or firebase they may still remain and can cause issues with OneSignal."))),(0,r.kt)(d.Z,{value:"manual",mdxType:"TabItem"},(0,r.kt)("p",null,"Firstly remove any of the ",(0,r.kt)("inlineCode",{parentName:"p"},"com.google.firebase.*")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"com.distriqt.playservices.*")," extensions from your application, both the ane files and references in the ",(0,r.kt)("inlineCode",{parentName:"p"},"extension")," list in your application descriptor."),(0,r.kt)("p",null,"Next, add the following HMS extensions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-HuaweiMobileServices/raw/master/lib/com.huawei.hms.base.ane"},(0,r.kt)("inlineCode",{parentName:"a"},"com.huawei.hms.base"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/distriqt/ANE-HuaweiMobileServices/raw/master/lib/com.huawei.hms.push.ane"},(0,r.kt)("inlineCode",{parentName:"a"},"com.huawei.hms.push")))),(0,r.kt)("p",null,"Download the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-HuaweiMobileServices/tree/master/lib/assets/android"},(0,r.kt)("inlineCode",{parentName:"a"},"assets"))," folder from the repository as well and add all the files contained in their to the root of your application. "),(0,r.kt)("h4",{id:"manifest-additions-1"},"Manifest Additions"),(0,r.kt)("p",null,"The Huawei extensions require a few additions to the manifest to be able to start certain activities and services.\nYou should add the listing below to your manifest, ensure you merge the ",(0,r.kt)("inlineCode",{parentName:"p"},"application")," node with any existing node in your manifest.\nThe following listing should replace any additions you made if you originally installed the Firebase implementation of OneSignal. "),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Ensure you replace:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"APPLICATION_PACKAGE")," with your AIR application's Java package name, something like ",(0,r.kt)("inlineCode",{parentName:"li"},"air.com.distriqt.test"),". Generally this is your AIR application id prefixed by ",(0,r.kt)("inlineCode",{parentName:"li"},"air.")," unless you have specified no air flair in your build options."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest android:installLocation="auto" >\n  <uses-sdk android:minSdkVersion="19" android:targetSdkVersion="33"/>\n  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>\n  <permission android:name="APPLICATION_PACKAGE.DYNAMIC_RECEIVER_NOT_EXPORTED_PERMISSION" android:protectionLevel="signature"/>\n  <uses-permission android:name="APPLICATION_PACKAGE.DYNAMIC_RECEIVER_NOT_EXPORTED_PERMISSION"/>\n  <uses-permission android:name="android.permission.WAKE_LOCK"/>\n  <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>\n  <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>\n  <uses-permission android:name="android.permission.INTERNET"/>\n  <queries>\n    <intent>\n      <action android:name="com.huawei.hms.core.aidlservice"/>\n    </intent>\n    <intent>\n      <action android:name="com.huawei.hms.core"/>\n    </intent>\n    <package android:name="com.huawei.works"/>\n  </queries>\n  <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>\n  <uses-permission android:name="com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE"/>\n  <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE"/>\n  <permission android:name="APPLICATION_PACKAGE.permission.C2D_MESSAGE" android:protectionLevel="signature"/>\n  <uses-permission android:name="APPLICATION_PACKAGE.permission.C2D_MESSAGE"/>\n  \x3c!-- BADGE --\x3e\n  <uses-permission android:name="com.sec.android.provider.badge.permission.READ"/>\n  <uses-permission android:name="com.sec.android.provider.badge.permission.WRITE"/>\n  <uses-permission android:name="com.htc.launcher.permission.READ_SETTINGS"/>\n  <uses-permission android:name="com.htc.launcher.permission.UPDATE_SHORTCUT"/>\n  <uses-permission android:name="com.sonyericsson.home.permission.BROADCAST_BADGE"/>\n  <uses-permission android:name="com.sonymobile.home.permission.PROVIDER_INSERT_BADGE"/>\n  <uses-permission android:name="com.anddoes.launcher.permission.UPDATE_COUNT"/>\n  <uses-permission android:name="com.majeur.launcher.permission.UPDATE_BADGE"/>\n  <uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE"/>\n  <uses-permission android:name="com.huawei.android.launcher.permission.READ_SETTINGS"/>\n  <uses-permission android:name="com.huawei.android.launcher.permission.WRITE_SETTINGS"/>\n  <uses-permission android:name="android.permission.READ_APP_BADGE"/>\n  <uses-permission android:name="com.oppo.launcher.permission.READ_SETTINGS"/>\n  <uses-permission android:name="com.oppo.launcher.permission.WRITE_SETTINGS"/>\n  <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_READ"/>\n  <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_WRITE"/>\n  \x3c!--\n Required so the device vibrates on receiving a push notification.\n         Vibration settings of the device still apply.\n    --\x3e\n  <uses-permission android:name="android.permission.VIBRATE"/>\n  \x3c!--\n         At a minimum the location module requires course permission, the app has the option\n         to also include ACCESS_FINE_LOCATION and/or ACCESS_BACKGROUND_LOCATION\n    --\x3e\n  <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>\n  <permission android:name="APPLICATION_PACKAGE.permission.PROCESS_PUSH_MSG" android:protectionLevel="signature"/>\n  \x3c!-- PUSH_PROVIDER and PUSH_WRITE_PROVIDER are both provider registered permissions for the notification switch. --\x3e\n  \x3c!-- The SDK\'s notification bar switch, EMUI 9.x becomes write to the local sp, sharing the file through the provider to the push-rom, which reads the sp file to get the status of the notification bar switch. --\x3e\n  <permission android:name="APPLICATION_PACKAGE.permission.PUSH_PROVIDER" android:protectionLevel="signature"/>\n  <permission android:name="APPLICATION_PACKAGE.permission.PUSH_WRITE_PROVIDER" android:protectionLevel="signature"/>\n  <uses-permission android:name="APPLICATION_PACKAGE.permission.PROCESS_PUSH_MSG"/>\n  <uses-permission android:name="APPLICATION_PACKAGE.permission.PUSH_PROVIDER"/>\n  <application android:appComponentFactory="androidx.core.app.CoreComponentFactory">\n    <service android:name="androidx.room.MultiInstanceInvalidationService" android:directBootAware="true" android:exported="false"/>\n    <provider android:name="androidx.startup.InitializationProvider" android:authorities="APPLICATION_PACKAGE.androidx-startup" android:exported="false">\n      <meta-data android:name="androidx.lifecycle.ProcessLifecycleInitializer" android:value="androidx.startup"/>\n      <meta-data android:name="androidx.emoji2.text.EmojiCompatInitializer" android:value="androidx.startup"/>\n      <meta-data android:name="androidx.work.WorkManagerInitializer" android:value="androidx.startup"/>\n    </provider>\n    <service android:name="androidx.work.impl.background.systemalarm.SystemAlarmService" android:directBootAware="false" android:enabled="@bool/enable_system_alarm_service_default" android:exported="false"/>\n    <service android:name="androidx.work.impl.background.systemjob.SystemJobService" android:directBootAware="false" android:enabled="@bool/enable_system_job_service_default" android:exported="true" android:permission="android.permission.BIND_JOB_SERVICE"/>\n    <service android:name="androidx.work.impl.foreground.SystemForegroundService" android:directBootAware="false" android:enabled="@bool/enable_system_foreground_service_default" android:exported="false"/>\n    <receiver android:name="androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver" android:directBootAware="false" android:enabled="true" android:exported="false"/>\n    <receiver android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy" android:directBootAware="false" android:enabled="false" android:exported="false">\n      <intent-filter>\n        <action android:name="android.intent.action.ACTION_POWER_CONNECTED"/>\n        <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED"/>\n      </intent-filter>\n    </receiver>\n    <receiver android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy" android:directBootAware="false" android:enabled="false" android:exported="false">\n      <intent-filter>\n        <action android:name="android.intent.action.BATTERY_OKAY"/>\n        <action android:name="android.intent.action.BATTERY_LOW"/>\n      </intent-filter>\n    </receiver>\n    <receiver android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy" android:directBootAware="false" android:enabled="false" android:exported="false">\n      <intent-filter>\n        <action android:name="android.intent.action.DEVICE_STORAGE_LOW"/>\n        <action android:name="android.intent.action.DEVICE_STORAGE_OK"/>\n      </intent-filter>\n    </receiver>\n    <receiver android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy" android:directBootAware="false" android:enabled="false" android:exported="false">\n      <intent-filter>\n        <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>\n      </intent-filter>\n    </receiver>\n    <receiver android:name="androidx.work.impl.background.systemalarm.RescheduleReceiver" android:directBootAware="false" android:enabled="false" android:exported="false">\n      <intent-filter>\n        <action android:name="android.intent.action.BOOT_COMPLETED"/>\n        <action android:name="android.intent.action.TIME_SET"/>\n        <action android:name="android.intent.action.TIMEZONE_CHANGED"/>\n      </intent-filter>\n    </receiver>\n    <receiver android:name="androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver" android:directBootAware="false" android:enabled="@bool/enable_system_alarm_service_default" android:exported="false">\n      <intent-filter>\n        <action android:name="androidx.work.impl.background.systemalarm.UpdateProxies"/>\n      </intent-filter>\n    </receiver>\n    <receiver android:name="androidx.work.impl.diagnostics.DiagnosticsReceiver" android:directBootAware="false" android:enabled="true" android:exported="true" android:permission="android.permission.DUMP">\n      <intent-filter>\n        <action android:name="androidx.work.diagnostics.REQUEST_DIAGNOSTICS"/>\n      </intent-filter>\n    </receiver>\n    <service android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService" android:exported="false" android:permission="android.permission.BIND_JOB_SERVICE"/>\n    <receiver android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver" android:exported="false"/>\n    <service android:name="com.google.android.datatransport.runtime.backends.TransportBackendDiscovery" android:exported="false">\n      <meta-data android:name="backend:com.google.android.datatransport.cct.CctBackendFactory" android:value="cct"/>\n    </service>\n    <provider android:name="com.huawei.agconnect.core.provider.AGConnectInitializeProvider" android:authorities="APPLICATION_PACKAGE.AGCInitializeProvider" android:exported="false"/>\n    <service android:name="com.huawei.agconnect.core.ServiceDiscovery" android:exported="false"/>\n    \x3c!-- \u7528\u4e8e\u5224\u65ad\u662f\u5426\u96c6\u6210\u4e86\u672clib --\x3e\n    <meta-data android:name="availableLoaded" android:value="yes"/>\n    \x3c!-- \u4e3a\u540e\u7eed\u7edf\u8ba1\u7b2c\u4e09\u65b9app\u96c6\u6210\u4e86\u54ea\u4e9bKit\uff0c\u56e0\u6b64\u9700\u8981Kit\u5728\u81ea\u5df1\u7684AndroidManifest.xml\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e1a\u52a1\u6807\u7b7e\u5143\u6570\u636e --\x3e\n    <meta-data android:name="com.huawei.hms.client.service.name:base" android:value="base:6.11.0.301"/>\n    \x3c!-- SDK\u4f9d\u8d56\u7684HMSCore\u7684\u6700\u4f4eapi level\u5143\u6570\u636e --\x3e\n    <meta-data android:name="com.huawei.hms.min_api_level:base:hmscore" android:value="1"/>\n    <activity android:name="com.huawei.hms.activity.BridgeActivity" android:configChanges="orientation|locale|layoutDirection|fontScale|screenSize|smallestScreenSize|screenLayout|uiMode" android:excludeFromRecents="true" android:exported="false" android:hardwareAccelerated="true" android:screenOrientation="behind" android:theme="@style/Base_Translucent">\n      <meta-data android:name="hwc-theme" android:value="androidhwext:style/Theme.Emui.Translucent"/>\n    </activity>\n    <activity android:name="com.huawei.hms.activity.EnableServiceActivity" android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize|screenLayout" android:exported="false"/>\n    <activity android:name="com.huawei.hms.hwid.internal.ui.activity.HwIdSignInHubActivity" android:configChanges="fontScale|uiMode" android:excludeFromRecents="true" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n    <activity android:name="com.huawei.hms.account.internal.ui.activity.AccountSignInHubActivity" android:excludeFromRecents="true" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n    \x3c!-- \u5207\u8bb0\u540c\u6b65\u4fee\u6539 HuaweiIdAuthInternalConstant.HMS_SDK_VERSION --\x3e\n    <meta-data android:name="com.huawei.hms.client.service.name:hwid" android:value="hwid:6.11.0.300"/>\n    <meta-data android:name="com.huawei.hms.min_api_level:hwid:hwid" android:value="1"/>\n    \x3c!-- 5.3.0 \u72ec\u7acb\u6388\u6743\u4f9d\u8d56\u7684api_level\u4e3a11 --\x3e\n    \x3c!-- 5.3.0 setCarrierId\u4f9d\u8d56\u7684api_level\u4e3a13 --\x3e\n    <meta-data android:name="com.huawei.hms.min_api_level:hwid:account" android:value="13"/>\n    \x3c!-- NOTIFICATIONS --\x3e\n    <receiver android:name="com.distriqt.extension.pushnotifications.notifications.receivers.NotificationReceiver" android:exported="false">\n      <intent-filter>\n        <action android:name="android.intent.action.BOOT_COMPLETED"/>\n        <action android:name="android.intent.action.QUICKBOOT_POWERON"/>\n      </intent-filter>\n      <intent-filter>\n        <action android:name="APPLICATION_PACKAGE.NOTIFICATION_DELETED"/>\n        <action android:name="APPLICATION_PACKAGE.NOTIFICATION_ACTION"/>\n        <data android:scheme="dtpn"/>\n      </intent-filter>\n    </receiver>\n    <activity android:name="com.distriqt.extension.pushnotifications.notifications.NotificationActivity" android:exported="false">\n      <intent-filter>\n        <action android:name="APPLICATION_PACKAGE.NOTIFICATION_SELECTED"/>\n        <action android:name="APPLICATION_PACKAGE.NOTIFICATION_ACTION"/>\n        <data android:scheme="dtpn"/>\n      </intent-filter>\n    </activity>\n    <provider android:name="com.distriqt.extension.pushnotifications.content.FileProvider" android:authorities="APPLICATION_PACKAGE.pushnotificationsfileprovider" android:exported="false" android:grantUriPermissions="true">\n      <meta-data android:name="android.support.FILE_PROVIDER_PATHS" android:resource="@xml/distriqt_pushnotifications_paths"/>\n    </provider>\n    \x3c!-- ONE SIGNAL --\x3e\n    <meta-data android:name="com.onesignal.NotificationServiceExtension" android:value="com.distriqt.extension.pushnotifications.onesignal.NotificationServiceExtension"/>\n    <service android:name="com.distriqt.extension.pushnotifications.onesignal.OneSignalHMSService" android:exported="false">\n      <intent-filter>\n        <action android:name="com.huawei.push.action.MESSAGING_EVENT"/>\n      </intent-filter>\n    </service>\n    <receiver android:name="com.onesignal.notifications.receivers.FCMBroadcastReceiver" android:exported="true" android:permission="com.google.android.c2dm.permission.SEND">\n      \x3c!-- High priority so OneSignal payloads can be filtered from other FCM receivers --\x3e\n      <intent-filter android:priority="999">\n        <action android:name="com.google.android.c2dm.intent.RECEIVE"/>\n        <category android:name="APPLICATION_PACKAGE"/>\n      </intent-filter>\n    </receiver>\n    <activity android:name="com.onesignal.notifications.activities.NotificationOpenedActivityHMS" android:exported="true" android:noHistory="true" android:theme="@android:style/Theme.Translucent.NoTitleBar">\n      <intent-filter>\n        <action android:name="android.intent.action.VIEW"/>\n      </intent-filter>\n    </activity>\n    <receiver android:name="com.onesignal.notifications.receivers.NotificationDismissReceiver" android:exported="true"/>\n    <receiver android:name="com.onesignal.notifications.receivers.BootUpReceiver" android:exported="true">\n      <intent-filter>\n        <action android:name="android.intent.action.BOOT_COMPLETED"/>\n        <action android:name="android.intent.action.QUICKBOOT_POWERON"/>\n      </intent-filter>\n    </receiver>\n    <receiver android:name="com.onesignal.notifications.receivers.UpgradeReceiver" android:exported="true">\n      <intent-filter>\n        <action android:name="android.intent.action.MY_PACKAGE_REPLACED"/>\n      </intent-filter>\n    </receiver>\n    <activity android:name="com.onesignal.notifications.activities.NotificationOpenedActivity" android:excludeFromRecents="true" android:exported="true" android:noHistory="true" android:taskAffinity="" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n    <activity android:name="com.onesignal.notifications.activities.NotificationOpenedActivityAndroid22AndOlder" android:excludeFromRecents="true" android:exported="true" android:noHistory="true" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n    <service android:name="com.onesignal.core.services.SyncService" android:exported="false" android:stopWithTask="true"/>\n    <service android:name="com.onesignal.core.services.SyncJobService" android:exported="false" android:permission="android.permission.BIND_JOB_SERVICE"/>\n    <activity android:name="com.onesignal.core.activities.PermissionsActivity" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n    <activity android:name="com.distriqt.core.auth.AuthorisationActivity" android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>\n    <provider android:name="com.huawei.hms.aaid.InitProvider" android:authorities="APPLICATION_PACKAGE.aaidinitprovider" android:exported="false" android:initOrder="500"/>\n    <meta-data android:name="com.huawei.hms.client.service.name:opendevice" android:value="opendevice:6.11.0.300"/>\n    <meta-data android:name="com.huawei.hms.min_api_level:opendevice:push" android:value="1"/>\n    <receiver android:name="com.huawei.hms.support.api.push.PushMsgReceiver" android:directBootAware="true" android:exported="true" android:permission="APPLICATION_PACKAGE.permission.PROCESS_PUSH_MSG">\n      <intent-filter>\n        \x3c!-- Mandatory, be used to receive notification bar message click event. --\x3e\n        <action android:name="com.huawei.intent.action.PUSH_DELAY_NOTIFY"/>\n        \x3c!-- Optional, compatible with old huawei phones. --\x3e\n        <action android:name="com.huawei.intent.action.PUSH"/>\n      </intent-filter>\n    </receiver>\n    <receiver android:name="com.huawei.hms.support.api.push.PushReceiver" android:directBootAware="true" android:exported="true" android:permission="APPLICATION_PACKAGE.permission.PROCESS_PUSH_MSG">\n      <intent-filter>\n        \x3c!-- Mandatory, be used to receive tokens. --\x3e\n        <action android:name="com.huawei.android.push.intent.REGISTRATION"/>\n        \x3c!-- Mandatory, be used to receive messages. --\x3e\n        <action android:name="com.huawei.android.push.intent.RECEIVE"/>\n      </intent-filter>\n    </receiver>\n    \x3c!-- Definition of receiving service for notification bar and pass-through message of non-huawei mobile phone. --\x3e\n    <service android:name="com.huawei.hms.support.api.push.service.HmsMsgService" android:directBootAware="true" android:enabled="true" android:exported="true" android:process=":pushservice">\n      <intent-filter>\n        <action android:name="com.huawei.push.msg.NOTIFY_MSG"/>\n        <action android:name="com.huawei.push.msg.PASSBY_MSG"/>\n      </intent-filter>\n    </service>\n    <provider android:name="com.huawei.hms.support.api.push.PushProvider" android:authorities="APPLICATION_PACKAGE.huawei.push.provider" android:exported="true" android:readPermission="APPLICATION_PACKAGE.permission.PUSH_PROVIDER" android:writePermission="APPLICATION_PACKAGE.permission.PUSH_WRITE_PROVIDER"/>\n    <meta-data android:name="com.huawei.hms.client.service.name:push" android:value="push:6.11.0.300"/>\n    <meta-data android:name="com.huawei.hms.min_api_level:push:push" android:value="1"/>\n    <activity android:name="com.huawei.hms.support.api.push.TransActivity" android:exported="false"/>\n  </application>\n</manifest>\n')))),(0,r.kt)("h2",{id:"initialise-hms"},"Initialise HMS"),(0,r.kt)("p",null,"There is one small code addition required, which is simply to initialise HMS to ensure the configuration is read from your agconnect services json file.\nWe suggest doing this before initilaising the Push Notifications extension and setting up your service."),(0,r.kt)("p",null,"Firstly add the import:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"import com.distriqt.extension.hms.base.Base;\n")),(0,r.kt)("p",null,"Then call ",(0,r.kt)("inlineCode",{parentName:"p"},"initialise()"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var success:Boolean = Base.instance.initialise();\n")),(0,r.kt)("p",null,"This will return ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if the json file was found and loaded correctly."))}v.isMDXComponent=!0},99764:function(e,n,i){n.Z=i.p+"assets/images/onesignal_hms_agconnect-services-2cb45469a6ad608f81d0b184e1b1bd7c.png"}}]);
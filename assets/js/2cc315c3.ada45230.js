"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[2309],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,f=p["".concat(s,".").concat(d)]||p[d]||h[d]||o;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},90269:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={title:"Adapter State",sidebar_label:"Adapter State"},l=void 0,i={unversionedId:"bluetoothle/adapter-state",id:"bluetoothle/adapter-state",title:"Adapter State",description:"Checking the adapter state",source:"@site/docs/bluetoothle/adapter-state.md",sourceDirName:"bluetoothle",slug:"/bluetoothle/adapter-state",permalink:"/docs/bluetoothle/adapter-state",draft:!1,tags:[],version:"current",frontMatter:{title:"Adapter State",sidebar_label:"Adapter State"},sidebar:"bluetoothle",previous:{title:"Request Authorisation",permalink:"/docs/bluetoothle/request-authorisation"},next:{title:"Centrals and Peripherals",permalink:"/docs/bluetoothle/centrals-and-peripherals"}},s={},c=[{value:"Checking the adapter state",id:"checking-the-adapter-state",level:2}],u={toc:c},p="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"checking-the-adapter-state"},"Checking the adapter state"),(0,r.kt)("p",null,"The next step is to check the state of the adapter, i.e. check whether the Bluetooth\nadapter is turned on and whether the user has granted your application permission.\nYou must also take into account that the user may turn off Bluetooth at any time so\nyou should listen for the ",(0,r.kt)("inlineCode",{parentName:"p"},"STATE_CHANGED")," event and react accordingly. Any scanning will\nbe stopped and you'll have to restart this once the adapter state changes again."),(0,r.kt)("p",null,"The values of the state property are defined in the ",(0,r.kt)("inlineCode",{parentName:"p"},"BluetoothLEState")," class."),(0,r.kt)("p",null,"On iOS we cannot turn the adapter through code, instead you have to prompt the user,\nrequesting they turn on Bluetooth."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'BluetoothLE.service.addEventListener( BluetoothLEEvent.STATE_CHANGED, stateChangedHandler );\n\nswitch (BluetoothLE.service.state)\n{\n    case BluetoothLEState.STATE_ON: \n        // We can use the Bluetooth LE functions\n        break;\n        \n    case BluetoothLEState.STATE_OFF:\n    case BluetoothLEState.STATE_RESETTING:  \n    case BluetoothLEState.STATE_UNAUTHORISED:   \n    case BluetoothLEState.STATE_UNSUPPORTED:    \n    case BluetoothLEState.STATE_UNKNOWN:\n        // All of these indicate the Bluetooth LE is not available\n}\n\n\nfunction stateChangedHandler( event:BluetoothLEEvent ):void\n{\n    trace( "stateChangedHandler(): "+BluetoothLE.service.state );\n}\n')))}h.isMDXComponent=!0}}]);
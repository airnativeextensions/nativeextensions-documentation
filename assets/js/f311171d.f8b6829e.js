"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[40951],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,g=c["".concat(l,".").concat(m)]||c[m]||p[m]||r;return n?i.createElement(g,a(a({ref:t},u),{},{components:n})):i.createElement(g,a({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,a[1]=s;for(var d=2;d<r;d++)a[d]=n[d];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},15918:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=n(87462),o=(n(67294),n(3905));const r={title:"Dialog Views and Builders",sidebar_label:"Dialog Views and Builders"},a=void 0,s={unversionedId:"dialog/dialog-views-and-builders",id:"dialog/dialog-views-and-builders",title:"Dialog Views and Builders",description:"Lifetime",source:"@site/docs/dialog/dialog-views-and-builders.md",sourceDirName:"dialog",slug:"/dialog/dialog-views-and-builders",permalink:"/docs/dialog/dialog-views-and-builders",draft:!1,tags:[],version:"current",frontMatter:{title:"Dialog Views and Builders",sidebar_label:"Dialog Views and Builders"},sidebar:"dialog",previous:{title:"Add the Extension",permalink:"/docs/dialog/add-the-extension"},next:{title:"Toast",permalink:"/docs/dialog/toast"}},l={},d=[{value:"Lifetime",id:"lifetime",level:2}],u={toc:d},c="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"lifetime"},"Lifetime"),(0,o.kt)("p",null,"The DialogView instances created using the builders are designed to be reused and as such when you\ncall ",(0,o.kt)("inlineCode",{parentName:"p"},"create")," resources are allocated to display the dialog view. Once you have finished using the\ndialog you should call ",(0,o.kt)("inlineCode",{parentName:"p"},"dispose")," on the dialog to remove any allocated resources for the dialog."),(0,o.kt)("p",null,"There are two main ways to handle this process. The one demonstrated in most of the examples here\nshows calling ",(0,o.kt)("inlineCode",{parentName:"p"},"dispose")," when we have finished using the dialog ",(0,o.kt)("strong",{parentName:"p"},"i.e. in the closed event"),". "),(0,o.kt)("p",null,"Using this method you could hold onto the ",(0,o.kt)("inlineCode",{parentName:"p"},"DialogView")," instance and call ",(0,o.kt)("inlineCode",{parentName:"p"},"show")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"dismiss")," as\nyou require until you have finished using the dialog."),(0,o.kt)("p",null,"The second method is designed for a single use situation. In this method the resources are disposed\nas soon as the dialog is dismissed. To use this method you must pass ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," to the constructor of\nyour dialog builder to specify the dialog should be disposed automatically when closed."),(0,o.kt)("p",null,"Dispose on close can be used to display a simple Alert without having to respond to the close event\nand dispose the resources yourself. The following example demonstrates this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'Dialog.service.create( \n        new AlertBuilder( true )\n            .setTitle( "Alert" )\n            .setMessage( "Test Message" )\n            .addOption( "OK" )\n            .build()\n        ).show();\n')))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[23486],{3905:function(e,n,i){i.d(n,{Zo:function(){return v},kt:function(){return m}});var t=i(67294);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function s(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function a(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?s(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function c(e,n){if(null==e)return{};var i,t,r=function(e,n){if(null==e)return{};var i,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)i=s[t],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)i=s[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var o=t.createContext({}),l=function(e){var n=t.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):a(a({},n),e)),i},v=function(e){var n=l(e.components);return t.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var i=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,v=c(e,["components","mdxType","originalType","parentName"]),p=l(i),m=r,f=p["".concat(o,".").concat(m)]||p[m]||u[m]||s;return i?t.createElement(f,a(a({ref:n},v),{},{components:i})):t.createElement(f,a({ref:n},v))}));function m(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=i.length,a=new Array(s);a[0]=p;var c={};for(var o in n)hasOwnProperty.call(n,o)&&(c[o]=n[o]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<s;l++)a[l]=i[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,i)}p.displayName="MDXCreateElement"},28103:function(e,n,i){i.r(n),i.d(n,{assets:function(){return v},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var t=i(87462),r=i(63366),s=(i(67294),i(3905)),a=["components"],c={title:"Initialise the Service",sidebar_label:"Initialise the Service"},o=void 0,l={unversionedId:"gameservices/initialise-the-service",id:"gameservices/initialise-the-service",title:"Initialise the Service",description:"This step initialises the platform using your game service settings. Initialising the service performs serveral things, notably:",source:"@site/docs/gameservices/initialise-the-service.md",sourceDirName:"gameservices",slug:"/gameservices/initialise-the-service",permalink:"/docs/gameservices/initialise-the-service",draft:!1,tags:[],version:"current",frontMatter:{title:"Initialise the Service",sidebar_label:"Initialise the Service"},sidebar:"gameservices",previous:{title:"Troubleshooting",permalink:"/docs/gameservices/service/huawei/troubleshooting"},next:{title:"Sign In",permalink:"/docs/gameservices/sign-in"}},v={},u=[],p={toc:u};function m(e){var n=e.components,i=(0,r.Z)(e,a);return(0,s.kt)("wrapper",(0,t.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This step initialises the platform using your game service settings. Initialising the service performs serveral things, notably:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"configures the extension to use the requested service;"),(0,s.kt)("li",{parentName:"ul"},"initialises any required configuration and connections to the service; ")),(0,s.kt)("p",null,"You perform this initialisation by firstly constructing an instance of the ",(0,s.kt)("inlineCode",{parentName:"p"},"Service")," class, setting the required service type and\nthen passing this to the ",(0,s.kt)("inlineCode",{parentName:"p"},"initialiseService()")," method."),(0,s.kt)("p",null,"This will then dispatch either:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"GameServicesEvent.INITIALISED"),": when the service is initialised successfully and game services are available;"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"GameServicesEvent.INITIALISE_ERROR"),": when the service failed to initialise, check the error and message for help on resolving the issue;")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},"var service:Service;\n\n\n// CHANGE THIS TO INITIALISE YOUR REQUIRED SERVICE(S)\n\nif (GameServices.service.isServiceSupported( Service.HUAWEI_GAME_SERVICE ))\n{\n    service = new Service( Service.HUAWEI_GAME_SERVICE );\n}\n\nelse if (GameServices.service.isServiceSupported( Service.GOOGLE_PLAY_GAME_SERVICES ))\n{\n    service = new Service( Service.GOOGLE_PLAY_GAME_SERVICES );\n}\n\nelse if (GameServices.service.isServiceSupported( Service.IOS_GAME_CENTER ))\n{\n    service = new Service( Service.IOS_GAME_CENTER );\n}\n\n\nGameServices.service.addEventListener( GameServicesEvent.INITIALISED, initialisedHandler ); \nGameServices.service.addEventListener( GameServicesEvent.INITIALISE_ERROR, errorHandler );  \n\nGameServices.service.initialiseService( service );\n\n\n\nfunction initialisedHandler( event:GameServicesEvent ):void\n{\n    // The platform has been initialised ready for sign in functions\n}\n\nfunction gameServices_initialiseErrorHandler( event:GameServicesEvent ):void\n{\n    // An error occurred, try initialising the service again later \n    // Check the error code for developer errors and potentially network issues\n}\n")))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[27329],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),d=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=d(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=d(r),f=o,m=p["".concat(u,".").concat(f)]||p[f]||s[f]||i;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var d=2;d<i;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},62291:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return d},default:function(){return s}});var n=r(87462),o=r(63366),i=(r(67294),r(3905)),a={title:"AudioRecorder",hide_title:!0,slug:"/audiorecorder"},c=void 0,u={unversionedId:"audiorecorder/index",id:"audiorecorder/index",isDocsHomePage:!1,title:"AudioRecorder",description:"AudioRecorder is an AIR Native Extension to record audio from the user's microphone to a file.",source:"@site/docs/audiorecorder/index.md",sourceDirName:"audiorecorder",slug:"/audiorecorder",permalink:"/docs/audiorecorder",tags:[],version:"current",frontMatter:{title:"AudioRecorder",hide_title:!0,slug:"/audiorecorder"},sidebar:"audiorecorder",next:{title:"Add the Extension",permalink:"/docs/audiorecorder/add-the-extension"}},d=[{value:"Features",id:"features",children:[]},{value:"Documentation",id:"documentation",children:[]},{value:"License",id:"license",children:[]}],l={toc:d};function s(e){var t=e.components,a=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{src:r(48401).Z})),(0,i.kt)("h1",{id:"audio-recorder"},"Audio Recorder"),(0,i.kt)("p",null,"AudioRecorder is an AIR Native Extension to record audio from the user's microphone to a file."),(0,i.kt)("p",null,"The simple API allows you to quickly integrate audio recording in your AIR application in just a few lines of code."),(0,i.kt)("h3",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Record from the device microphone to a native format"),(0,i.kt)("li",{parentName:"ul"},"Start, progress and end events"),(0,i.kt)("li",{parentName:"ul"},"Single API interface - your code works across supported platforms with no modifications"),(0,i.kt)("li",{parentName:"ul"},"Sample project code and ASDocs reference")),(0,i.kt)("h2",{id:"documentation"},"Documentation"),(0,i.kt)("p",null,"Latest documentation can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-AudioRecorder/wiki"},"wiki")),(0,i.kt)("p",null,"Quick Example: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var file:File = File.applicationStorageDirectory.resolvePath( "recording.m4a" );\n\nvar options:AudioRecorderOptions = new AudioRecorderOptions();\noptions.filename = file.nativePath;\noptions.audioEncoding = AudioEncoder.AAC;\n\nAudioRecorder.service.start( options );\n')),(0,i.kt)("p",null,"More information here: "),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://airnativeextensions.com/extension/com.distriqt.AudioRecorder"},"com.distriqt.AudioRecorder")),(0,i.kt)("h2",{id:"license"},"License"),(0,i.kt)("p",null,"You can purchase a license for using this extension:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://airnativeextensions.com/"},"airnativeextensions.com")),(0,i.kt)("p",null,"distriqt retains all copyright."),(0,i.kt)("p",null,(0,i.kt)("img",{src:r(65668).Z})))}s.isMDXComponent=!0},48401:function(e,t,r){t.Z=r.p+"assets/images/hero-c6b99d983530d2d908f444cacab2135a.png"},65668:function(e,t,r){t.Z=r.p+"assets/images/promo-ed98dce5c90471a7daf3188d330e862f.png"}}]);
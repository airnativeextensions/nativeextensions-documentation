(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{279:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return i})),t.d(a,"metadata",(function(){return l})),t.d(a,"rightToc",(function(){return c})),t.d(a,"default",(function(){return s}));var n=t(2),r=t(6),o=(t(0),t(884)),i={title:"Storage - Upload Files",sidebar_label:"Upload Files"},l={unversionedId:"firebase/storage/upload-files",id:"firebase/storage/upload-files",isDocsHomePage:!1,title:"Storage - Upload Files",description:"Upload Files",source:"@site/docs/firebase/storage/upload-files.md",slug:"/firebase/storage/upload-files",permalink:"/docs/firebase/storage/upload-files",version:"current",sidebar_label:"Upload Files",sidebar:"firebase",previous:{title:"Storage - References",permalink:"/docs/firebase/storage/references"},next:{title:"Storage - Download Files",permalink:"/docs/firebase/storage/download-files"}},c=[{value:"Upload Files",id:"upload-files",children:[]},{value:"Upload from data in memory",id:"upload-from-data-in-memory",children:[]},{value:"Upload from a local file",id:"upload-from-a-local-file",children:[]},{value:"Add File Metadata",id:"add-file-metadata",children:[]},{value:"Manage Uploads",id:"manage-uploads",children:[]},{value:"Monitor Upload Progress",id:"monitor-upload-progress",children:[]}],p={rightToc:c};function s(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"upload-files"},"Upload Files"),Object(o.b)("p",null,"To upload a file to Firebase Storage, you first create a reference to the full path of the file, including the file name."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),'var reference:StorageReference = FirebaseStorage.service.getInstance().child( "images/upload.png" );\n')),Object(o.b)("p",null,"Once you've created an appropriate reference, you then call the following to upload to Firebase Storage:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"putBytes()"),": Upload from data in memory"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"putFile()"),": Upload a file on the file system")),Object(o.b)("h2",{id:"upload-from-data-in-memory"},"Upload from data in memory"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"putBytes()")," method is the simplest way to upload a file to Firebase Storage.\n",Object(o.b)("inlineCode",{parentName:"p"},"putBytes()")," takes a ",Object(o.b)("inlineCode",{parentName:"p"},"ByteArray")," and returns an ",Object(o.b)("inlineCode",{parentName:"p"},"UploadTask")," that you can use to\nmanage and monitor the status of the upload."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),"// Data from some source, eg encoding bitmap data to jpg\nvar bytes:ByteArray = ...; \n\nvar task:UploadTask = reference.putBytes( bytes );\n")),Object(o.b)("p",null,"Because ",Object(o.b)("inlineCode",{parentName:"p"},"putBytes()")," accepts a ",Object(o.b)("inlineCode",{parentName:"p"},"ByteArray"),", it requires your app to hold the entire\ncontents of a file in memory at once. "),Object(o.b)("h2",{id:"upload-from-a-local-file"},"Upload from a local file"),Object(o.b)("p",null,"You can upload local files on the device, such as photos and videos from the camera,\nwith the ",Object(o.b)("inlineCode",{parentName:"p"},"putFile()")," method. ",Object(o.b)("inlineCode",{parentName:"p"},"putFile()")," takes a File url and returns an ",Object(o.b)("inlineCode",{parentName:"p"},"UploadTask"),"\nwhich you can use to manage and monitor the status of the upload."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),'var file:File = File.applicationStorageDirectory.resolvePath( "plane.png" );\n\nvar task:UploadTask = reference.putFile( file );\n')),Object(o.b)("h2",{id:"add-file-metadata"},"Add File Metadata"),Object(o.b)("p",null,"You can also include metadata when you upload files. This metadata contains\ntypical file metadata properties such as ",Object(o.b)("inlineCode",{parentName:"p"},"name"),", ",Object(o.b)("inlineCode",{parentName:"p"},"size"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"contentType"),"\n(commonly referred to as MIME type). The ",Object(o.b)("inlineCode",{parentName:"p"},"putFile()")," method automatically\ninfers the MIME type from the File extension, but you can override the\nauto-detected type by specifying ",Object(o.b)("inlineCode",{parentName:"p"},"contentType")," in the metadata. If you do\nnot provide a ",Object(o.b)("inlineCode",{parentName:"p"},"contentType")," and Firebase Storage cannot infer a default from\nthe file extension, Firebase Storage uses ",Object(o.b)("inlineCode",{parentName:"p"},"application/octet-stream"),". "),Object(o.b)("p",null,"See the ","[File Metadata|Storage - File Metadata]"," section for more information about file metadata."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),'var reference:StorageReference = FirebaseStorage.service.getReference().child( "images/test" );\n\nvar metadata:StorageMetadata = new StorageMetadata();\nmetadata.contentType = "image/jpg";\n\nvar task:UploadTask = reference.putFile( file, metadata );\n')),Object(o.b)("h2",{id:"manage-uploads"},"Manage Uploads"),Object(o.b)("p",null,"In addition to starting uploads, you can pause, resume, and cancel uploads\nusing the ",Object(o.b)("inlineCode",{parentName:"p"},"pause()"),", ",Object(o.b)("inlineCode",{parentName:"p"},"resume()"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"cancel()")," methods. Pause and resume\nevents raise pause and progress state changes respectively. Canceling an\nupload causes the upload to fail with an error indicating that the upload\nwas canceled."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),"// Pause the upload\ntask.pause();\n\n// Resume the upload\ntask.resume();\n\n// Cancel the upload\ntask.cancel();\n")),Object(o.b)("h2",{id:"monitor-upload-progress"},"Monitor Upload Progress"),Object(o.b)("p",null,"An upload task dispatches ",Object(o.b)("inlineCode",{parentName:"p"},"UploadTaskEvent"),"s to indicate completion, progress, and errors:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),"task.addEventListener( UploadTaskEvent.SUCCESS, uploadSuccessHandler );\ntask.addEventListener( UploadTaskEvent.ERROR, uploadErrorHandler );\n")),Object(o.b)("p",null,"Events are dispatched with a ",Object(o.b)("inlineCode",{parentName:"p"},"UploadTaskSnapshot")," object.\nThis object is an immutable view of the task at the time the event occurred."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),"private function uploadSuccessHandler( event:UploadTaskEvent ):void \n{\n    // event.snapshot contains details about the completed upload\n}\n\nprivate function uploadErrorHandler( event:UploadTaskEvent ):void \n{\n    // Handle unsuccessful uploads\n    // event.errorMessage contains the reason for the error\n}\n")))}s.isMDXComponent=!0},884:function(e,a,t){"use strict";t.d(a,"a",(function(){return d})),t.d(a,"b",(function(){return m}));var n=t(0),r=t.n(n);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function c(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=r.a.createContext({}),s=function(e){var a=r.a.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},d=function(e){var a=s(e.components);return r.a.createElement(p.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},b=r.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(t),b=n,m=d["".concat(i,".").concat(b)]||d[b]||u[b]||o;return t?r.a.createElement(m,l(l({ref:a},p),{},{components:t})):r.a.createElement(m,l({ref:a},p))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=b;var l={};for(var c in a)hasOwnProperty.call(a,c)&&(l[c]=a[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);
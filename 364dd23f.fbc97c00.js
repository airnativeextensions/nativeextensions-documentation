(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{223:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return a})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var i=n(2),r=(n(0),n(812));const o={title:"Auth - Provider - Google Identity",sidebar_label:"Google Identity"},a={unversionedId:"firebase/auth/provider/google-identity",id:"firebase/auth/provider/google-identity",isDocsHomePage:!1,title:"Auth - Provider - Google Identity",description:"You can let your users authenticate with Firebase using their Google Accounts by integrating Google Sign-In into your app.",source:"@site/docs/firebase/auth/provider/google-identity.md",slug:"/firebase/auth/provider/google-identity",permalink:"/docs/firebase/auth/provider/google-identity",version:"current",sidebar_label:"Google Identity",sidebar:"firebase",previous:{title:"Auth - Provider - Anonymous",permalink:"/docs/firebase/auth/provider/anonymous"},next:{title:"Auth - Provider - GitHub",permalink:"/docs/firebase/auth/provider/github"}},c=[{value:"Before you begin",id:"before-you-begin",children:[]},{value:"Authenticate with Google",id:"authenticate-with-google",children:[]},{value:"Authenticate with Firebase",id:"authenticate-with-firebase",children:[]},{value:"Next steps",id:"next-steps",children:[]}],l={rightToc:c};function s({components:e,...t}){return Object(r.b)("wrapper",Object(i.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"You can let your users authenticate with Firebase using their Google Accounts by integrating Google Sign-In into your app."),Object(r.b)("h2",{id:"before-you-begin"},"Before you begin"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Ensure you have setup Firebase in your application"),Object(r.b)("li",{parentName:"ul"},"Enable Google Sign-In in the Firebase console:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"In the ",Object(r.b)("a",Object(i.a)({parentName:"li"},{href:"https://console.firebase.google.com/"}),"Firebase console"),", open the ",Object(r.b)("strong",{parentName:"li"},"Auth")," section."),Object(r.b)("li",{parentName:"ul"},"On the ",Object(r.b)("strong",{parentName:"li"},"Sign in method")," tab, enable the ",Object(r.b)("strong",{parentName:"li"},"Google")," sign-in method and click ",Object(r.b)("strong",{parentName:"li"},"Save"),".")))),Object(r.b)("h2",{id:"authenticate-with-google"},"Authenticate with Google"),Object(r.b)("p",null,"In order to sign in using Google accounts you will need to integrate ",Object(r.b)("strong",{parentName:"p"},"Google Sign-In"),".\nYou can do this using the ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://airnativeextensions.com/extension/com.distriqt.GoogleIdentity"}),"Google Identity")," extension.\nThe following guide uses this ANE however you can use any method you currently have to attain the id token."),Object(r.b)("p",null,"Firstly, integrate Google Sign-In in your application by following the steps outlined in the Google Identity ANE."),Object(r.b)("p",null,"You must ensure that you request the id token when setting up the extension, by setting ",Object(r.b)("inlineCode",{parentName:"p"},"requestIdToken")," to ",Object(r.b)("inlineCode",{parentName:"p"},"true"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-actionscript"}),"var options:GoogleIdentityOptions = new GoogleIdentityOptionsBuilder()\n    .requestIdToken()\n    .setIOSClientID( Config.clientID_iOS )\n    .setServerClientID( Config.serverClientID )\n    .build();\n\nGoogleIdentity.service.setup( options );\n")),Object(r.b)("p",null,"Then call sign in to authenticate your user using their Google account:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-actionscript"}),"GoogleIdentity.service.addEventListener( GoogleIdentityEvent.SIGN_IN, googleIdentity_signInHandler );\n                    \nGoogleIdentity.service.signIn();\n")),Object(r.b)("h2",{id:"authenticate-with-firebase"},"Authenticate with Firebase"),Object(r.b)("p",null,"When sign in completes you'll have access to the id token and access token.\nYou use these to construct an ",Object(r.b)("inlineCode",{parentName:"p"},"AuthCredential")," that you can pass to the ",Object(r.b)("inlineCode",{parentName:"p"},"FirebaseAuth"),"\n",Object(r.b)("inlineCode",{parentName:"p"},"signInWithCredential")," function."),Object(r.b)("p",null,"To create an ",Object(r.b)("inlineCode",{parentName:"p"},"AuthCredential")," for Google use the ",Object(r.b)("inlineCode",{parentName:"p"},"GoogleAuthProvider.getCredential")," method:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-actionscript"}),"var credential:AuthCredential = GoogleAuthProvider.getCredential( idToken, accessToken );\n")),Object(r.b)("p",null,"Then pass this to ",Object(r.b)("inlineCode",{parentName:"p"},"signInWithCredential"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-actionscript"}),"FirebaseAuth.service.signInWithCredential( credential );\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"signInWithCredential")," method will return the ",Object(r.b)("inlineCode",{parentName:"p"},"FirebaseAuthEvent.SIGNIN_WITH_CREDENTIAL_COMPLETE")," event."),Object(r.b)("p",null,"For example on the ",Object(r.b)("inlineCode",{parentName:"p"},"GoogleIdentityEvent.SIGN_IN")," event handler:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-actionscript"}),"function googleIdentity_signInHandler( event:GoogleIdentityEvent ):void\n{\n    // Have google sign in, lets use this to sign into Firebase\n    var idToken:String = event.user.authentication.idToken;\n    var accessToken:String = event.user.authentication.accessToken; // probably will be null\n\n    // Create AuthCredential    \n    var credential:AuthCredential = GoogleAuthProvider.getCredential( idToken, accessToken );\n    \n    // Start sign-in to Firebase\n    FirebaseAuth.service.addEventListener( FirebaseAuthEvent.SIGNIN_WITH_CREDENTIAL_COMPLETE, signInWithCredential_completeHandler );\n    FirebaseAuth.service.signInWithCredential( credential );\n}\n")),Object(r.b)("p",null,"You can then use the ",Object(r.b)("inlineCode",{parentName:"p"},"SIGNIN_WITH_CREDENTIAL_COMPLETE")," event to process the success sign-in\nwhich will have the ",Object(r.b)("inlineCode",{parentName:"p"},"FirebaseUser")," with a linked Google provider."),Object(r.b)("h2",{id:"next-steps"},"Next steps"),Object(r.b)("p",null,"After a user signs in for the first time, a new user account is created and linked to the credentials\u2014that is, the user name and password, phone number, or auth provider information\u2014the user signed in with. This new account is stored as part of your Firebase project, and can be used to identify a user across every app in your project, regardless of how the user signs in."),Object(r.b)("p",null,"In your apps, you can get the user's basic profile information from the ",Object(r.b)("inlineCode",{parentName:"p"},"FirebaseUser")," object.\nIn your Firebase Realtime Database and Cloud Storage Security Rules, you can get the signed-in\nuser's unique user ID from the auth variable, and use it to control what data a user can access.\nYou can allow users to sign in to your app using multiple authentication providers by linking\nauth provider credentials to an existing user account."),Object(r.b)("p",null,"To sign out a user, call ",Object(r.b)("inlineCode",{parentName:"p"},"signOut"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-actionscript"}),"FirebaseAuth.service.signOut();\n")))}s.isMDXComponent=!0},812:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return g}));var i=n(0),r=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=u(n),d=i,g=b["".concat(a,".").concat(d)]||b[d]||p[d]||o;return n?r.a.createElement(g,c(c({ref:t},s),{},{components:n})):r.a.createElement(g,c({ref:t},s))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);
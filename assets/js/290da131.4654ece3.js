"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[29723],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=i.createContext({}),p=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),g=a,m=d["".concat(o,".").concat(g)]||d[g]||u[g]||r;return n?i.createElement(m,l(l({ref:t},c),{},{components:n})):i.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=g;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:a,l[1]=s;for(var p=2;p<r;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}g.displayName="MDXCreateElement"},45293:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var i=n(87462),a=(n(67294),n(3905));const r={title:"Settings and Preferences",sidebar_label:"Settings"},l=void 0,s={unversionedId:"application/settings",id:"application/settings",title:"Settings and Preferences",description:"In this section we will cover the native integration of settings or preferences in your application.",source:"@site/docs/application/settings.md",sourceDirName:"application",slug:"/application/settings",permalink:"/docs/application/settings",draft:!1,tags:[],version:"current",frontMatter:{title:"Settings and Preferences",sidebar_label:"Settings"},sidebar:"application",previous:{title:"Keychain",permalink:"/docs/application/keychain"},next:{title:"General Helpers",permalink:"/docs/application/general-helpers"}},o={},p=[{value:"Availability",id:"availability",level:2},{value:"Displaying the Settings Screen",id:"displaying-the-settings-screen",level:2},{value:"Reading and Writing Values",id:"reading-and-writing-values",level:2},{value:"Get Values",id:"get-values",level:3},{value:"Set Values",id:"set-values",level:3},{value:"Listen for Change Events",id:"listen-for-change-events",level:2},{value:"iOS",id:"ios",level:2},{value:"Creating a Settings Bundle",id:"creating-a-settings-bundle",level:3},{value:"Android",id:"android",level:2},{value:"Manifest Additions",id:"manifest-additions",level:3},{value:"Creating the Settings (Preferences) XML resource",id:"creating-the-settings-preferences-xml-resource",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In this section we will cover the native integration of settings or preferences in your application.\nThis involves integrating with the OS method of displaying settings to your users."),(0,a.kt)("p",null,'On iOS your settings can be added to the "Settings" app and displayed in the section for your application:'),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(97264).Z,width:"813",height:"700"})),(0,a.kt)("p",null,'On Android you can use the "PreferencesActivity" functionality in Android to display an activity like the following:'),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(43666).Z,width:"394",height:"700"})),(0,a.kt)("h2",{id:"availability"},"Availability"),(0,a.kt)("p",null,"This functionality is available on iOS and Android as long as you have configured your application\ncorrectly. You can check if this functionality is available using the ",(0,a.kt)("inlineCode",{parentName:"p"},"isSupported")," flag:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (Application.service.settings.isSupported)\n{\n    // Settings functionality is available\n}\n")),(0,a.kt)("h2",{id:"displaying-the-settings-screen"},"Displaying the Settings Screen"),(0,a.kt)("p",null,"To display the settings screen simply call the ",(0,a.kt)("inlineCode",{parentName:"p"},"openSettingsScreen()")," method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"Application.service.settings.openSettingsScreen();\n")),(0,a.kt)("p",null,"This will display the screens shown above, based on the way you have configured them for your application (see later)."),(0,a.kt)("h2",{id:"reading-and-writing-values"},"Reading and Writing Values"),(0,a.kt)("p",null,"The settings functionality gives you the ability to read and write certain values\nto the settings screen."),(0,a.kt)("p",null,"This is very similar to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Defaults")," functionality and in fact uses the exact same underlying\nnative functionality (i.e. NSUserDefaults on iOS and SharedPreferences on Android), with some\nminor differences."),(0,a.kt)("h3",{id:"get-values"},"Get Values"),(0,a.kt)("p",null,"You can use the following functions to retrieve values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"getBoolean( key )")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"getString( key )")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"getNumber( key )")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"getInt( key )"))),(0,a.kt)("p",null,"The key will be the key for the preference item defined in your configuration (see later)."),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'trace( "name_preference =    " + Application.service.settings.getString( "name_preference" ) );\ntrace( "enabled_preference = " + Application.service.settings.getBoolean( "enabled_preference" ) );\ntrace( "numeric_preference = " + Application.service.settings.getNumber( "numeric_preference" ) );\n')),(0,a.kt)("h3",{id:"set-values"},"Set Values"),(0,a.kt)("p",null,"Similarly you can set the values for the settings using:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"setBoolean( key, value )")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"setString( key, value )")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"setNumber( key, value )")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"setInt( key, value )"))),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'Application.service.settings.setBoolean( "enabled_preference", false );\nApplication.service.settings.setString( "multi_preference", "1" );\nApplication.service.settings.setNumber( "numeric_preference", 10 );\n')),(0,a.kt)("h2",{id:"listen-for-change-events"},"Listen for Change Events"),(0,a.kt)("p",null,"You can listen for the ",(0,a.kt)("inlineCode",{parentName:"p"},"SettingsEvent.CHANGED")," event which will be dispatched when a value in the\nsettings has been changed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'Application.service.settings.addEventListener( SettingsEvent.CHANGED, settings_changedHandler );\n\nfunction settings_changedHandler( event:SettingsEvent ):void\n{\n    message( "settings changed: " + event.key );\n}\n')),(0,a.kt)("p",null,"The event will contain the key that was changed on Android only."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"ios"},"iOS"),(0,a.kt)("p",null,"On iOS you will be creating a ",(0,a.kt)("strong",{parentName:"p"},"Settings Bundle")," which specifies the items to display in the settings screen."),(0,a.kt)("p",null,"A Settings bundle has the name ",(0,a.kt)("inlineCode",{parentName:"p"},"Settings.bundle")," and resides in the top-level directory of your applications package.\nThis bundle contains one or more Settings page files that describe the individual pages of preferences.\nIt may also include other support files needed to display your preferences, such as images or localized strings. "),(0,a.kt)("h3",{id:"creating-a-settings-bundle"},"Creating a Settings Bundle"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Settings.bundle")," is just a directory with a ",(0,a.kt)("inlineCode",{parentName:"p"},"Root.plist")," and some language strings as needed by your application."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Root.plist")," file is just an xml file that defines the items that will appear in the settings page."),(0,a.kt)("p",null,"For example the following defines a toggle switch:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n    <key>StringsTable</key>\n    <string>Root</string>\n    <key>PreferenceSpecifiers</key>\n    <array>\n        <dict>\n            <key>Type</key>\n            <string>PSToggleSwitchSpecifier</string>\n            <key>Title</key>\n            <string>Enabled</string>\n            <key>Key</key>\n            <string>enabled_preference</string>\n            <key>DefaultValue</key>\n            <true/>\n        </dict>\n    </array>\n</dict>\n</plist>\n')),(0,a.kt)("p",null,"You can either edit this file directly or use Xcode to create your Settings bundle and then copy it into your AIR project."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/UserDefaults/Preferences/Preferences.html"},"Apple Documentation")),(0,a.kt)("p",null,"In order to package this correctly, simply make sure it is packaged at the root level of your application.\nIt must be named ",(0,a.kt)("inlineCode",{parentName:"p"},"Settings.bundle")," and contain the ",(0,a.kt)("inlineCode",{parentName:"p"},"Root.plist")," file plus the localisation strings."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"android"},"Android"),(0,a.kt)("p",null,"On Android you will be adding a small addition to the manifest and adding a custom resource which specifies\nthe items to display in the settings screen."),(0,a.kt)("h3",{id:"manifest-additions"},"Manifest Additions"),(0,a.kt)("p",null,"In order to display the settings activity you need to add the ",(0,a.kt)("inlineCode",{parentName:"p"},"SettingsActivity")," to your manifest:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<activity android:name="com.distriqt.extension.application.settings.SettingsActivity" android:label="Settings" />\n')),(0,a.kt)("p",null,"You can change the ",(0,a.kt)("inlineCode",{parentName:"p"},"label")," as you need for your application, it will be displayed at the top of the preferences panel. "),(0,a.kt)("h3",{id:"creating-the-settings-preferences-xml-resource"},"Creating the Settings (Preferences) XML resource"),(0,a.kt)("p",null,"To add resources to your application you will need to create a custom resources ANE.\nYou can use the script and instructions ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/distriqt/ANE-CustomResources/"},"here"),"\nto create this ANE. "),(0,a.kt)("p",null,"In the following we will go through the resources you will need to add to this ANE."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CheckBoxPreference")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"SwitchPreference")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"EditTextPreference")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ListPreference")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MultiSelectListPreference"))),(0,a.kt)("p",null,"The following resource (",(0,a.kt)("inlineCode",{parentName:"p"},"res/xml/settings.xml"),") defines several settings : "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">\n\n    <EditTextPreference\n        android:key="name_preference"\n        android:title="Name"\n        android:summary="Your name"\n        android:defaultValue="default"/>\n\n    <SwitchPreference\n        android:key="enabled_preference"\n        android:title="Enabled"\n        android:summary="This is a checkbox enabled"/>\n\n    <ListPreference \n        android:key="multi_preference"\n        android:title="Multiple options"\n        android:defaultValue="1"\n        android:entries="@array/multi_preference_titles"\n        android:entryValues="@array/multi_preference_values" />\n\n</PreferenceScreen>\n')),(0,a.kt)("p",null,"The list uses values in the array values (",(0,a.kt)("inlineCode",{parentName:"p"},"res/values/array.xml"),") as below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n<resources>\n   <string-array name="multi_preference_titles">\n       <item>Option 1</item>\n       <item>Option 2</item>\n       <item>Option 3</item>\n   </string-array>\n   <string-array name="multi_preference_values">\n       <item>1</item>\n       <item>2</item>\n       <item>3</item>\n   </string-array>\n</resources>\n')))}u.isMDXComponent=!0},43666:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/settings_android-40c26b1558718f876bd9e91629b819af.png"},97264:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/settings_ios-3b33c0ad0d711862c806af7473be4a31.png"}}]);
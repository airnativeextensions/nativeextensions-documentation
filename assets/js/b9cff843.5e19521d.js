"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[58694],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return u}});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),g=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},p=function(e){var n=g(e.components);return t.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=g(r),u=o,m=d["".concat(l,".").concat(u)]||d[u]||c[u]||a;return r?t.createElement(m,s(s({ref:n},p),{},{components:r})):t.createElement(m,s({ref:n},p))}));function u(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var g=2;g<a;g++)s[g]=r[g];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},12694:function(e,n,r){r.r(n),r.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return i},metadata:function(){return g},toc:function(){return c}});var t=r(83117),o=r(80102),a=(r(67294),r(3905)),s=["components"],i={title:"Progress Dialog",sidebar_label:"Progress Dialog"},l=void 0,g={unversionedId:"dialog/progress-dialog",id:"dialog/progress-dialog",title:"Progress Dialog",description:"A progress dialog can be used to show the progress of a long running process, such as downloading a file.",source:"@site/docs/dialog/progress-dialog.md",sourceDirName:"dialog",slug:"/dialog/progress-dialog",permalink:"/docs/dialog/progress-dialog",draft:!1,tags:[],version:"current",frontMatter:{title:"Progress Dialog",sidebar_label:"Progress Dialog"},sidebar:"dialog",previous:{title:"Action Sheet",permalink:"/docs/dialog/action-sheet"},next:{title:"Activity Dialog",permalink:"/docs/dialog/activity-dialog"}},p={},c=[{value:"Updating Progress",id:"updating-progress",level:2},{value:"Updating Message",id:"updating-message",level:2}],d={toc:c};function u(e){var n=e.components,i=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,t.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{src:r(74295).Z,width:"1240",height:"930"})),(0,a.kt)("p",null,"A progress dialog can be used to show the progress of a long running process, such as downloading a file.\nA progress dialog can have a different appearances, such as a indeterminate spinner, a horizontal bar or\nan annular / circular fill."),(0,a.kt)("p",null,"A progress dialog is created by using an ",(0,a.kt)("inlineCode",{parentName:"p"},"ProgressDialogBuilder"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"create")," function will return a\nprogress dialog specific ",(0,a.kt)("inlineCode",{parentName:"p"},"DialogView")," represented by the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProgressDialogView")," class."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'var progressDialog:ProgressDialogView = Dialog.service.create( \n        new ProgressDialogBuilder()\n            .setTitle( "A Long Process is happening" )\n            .setMessage( "Loading..." )\n            .setStyle( DialogType.STYLE_HORIZONTAL )\n            .setCancelable( false )\n            .setTheme( new DialogTheme( DialogTheme.DEVICE_DEFAULT_LIGHT ))\n            .build()\n        );\n\nprogressDialog.show();\n')),(0,a.kt)("h2",{id:"updating-progress"},"Updating Progress"),(0,a.kt)("p",null,"For a determinate progress dialog you can update the displayed value by calling ",(0,a.kt)("inlineCode",{parentName:"p"},"update")," on the\n",(0,a.kt)("inlineCode",{parentName:"p"},"ProgressDialogView")," instance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'var progressInterval:uint;\nvar progress:Number = 0;\nvar progressDialog:ProgressDialogView;\n\nif (Dialog.isSupported)\n{\n    progressDialog = Dialog.service.create( \n        new ProgressDialogBuilder()\n            .setTitle( "A Long Process is happening" )\n            .setMessage( "Loading..." )\n            .setStyle( DialogType.STYLE_HORIZONTAL )\n            .setCancelable( false )\n            .setTheme( new DialogTheme( DialogTheme.DEVICE_DEFAULT_LIGHT ))\n            .build()\n        );\n    progressDialog.addEventListener( DialogViewEvent.CLOSED, progressDialog_closedHandler );\n    progressDialog.show();\n    \n    progress = 0;\n    progressDialog.update( progress );\n    \n    progressInterval = setInterval( progressDialog_intervalHandler, 2000 );\n}\n\n...\n\nprivate function progressDialog_intervalHandler():void\n{\n    progress += 0.1; // Change the value by some amount\n    progressDialog.update( progress );\n\n    if (progress >= 1) // Dismiss the dialog when complete\n    {\n        clearInterval( progressInterval );\n        progressDialog.dismiss();\n    }\n}\n\nprivate function progressDialog_closedHandler( event:DialogViewEvent ):void\n{\n    trace( "progress dialog closed" );\n    progressDialog.removeEventListener( DialogViewEvent.CLOSED, progressDialog_closedHandler );\n    progressDialog.dispose();\n}\n')),(0,a.kt)("h2",{id:"updating-message"},"Updating Message"),(0,a.kt)("p",null,"Similarly you can update the message displayed in the progress dialog by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"setMessage()")," function on the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProgressDialogView")," instance."),(0,a.kt)("p",null,"For example you could update the text to represent the percentage complete of the process the progress dialog is tracking:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'var percent:Number = ...;\n\nprogressDialog.setMessage( "Loading " + percent + "% complete"  );\n')))}u.isMDXComponent=!0},74295:function(e,n,r){n.Z=r.p+"assets/images/progress-8045022d453b8682331a1f352f643e97.png"}}]);
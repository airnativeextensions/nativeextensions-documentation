"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[66647],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),u=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(a),m=r,y=d["".concat(p,".").concat(m)]||d[m]||s[m]||i;return a?n.createElement(y,l(l({ref:t},c),{},{components:a})):n.createElement(y,l({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},85162:function(e,t,a){a.d(t,{Z:function(){return l}});var n=a(67294),r=a(34334),i="tabItem_Ymn6";function l(e){var t=e.children,a=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:a},t)}},65488:function(e,t,a){a.d(t,{Z:function(){return m}});var n=a(83117),r=a(67294),i=a(34334),l=a(72389),o=a(67392),p=a(7094),u=a(12466),c="tabList__CuJ",s="tabItem_LNqP";function d(e){var t,a,l=e.lazy,d=e.block,m=e.defaultValue,y=e.values,v=e.groupId,b=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=y?y:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,o.l)(f,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===m?m:null!=(t=null!=m?m:null==(a=h.find((function(e){return e.props.default})))?void 0:a.props.value)?t:h[0].props.value;if(null!==k&&!f.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var T=(0,p.U)(),E=T.tabGroupChoices,N=T.setTabGroupChoices,w=(0,r.useState)(k),P=w[0],I=w[1],x=[],H=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=v){var O=E[v];null!=O&&O!==P&&f.some((function(e){return e.value===O}))&&I(O)}var C=function(e){var t=e.currentTarget,a=x.indexOf(t),n=f[a].value;n!==P&&(H(t),I(n),null!=v&&N(v,String(n)))},S=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n,r=x.indexOf(e.currentTarget)+1;a=null!=(n=x[r])?n:x[0];break;case"ArrowLeft":var i,l=x.indexOf(e.currentTarget)-1;a=null!=(i=x[l])?i:x[x.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},b)},f.map((function(e){var t=e.value,a=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:P===t?0:-1,"aria-selected":P===t,key:t,ref:function(e){return x.push(e)},onKeyDown:S,onFocus:C,onClick:C},l,{className:(0,i.Z)("tabs__item",s,null==l?void 0:l.className,{"tabs__item--active":P===t})}),null!=a?a:t)}))),l?(0,r.cloneElement)(h.filter((function(e){return e.props.value===P}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==P})}))))}function m(e){var t=(0,l.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},30182:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return m}});var n=a(83117),r=a(80102),i=(a(67294),a(3905)),l=a(65488),o=a(85162),p=["components"],u={title:"Haptic Engine",sidebar_label:"Haptic Engine"},c=void 0,s={unversionedId:"vibration/haptic-engine",id:"vibration/haptic-engine",title:"Haptic Engine",description:"Compose and play haptic patterns to customize your app\u2019s feedback.",source:"@site/docs/vibration/haptic-engine.mdx",sourceDirName:"vibration",slug:"/vibration/haptic-engine",permalink:"/docs/vibration/haptic-engine",draft:!1,tags:[],version:"current",frontMatter:{title:"Haptic Engine",sidebar_label:"Haptic Engine"},sidebar:"vibration",previous:{title:"Feedback Generators",permalink:"/docs/vibration/feedback-generators"},next:{title:"changelog",permalink:"/docs/vibration/changelog"}},d={},m=[{value:"Support",id:"support",level:2},{value:"Create a player",id:"create-a-player",level:2},{value:"Control",id:"control",level:2},{value:"Updating",id:"updating",level:2},{value:"Events",id:"events",level:2},{value:"Constructing a Pattern",id:"constructing-a-pattern",level:2}],y={toc:m};function v(e){var t=e.components,a=(0,r.Z)(e,p);return(0,i.kt)("wrapper",(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Compose and play haptic patterns to customize your app\u2019s feedback."),(0,i.kt)("p",null,"Use haptics to engage users physically, with tactile feedback that gets attention and reinforces actions."),(0,i.kt)("p",null,"Your app can play custom haptic patterns crafted from basic building blocks called haptic events (",(0,i.kt)("inlineCode",{parentName:"p"},"HapticEvent"),"). Events can be transient, like the feedback you get from toggling a switch, or continuous, like the vibration or sound from a ringtone. You can use transient and continuous patterns independently, or build your pattern from precise combinations of the two. "),(0,i.kt)("h2",{id:"support"},"Support"),(0,i.kt)("p",null,"You should check whether the current device supports the haptic engine by checking the ",(0,i.kt)("inlineCode",{parentName:"p"},"isSupported")," property on the ",(0,i.kt)("inlineCode",{parentName:"p"},"HapticEngine")," instance."),(0,i.kt)(l.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"air",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"if (Vibration.service.hapticEngine.isSupported)\n{\n    // Haptic Engine is supported\n}\n"))),(0,i.kt)(o.Z,{value:"unity",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"if (Vibration.Instance.HapticEngine.IsSupported)\n{\n    // Haptic Engine is supported\n}\n")))),(0,i.kt)("p",null,"If it is not supported you should fall back to other feedback methods, such as simple vibrations."),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Haptic Engine is only supported on iOS currently")),(0,i.kt)("h2",{id:"create-a-player"},"Create a player"),(0,i.kt)("p",null,"To create a player call the ",(0,i.kt)("inlineCode",{parentName:"p"},"createAdvancedPlayer()")," method passing in your pattern and initial params."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Currently the parameters to this method including the pattern are ignored.\nA haptic player with a single continuous pattern containing intensity and sharpness parameters will be created.")),(0,i.kt)(l.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"air",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"var pattern:HapticPattern = new HapticPattern(); \n\nvar player:HapticAdvancedPlayer \n    = Vibration.service.hapticEngine.createAdvancedPlayer( pattern );\n"))),(0,i.kt)(o.Z,{value:"unity",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"HapticPattern pattern = new HapticPattern();\n\nHapticAdvancedPlayer player \n    = Vibration.Instance.HapticEngine.createAdvancedPlayer(pattern);\n")))),(0,i.kt)("h2",{id:"control"},"Control"),(0,i.kt)("p",null,"To start the haptic call the ",(0,i.kt)("inlineCode",{parentName:"p"},"start()")," method on the ",(0,i.kt)("inlineCode",{parentName:"p"},"HapticAdvancedPlayer")," instance."),(0,i.kt)(l.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"air",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"player.start();\n"))),(0,i.kt)(o.Z,{value:"unity",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"player.Start();\n")))),(0,i.kt)("p",null,"To stop the player, call the ",(0,i.kt)("inlineCode",{parentName:"p"},"stop()")," method."),(0,i.kt)(l.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"air",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"player.stop();\n"))),(0,i.kt)(o.Z,{value:"unity",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"player.Stop();\n")))),(0,i.kt)("h2",{id:"updating"},"Updating"),(0,i.kt)("p",null,"To update a continuous haptic pattern with new dynamic parameters, call the ",(0,i.kt)("inlineCode",{parentName:"p"},"sendParameters()")," method passing in the new dynamic paramaters."),(0,i.kt)(l.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"air",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"player.sendParameters(\n        new HapticDynamicParams()\n                .setParameter( HapticDynamicParams.INTENSITY, 0.4 )\n                .setParameter( HapticDynamicParams.SHARPNESS, 0.2 )\n);\n"))),(0,i.kt)(o.Z,{value:"unity",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"player?.SendParameters(\n        new HapticDynamicParams()\n            .SetParameter(HapticDynamicParams.INTENSITY, 0.4)\n            .SetParameter(HapticDynamicParams.SHARPNESS, 0.2)\n        );\n")))),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("p",null,"The haptic engine may be stopped at any time due to external factors such as an incoming phone call or the application being minimised. "),(0,i.kt)("p",null,"When this occurs any of your players will become invalid and you should dispose them and recreate them before responding to user feedback again."),(0,i.kt)(l.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"air",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"Vibration.service.hapticEngine.addEventListener(\n        HapticEngineEvent.STOPPED,\n        hapticEngineStoppedHandler\n);\n\nfunction hapticEngineStoppedHandler( event:HapticEngineEvent ):void \n{\n    // This indicates the engine has stopped and all players must be recreated\n    if (player != null) player.dispose();\n    player = null;\n\n    // You should not recreate until needed again as this may be in the background now.\n}\n"))),(0,i.kt)(o.Z,{value:"unity",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"Vibration.Instance.HapticEngine.OnStopped += HapticEngine_OnStopped;\n\nvoid HapticEngine_OnStopped(HapticEngineEvent e)\n{\n    // This indicates the engine has stopped and all players must be recreated\n    _player?.Dispose();\n    _player = null;\n\n    // You should not recreate until needed again as this may be in the background now.\n}\n")))),(0,i.kt)("p",null,"Additionally each individual player will complete it's pattern playback after an amount of time. When this occurs the complete event will be dispatched allowing you to start the player again if you wish to continue haptic feedback."),(0,i.kt)(l.Z,{groupId:"framework",defaultValue:"air",values:[{label:"AIR",value:"air"},{label:"Unity",value:"unity"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"air",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"_player.addEventListener( HapticPlayerEvent.COMPLETE, playerCompleteHandler );\n_player.start();\n\nfunction playerCompleteHandler( event:HapticPlayerEvent ):void\n{\n    _player.start();\n}\n"))),(0,i.kt)(o.Z,{value:"unity",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"_player.OnComplete += player_OnComplete;\n_player.Start();\n\nvoid player_OnComplete(HapticPlayerEvent e)\n{\n    _player?.Start();\n}\n")))),(0,i.kt)("h2",{id:"constructing-a-pattern"},"Constructing a Pattern"),(0,i.kt)("p",null,"Not available yet"))}v.isMDXComponent=!0}}]);
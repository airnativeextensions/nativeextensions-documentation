"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[35647],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>v});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(a),u=r,v=c["".concat(s,".").concat(u)]||c[u]||d[u]||o;return a?n.createElement(v,i(i({ref:t},p),{},{components:a})):n.createElement(v,i({ref:t},p))}));function v(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},82235:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var n=a(87462),r=(a(67294),a(3905));const o={title:"Saving BitmapData to the Camera Roll",sidebar_label:"Saving BitmapData to the Camera Roll"},i=void 0,l={unversionedId:"image/saving-bitmapdata-to-the-camera-roll",id:"image/saving-bitmapdata-to-the-camera-roll",title:"Saving BitmapData to the Camera Roll",description:"This functionality has been deprecated and will be removed in an upcoming release.",source:"@site/docs/image/saving-bitmapdata-to-the-camera-roll.md",sourceDirName:"image",slug:"/image/saving-bitmapdata-to-the-camera-roll",permalink:"/docs/image/saving-bitmapdata-to-the-camera-roll",draft:!1,tags:[],version:"current",frontMatter:{title:"Saving BitmapData to the Camera Roll",sidebar_label:"Saving BitmapData to the Camera Roll"},sidebar:"image",previous:{title:"changelog",permalink:"/docs/image/changelog"},next:{title:"Authorisation",permalink:"/docs/image/request-authorisation"}},s={},m=[{value:"Authorisation",id:"authorisation",level:2},{value:"Example",id:"example",level:2}],p={toc:m},c="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"This functionality has been deprecated and will be removed in an upcoming release. "),(0,r.kt)("p",{parentName:"admonition"},"You should move to the ",(0,r.kt)("a",{parentName:"p",href:"/docs/camerarollextended/adding-files"},"CameraRollExtended")," extension for adding images to the Camera Roll."),(0,r.kt)("p",{parentName:"admonition"},"Migration should be relatively straight forward, just replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"Image.service.saveToCameraRoll()")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"CameraRollExtended.service.addBitmapData()"),".")),(0,r.kt)("p",null,"Encoding bitmap data to a file can be a slow process when using AS3 operations.\nThis extension provides functionality to use the native encoders to save ",(0,r.kt)("inlineCode",{parentName:"p"},"BitmapData"),"\ndirectly to the user's Camera Roll allowing them to have access to this image\nthrough their gallery application (Photos, Gallery, etc)."),(0,r.kt)("p",null,"This operation is asynchronous. You will receive an event when the operation completes."),(0,r.kt)("h2",{id:"authorisation"},"Authorisation"),(0,r.kt)("p",null,'In order to save to the camera roll you should make sure that the user has granted\nyour application permission to save to the camera roll. On Android this is a "dangerous"\npermission and requires runtime permission. On iOS it should always be granted.'),(0,r.kt)("p",null,"Take a look at the ",(0,r.kt)("a",{parentName:"p",href:"/docs/image/request-authorisation"},"Request Authorisation")," section for more information."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"This example uses an embedded image asset in the class ",(0,r.kt)("inlineCode",{parentName:"p"},"SampleImage"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var image:Bitmap = new SampleImage() as Bitmap;\n    \nImage.service.addEventListener( ImageEvent.SAVE_TO_CAMERAROLL_COMPLETE, completeHandler );\nImage.service.addEventListener( ImageEvent.SAVE_TO_CAMERAROLL_ERROR, errorHandler );\nImage.service.saveToCameraRoll( image.bitmapData );\n")),(0,r.kt)("p",null,"You will receive either an ",(0,r.kt)("inlineCode",{parentName:"p"},"ImageEvent.SAVE_TO_CAMERAROLL_COMPLETE")," event\nor an ",(0,r.kt)("inlineCode",{parentName:"p"},"ImageEvent.SAVE_TO_CAMERAROLL_ERROR")," event:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'private function completeHandler( event:ImageEvent ):void\n{\n    trace( "saveToCameraRoll : complete" );\n}\n\nprivate function errorHandler( event:ImageEvent ):void\n{\n    trace( "saveToCameraRoll : error: "+event.error );\n}\n')))}d.isMDXComponent=!0}}]);
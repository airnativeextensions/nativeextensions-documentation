"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[92279],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return s}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),v=c(n),s=o,m=v["".concat(p,".").concat(s)]||v[s]||u[s]||i;return n?r.createElement(m,a(a({ref:t},d),{},{components:n})):r.createElement(m,a({ref:t},d))}));function s(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=v;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},65916:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return s},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(83117),o=n(80102),i=(n(67294),n(3905)),a=["components"],l={},p=void 0,c={unversionedId:"webp/changelog",id:"webp/changelog",title:"changelog",description:"2022.02.14 [v4.0.9]",source:"@site/docs/webp/changelog.md",sourceDirName:"webp",slug:"/webp/changelog",permalink:"/docs/webp/changelog",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"webp",previous:{title:"Parse WebP Data",permalink:"/docs/webp/parse-webp-data"}},d={},u=[{value:"2022.02.14 v4.0.9",id:"20220214-v409",level:3},{value:"2021.10.12 v4.0.8",id:"20211012-v408",level:3},{value:"2020.03.19 v4.0.005",id:"20200319-v40005",level:3},{value:"2019.08.15 v3.0.002",id:"20190815-v30002",level:3},{value:"2019.03.26 v2.1.032",id:"20190326-v21032",level:3},{value:"2017.07.10 v2.0.027",id:"20170710-v20027",level:3},{value:"2016.12.30 v2.0.026",id:"20161230-v20026",level:3},{value:"2016.09.07 v2.0.024",id:"20160907-v20024",level:3},{value:"2015.06.16",id:"20150616",level:3},{value:"2015.05.12",id:"20150512",level:3},{value:"2015.02.03",id:"20150203",level:3},{value:"2014.12.22",id:"20141222",level:3},{value:"2014.12.08",id:"20141208",level:3},{value:"2014.12.02",id:"20141202",level:3}],v={toc:u};function s(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"20220214-v409"},"2022.02.14 ","[v4.0.9]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Update docs to use apm\n")),(0,i.kt)("h3",{id:"20211012-v408"},"2021.10.12 ","[v4.0.8]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Add air package\nRemove ios minimum version flag\n")),(0,i.kt)("h3",{id:"20200319-v40005"},"2020.03.19 ","[v4.0.005]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Android X migration (resolves #6)\n")),(0,i.kt)("h3",{id:"20190815-v30002"},"2019.08.15 ","[v3.0.002]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Android 64bit support (resolves #5)\nUpdated to webp v1.0.2\nUpdated minimumiOS version to 9.0\n")),(0,i.kt)("h3",{id:"20190326-v21032"},"2019.03.26 ","[v2.1.032]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Updated minimum iOS version to 8.0\nEmbedded iOS bitcode\nRemoved application keys\n")),(0,i.kt)("h3",{id:"20170710-v20027"},"2017.07.10 ","[v2.0.027]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Updated for compatibility with new Core library (for Notifications/PushNotifications fix)\n")),(0,i.kt)("h3",{id:"20161230-v20026"},"2016.12.30 ","[v2.0.026]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"New documentation\n")),(0,i.kt)("h3",{id:"20160907-v20024"},"2016.09.07 ","[v2.0.024]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Added the WebPLoader for asynchronous loading of WebP files (resolves #2)\n")),(0,i.kt)("h3",{id:"20150616"},"2015.06.16"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Removed debug code from AS lib\niOS: Updated to latest common lib\nAndroid: Windows: Fix for bug in AIR packager resulting in missing resources\nAndroid: x86 Support\n")),(0,i.kt)("h3",{id:"20150512"},"2015.05.12"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Release verion\n")),(0,i.kt)("h3",{id:"20150203"},"2015.02.03"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Added check for .debug suffix in application id\n")),(0,i.kt)("h3",{id:"20141222"},"2014.12.22"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"iOS: Included arm64 support (resolves #1)\nAndroid: Corrected application id check when doesn't contain air prefix\n")),(0,i.kt)("h3",{id:"20141208"},"2014.12.08"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Corrected missing EventDispatcher functions from base class\niOS: Implemented autoreleasepools for all C function calls\n")),(0,i.kt)("h3",{id:"20141202"},"2014.12.02"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"New application based key check, removing server checks\n")))}s.isMDXComponent=!0}}]);
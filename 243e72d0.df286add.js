(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{162:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return a})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(2),o=(n(0),n(854));const i={title:"NetworkInfo",hide_title:!0,slug:"/networkinfo/"},a={unversionedId:"networkinfo/index",id:"networkinfo/index",isDocsHomePage:!1,title:"NetworkInfo",description:"NetworkInfo",source:"@site/docs/networkinfo/index.md",slug:"/networkinfo/",permalink:"/docs/networkinfo/",version:"current",sidebar:"networkinfo",next:{title:"Add the Extension",permalink:"/docs/networkinfo/add-the-extension"}},c=[{value:"Features",id:"features",children:[]},{value:"Documentation",id:"documentation",children:[]},{value:"License",id:"license",children:[]}],s={rightToc:c};function l({components:e,...t}){return Object(o.b)("wrapper",Object(r.a)({},s,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("img",{src:n(987).default})),Object(o.b)("h1",{id:"networkinfo"},"NetworkInfo"),Object(o.b)("p",null,"The ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://airnativeextensions.com/extension/com.distriqt.NetworkInfo"}),"NetworkInfo"),"\naccess to information about the device's network interfaces."),Object(o.b)("p",null,"The Network Info extension provides access to determine the network type and connected\ninterfaces of a device. The default Adobe AIR NetworkInfo class is not fully supported\non the iOS platform, so this extension provides all functionality developers expect\nfrom the NetworkInfo utility class."),Object(o.b)("h3",{id:"features"},"Features"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Networks: Determine network connectivity and type (wired, wifi, etc)"),Object(o.b)("li",{parentName:"ul"},"Familiar interface: Uses the same syntax as the AIR NetworkInfo class"),Object(o.b)("li",{parentName:"ul"},"Interfaces: Provides information about the current network interfaces"),Object(o.b)("li",{parentName:"ul"},"Flags to determine if WiFi or WWAN network connection is active"),Object(o.b)("li",{parentName:"ul"},"Single API interface: Works across iOS and Android with the same code"),Object(o.b)("li",{parentName:"ul"},"Sample project code and ASDocs reference")),Object(o.b)("p",null,"As with all our extensions you get access to a year of support and updates as we are continually improving and updating the extensions for OS updates and feature requests."),Object(o.b)("h2",{id:"documentation"},"Documentation"),Object(o.b)("p",null,"The ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/distriqt/ANE-NetworkInfo/wiki"}),"Wiki")," forms the best source of detailed documentation for the extension along with\nthe ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.airnativeextensions.com/asdocs/networkinfo"}),"asdocs"),". "),Object(o.b)("p",null,"Quick Example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-actionscript"}),"")),Object(o.b)("p",null,"More information here: "),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://airnativeextensions.com/extension/com.distriqt.NetworkInfo"}),"com.distriqt.NetworkInfo")),Object(o.b)("h2",{id:"license"},"License"),Object(o.b)("p",null,"You can purchase a license for using this extension:"),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://airnativeextensions.com/"}),"airnativeextensions.com")),Object(o.b)("p",null,"distriqt retains all copyright."),Object(o.b)("p",null,Object(o.b)("img",{src:n(988).default})))}l.isMDXComponent=!0},854:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),b=r,d=p["".concat(a,".").concat(b)]||p[b]||f[b]||i;return n?o.a.createElement(d,c(c({ref:t},l),{},{components:n})):o.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},987:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/hero-ba75fe7cc997484fc3ed6520a94ab3c8.png"},988:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/promo-6037e2df213ed53e37f4b67f09f25083.png"}}]);
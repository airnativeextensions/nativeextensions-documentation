(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{1001:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/dynamiclinks-ios-associateddomains-d9ef0710131e5506f4a91e17beafc36f.png"},140:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return d}));var i=t(2),a=t(6),o=(t(0),t(876)),r={title:"Invites - Add the extension",sidebar_label:"Add the extension"},s={unversionedId:"firebase/invites/add-the-extension",id:"firebase/invites/add-the-extension",isDocsHomePage:!1,title:"Invites - Add the extension",description:"DEPRECATED",source:"@site/docs/firebase/invites/add-the-extension.md",slug:"/firebase/invites/add-the-extension",permalink:"/docs/firebase/invites/add-the-extension",version:"current",sidebar_label:"Add the extension"},l=[{value:"Required Extensions",id:"required-extensions",children:[{value:"Firebase Invites",id:"firebase-invites",children:[]}]},{value:"Extension IDs",id:"extension-ids",children:[{value:"Google Play Services",id:"google-play-services",children:[]},{value:"Google Identity",id:"google-identity",children:[]}]},{value:"Android Manifest Additions",id:"android-manifest-additions",children:[]},{value:"iOS",id:"ios",children:[{value:"Developer Console",id:"developer-console",children:[]},{value:"Info Additions and Entitlements",id:"info-additions-and-entitlements",children:[]}]}],c={rightToc:l};function d(e){var n=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},c,r,{components:n,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"DEPRECATED")),Object(o.b)("p",{parentName:"blockquote"},"Please note that the Invites functionality has been removed from the latest Firebase SDK.\nYou should update your applications to use dynamic links directly in combination with your own share functionality.\nYou can use the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://airnativeextensions.com/extension/com.distriqt.Share"}),"Share ANE")," as a starting point."),Object(o.b)("p",{parentName:"blockquote"},"This documentation is only for legacy reference.")),Object(o.b)("h2",{id:"required-extensions"},"Required Extensions"),Object(o.b)("p",null,"You should have been through the setup of the Firebase Core before attempting to proceed with Invites."),Object(o.b)("p",null,"Make sure you have added all the extensions required for the Firebase Core extension as outlined ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"../core/add-the-extensions"}),"here"),"."),Object(o.b)("p",null,"The Invites extension is not compatible with the Dynamic Links extension. You should use one or the other.\nInvites is built on top of the Firebase dynamic links functionality so the invites extension includes all the dynamic link functionality as well as the invites functionality."),Object(o.b)("h3",{id:"firebase-invites"},"Firebase Invites"),Object(o.b)("p",null,"The only required additional ANE is the Invites ANE located in this repository:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"com.distriqt.firebase.Invites")," : ",Object(o.b)("a",Object(i.a)({parentName:"li"},{href:"https://github.com/distriqt/ANE-Firebase"}),"https://github.com/distriqt/ANE-Firebase"))),Object(o.b)("p",null,"This ANE contains all the required libraries for the main Firebase Invites functionality."),Object(o.b)("p",null,"You cannot use the Dynamic Links ANE with this ANE. Instead the functionality of the Dynamic Links ANE is replicated in this ANE."),Object(o.b)("p",null,"See the notes on ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"dynamic-links"}),"dynamic links"),"."),Object(o.b)("h2",{id:"extension-ids"},"Extension IDs"),Object(o.b)("p",null,"The following should be added to your ",Object(o.b)("inlineCode",{parentName:"p"},"extensions")," node in your application descriptor to identify all the required ANEs in your application:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<extensions>\n    <extensionID>com.distriqt.Firebase</extensionID>\n    <extensionID>com.distriqt.firebase.Invites</extensionID>\n    \n    <extensionID>com.distriqt.Core</extensionID>\n\n    <extensionID>com.distriqt.playservices.Base</extensionID>\n    <extensionID>com.distriqt.playservices.AdsIdentifier</extensionID>\n\n    <extensionID>com.google.protobuflite</extensionID>\n    <extensionID>com.google.firebase.core</extensionID>\n\n    <extensionID>androidx.core</extensionID>\n    \n    <extensionID>com.distriqt.CustomResources</extensionID>\n</extensions>\n")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"google-play-services"},"Google Play Services"),Object(o.b)("p",null,"This ANE requires usage of certain aspects of the Google Play Services client library.\nThe client library is available as a series of ANEs that you add into your applications packaging options.\nEach separate ANE provides a component from the Play Services client library and are used by different ANEs.\nThese client libraries aren't packaged with this ANE as they are used by multiple ANEs and separating them\nwill avoid conflicts, allowing you to use multiple ANEs in the one application."),Object(o.b)("p",null,"This ANE requires the following Google Play Services in addition to the ones required by the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"../core/add-the-extensions#google-play-services"}),"Firebase Core"),":"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(i.a)({parentName:"li"},{href:"https://github.com/distriqt/ANE-GooglePlayServices/raw/master/lib/com.distriqt.playservices.AppInvite.ane"}),Object(o.b)("inlineCode",{parentName:"a"},"com.distriqt.playservices.AppInvite.ane")))),Object(o.b)("p",null,"You must include the above native extensions in your application along with this extension,\nand you need to ensure they are packaged with your application."),Object(o.b)("p",null,"You can access the Google Play Services client library extensions here: ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/distriqt/ANE-GooglePlayServices"}),"https://github.com/distriqt/ANE-GooglePlayServices"),"."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"google-identity"},"Google Identity"),Object(o.b)("p",null,"On iOS, Firebase Invites requires you to login your users using their Google Identity. "),Object(o.b)("p",null,"This means you will need to have integrated the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://airnativeextensions.com/extension/com.distriqt.GoogleIdentity"}),"Google Identity ANE")," in your application in order to support iOS."),Object(o.b)("p",null,"Android does not require this. "),Object(o.b)("p",null,"Without the Google Identity ANE this extension will not work on iOS. "),Object(o.b)("hr",null),Object(o.b)("h2",{id:"android-manifest-additions"},"Android Manifest Additions"),Object(o.b)("p",null,"As with plain deep links, you must add an intent filter to the activity that handles deep links for your app.\nThe intent filter should catch deep links of your domain, since the Dynamic Link will redirect to your domain\nif your app is installed. This is required for your app to receive the Dynamic Link data after it is installed\nfrom the Play Store. In AndroidManifest.xml:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),'<intent-filter>\n    <action android:name="android.intent.action.VIEW"/>\n    <category android:name="android.intent.category.DEFAULT"/>\n    <category android:name="android.intent.category.BROWSABLE"/>\n\n    <data android:scheme="http" android:host="airnativeextensions.com" />\n    <data android:scheme="https" android:host="airnativeextensions.com" />\n    <data android:scheme="distriqt" android:host="appinvite" />\n</intent-filter>\n')),Object(o.b)("p",null,"This intent filter should be added directly after the ",Object(o.b)("inlineCode",{parentName:"p"},"<application>")," tag in your manifest additions.\n(Note: This is not the main ",Object(o.b)("inlineCode",{parentName:"p"},"<application>")," tag in your AIR application descriptor but the one inside\nyour manifest additions!) "),Object(o.b)("p",null,"When users open a link to the scheme and host you specify, your app will start an activity to handle the link."),Object(o.b)("p",null,"For more details on these fields and how to handle other types of App Links you can\nread the official Android documentation on ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://developer.android.com/training/app-links/index.html"}),"Handling App Links")),Object(o.b)("p",null,"You will also need to add the following activity:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),'<activity\n    android:name="com.google.android.gms.appinvite.PreviewActivity"\n    android:exported="true"\n    android:theme="@style/Theme.AppInvite.Preview" >\n    <intent-filter>\n        <action android:name="com.google.android.gms.appinvite.ACTION_PREVIEW" />\n\n        <category android:name="android.intent.category.DEFAULT" />\n    </intent-filter>\n</activity>\n')),Object(o.b)("p",null,"For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),'<android>\n    <manifestAdditions><![CDATA[\n        <manifest android:installLocation="auto">\n            <uses-permission android:name="android.permission.INTERNET"/>\n            \n            \x3c!-- OTHER PERMISSIONS / REQUIREMENTS --\x3e\n\n            <application>\n\n                <intent-filter>\n                    <action android:name="android.intent.action.VIEW"/>\n                    <category android:name="android.intent.category.DEFAULT"/>\n                    <category android:name="android.intent.category.BROWSABLE"/>\n\n                    <data android:scheme="http" android:host="airnativeextensions.com" />\n                    <data android:scheme="https" android:host="airnativeextensions.com" />\n                    <data android:scheme="distriqt" android:host="appinvite" />\n                </intent-filter>\n\n\n                <activity\n                    android:name="com.google.android.gms.appinvite.PreviewActivity"\n                    android:exported="true"\n                    android:theme="@style/Theme.AppInvite.Preview" >\n                    <intent-filter>\n                        <action android:name="com.google.android.gms.appinvite.ACTION_PREVIEW" />\n\n                        <category android:name="android.intent.category.DEFAULT" />\n                    </intent-filter>\n                </activity>\n            \n\n                \x3c!-- OTHER ADDITIONS --\x3e\n\n\n            </application>\n        </manifest>\n    ]]></manifestAdditions>\n</android>\n')),Object(o.b)("h2",{id:"ios"},"iOS"),Object(o.b)("p",null,"Ensure that your app's App Store ID and your Apple Developer Team ID is specified in your app's settings. To view and edit your app's settings, go to your Firebase project's Settings page and select your iOS app."),Object(o.b)("p",null,"You can confirm that your Firebase project is properly configured to use Dynamic Links in your iOS app by opening the following URL (replacing ",Object(o.b)("inlineCode",{parentName:"p"},"app_code")," with your app code):"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),"https://app_code.app.goo.gl/apple-app-site-association\n")),Object(o.b)("p",null,"If your app is connected, the apple-app-site-association file contains a reference to your app's App Store ID and bundle ID. For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{"applinks":{"apps":[],"details":[{"appID":"1234567890.com.example.ios","paths":["/*"]}]}}\n')),Object(o.b)("p",null,"If the details field is empty, double-check that you specified your Team ID."),Object(o.b)("h3",{id:"developer-console"},"Developer Console"),Object(o.b)("p",null,'Ensure your application identifier in the iOS developer member center has enabled "Associated Domains".\nEnabling Associated Domains allows an app to be associated with a specified domain for specified services\nsuch as accessing Safari saved passwords and activity continuation.'),Object(o.b)("p",null,"To do this, log into the member center and open your ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://developer.apple.com/account/ios/identifier/bundle"}),"App IDs")),Object(o.b)("p",null,'Select your App ID and select "Edit". You need to enable the "Associated Domains" service as below:'),Object(o.b)("p",null,Object(o.b)("img",{src:t(1001).default})),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Note: You will need to regenerate and download your provisioning profiles after making this change. ")),Object(o.b)("h3",{id:"info-additions-and-entitlements"},"Info Additions and Entitlements"),Object(o.b)("p",null,"You will firstly need to add any custom url scheme to your info additions, by adding\nthe following and replacing ",Object(o.b)("inlineCode",{parentName:"p"},"APP_SCHEME")," with your applications custom url scheme:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<key>CFBundleURLTypes</key>\n<array>\n    <dict>\n        <key>CFBundleURLSchemes</key>\n        <array>\n            <string>APP_SCHEME</string>\n        </array>\n    </dict>\n</array>\n")),Object(o.b)("p",null,"You need to add the associated domain to your iOS Entitlements section, replacing\n",Object(o.b)("inlineCode",{parentName:"p"},"APP_CODE")," below with your Dynamic Links domain."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<key>com.apple.developer.associated-domains</key>\n<array>\n    <string>applinks:APP_CODE.app.goo.gl</string>\n</array>\n")),Object(o.b)("p",null,"For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-xml"}),"<iPhone>\n    <InfoAdditions><![CDATA[\n\n        <key>CFBundleURLTypes</key>\n        <array>\n            <dict>\n                <key>CFBundleURLSchemes</key>\n                <array>\n                    <string>distriqt</string>\n                </array>\n            </dict>\n        </array>\n\n    ]]></InfoAdditions>\n    <requestedDisplayResolution>high</requestedDisplayResolution>\n    <Entitlements><![CDATA[\n        \n        <key>com.apple.developer.associated-domains</key>\n        <array>\n            <string>applinks:abc123.app.goo.gl</string>\n        </array>\n\n    ]]></Entitlements>\n</iPhone>\n")))}d.isMDXComponent=!0},876:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return h}));var i=t(0),a=t.n(i);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=a.a.createContext({}),d=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=d(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},u=a.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(t),u=i,h=p["".concat(r,".").concat(u)]||p[u]||b[u]||o;return t?a.a.createElement(h,s(s({ref:n},c),{},{components:t})):a.a.createElement(h,s({ref:n},c))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=t[c];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);
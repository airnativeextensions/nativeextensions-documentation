"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[53918],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return h}});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(t),h=i,d=m["".concat(p,".").concat(h)]||m[h]||u[h]||r;return t?a.createElement(d,o(o({ref:n},l),{},{components:t})):a.createElement(d,o({ref:n},l))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=m;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},35615:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var a=t(83117),i=t(80102),r=(t(67294),t(3905)),o=["components"],s={title:"Scanning",sidebar_label:"Scanning"},p=void 0,c={unversionedId:"scanner/scanning",id:"scanner/scanning",title:"Scanning",description:"Once you have setup your application and gained permission to access the camera, then there are three approaches you can take to scan, 2 that utilise the camera directly and a third option to scan a provided image.",source:"@site/docs/scanner/scanning.md",sourceDirName:"scanner",slug:"/scanner/scanning",permalink:"/docs/scanner/scanning",draft:!1,tags:[],version:"current",frontMatter:{title:"Scanning",sidebar_label:"Scanning"},sidebar:"scanner",previous:{title:"Requesting Access",permalink:"/docs/scanner/requesting-access"},next:{title:"Scanning Bitmap Data",permalink:"/docs/scanner/scanning-bitmap-data"}},l={},u=[{value:"Scan Activity",id:"scan-activity",level:2},{value:"Scan in Viewport",id:"scan-in-viewport",level:2},{value:"Updating the Viewport",id:"updating-the-viewport",level:3},{value:"Stop Scanning",id:"stop-scanning",level:2},{value:"Events",id:"events",level:2},{value:"Options",id:"options",level:2},{value:"Scanner Options",id:"scanner-options",level:3},{value:"Camera Options",id:"camera-options",level:3},{value:"Viewport Options",id:"viewport-options",level:3},{value:"Activity Options",id:"activity-options",level:3}],m={toc:u};function h(e){var n=e.components,s=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},m,s,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Once you have setup your application and gained permission to access the camera, then there are three approaches you can take to scan, 2 that utilise the camera directly and a third option to scan a provided image."),(0,r.kt)("p",null,"The first is using a fullscreen activity which will take over the fullscreen of your application, presenting a camera preview and some UI elements. "),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(12083).Z,width:"700",height:"452"})),(0,r.kt)("p",null,"The second is to show a preview contained within an area (viewport) of your application. This view will sit above any other elements however you can create a UI around the preview to control the scanner or present feedback to your user."),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(50497).Z,width:"700",height:"452"})),(0,r.kt)("p",null,"The third is to scan an image directly by passing bitmap data to the extension. "),(0,r.kt)("p",null,"Below we describe the methods using the camera. You can find information on bitmap data scanning ",(0,r.kt)("a",{parentName:"p",href:"/docs/scanner/scanning-bitmap-data"},"here"),"."),(0,r.kt)("admonition",{title:"Authorisation",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Ensure you have ",(0,r.kt)("a",{parentName:"p",href:"/docs/scanner/requesting-access"},"requested authorisaton")," to use the camera before attempting to use these methods. ")),(0,r.kt)("h2",{id:"scan-activity"},"Scan Activity"),(0,r.kt)("p",null,"To start the fullscreen scan activity, call the ",(0,r.kt)("inlineCode",{parentName:"p"},"startScanActivity()")," method passing in the required options. This method takes several parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#activity-options"},(0,r.kt)("inlineCode",{parentName:"a"},"ActivityOptions")),": instance describing the appearance of the fullscreen UI elements;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#scanner-options"},(0,r.kt)("inlineCode",{parentName:"a"},"ScannerOptions")),": describing the options for the scanning algorithm (eg symbologies);"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#camera-options"},(0,r.kt)("inlineCode",{parentName:"a"},"CameraOptions")),": options for configuring the camera such as whether to use the front or rear camera;")),(0,r.kt)("p",null,"You can pass in ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," (the default) for all the options to simply use the defaults."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"Scanner.service.startScanActivity();\n")),(0,r.kt)("p",null,"This function will return a ",(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," value indicating the success of the start request. If it returns ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," there may be another scan in progress or there was an error."),(0,r.kt)("p",null,"To specify options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var scanOptions:ScannerOptions = new ScannerOptions();\nscanOptions.symbologies = [];\n\nvar uiOptions:ActivityOptions = new ActivityOptions();\nuiOptions.singleResult = false;\nuiOptions.heading = "Scan a barcode";\nuiOptions.cancelLabel = "FINISH";\nuiOptions.colour = 0x4863A0;\nuiOptions.textColour = 0xFFFFFF;\n\nuiOptions.overlay = _overlay.bitmapData;\nuiOptions.overlayAutoScale = true;\n\nvar cameraOptions:CameraOptions = new CameraOptions();\ncameraOptions.refocusInterval = 0;\ncameraOptions.camera    = CameraOptions.CAMERA_REAR;\ncameraOptions.torchMode = CameraOptions.TORCH_AUTO;\n\nvar success:Boolean = Scanner.service.startScanActivity(\n        scanOptions,\n        uiOptions,\n        cameraOptions\n);\n')),(0,r.kt)("h2",{id:"scan-in-viewport"},"Scan in Viewport"),(0,r.kt)("p",null,"To start the scan in a viewport call the ",(0,r.kt)("inlineCode",{parentName:"p"},"startScanInViewport()")," method passing in the required options. This method takes several parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#viewport-options"},(0,r.kt)("inlineCode",{parentName:"a"},"ViewportOptions")),": instance describing the viewport for the camera preview;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#scanner-options"},(0,r.kt)("inlineCode",{parentName:"a"},"ScannerOptions")),": describing the options for the scanning algorithm (eg symbologies);"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#camera-options"},(0,r.kt)("inlineCode",{parentName:"a"},"CameraOptions")),": options for configuring the camera such as whether to use the front or rear camera;")),(0,r.kt)("p",null,"You can pass in ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," (the default) for all the options to simply use the defaults, however we suggest you at least pass a valid ",(0,r.kt)("inlineCode",{parentName:"p"},"ViewportOptions")," instance to set the initial frame for the camera preview."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var frame:Rectangle = ...;\n\nvar viewportOptions:ViewportOptions = new ViewportOptions()\n        .setFrame( frame );\n\nScanner.service.startScanInViewport( viewportOptions );\n")),(0,r.kt)("p",null,"To specify all the options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var viewportOptions:ViewportOptions = new ViewportOptions()\n        .setFrame( new Rectangle( 100, 100, 500, 300 ) );\n\nvar scanOptions:ScannerOptions = new ScannerOptions()\n        .setSymbologies( [ Symbology.QRCODE ] );\n\nvar cameraOptions:CameraOptions = new CameraOptions()\n        .setCamera( CameraOptions.CAMERA_REAR )\n        .setTorchMode( CameraOptions.TORCH_AUTO );\n\nvar success:Boolean = Scanner.service.startScanInViewport(\n        viewportOptions,\n        scanOptions,\n        cameraOptions\n);\n")),(0,r.kt)("h3",{id:"updating-the-viewport"},"Updating the Viewport"),(0,r.kt)("p",null,"You can change the viewport frame for the camera preview while scanning is in progress."),(0,r.kt)("p",null,"To change the viewport frame call the ",(0,r.kt)("inlineCode",{parentName:"p"},"setScanViewport()")," method passing the new frame:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"Scanner.service.setScanViewport(\n    new Rectangle( 50, 200, 600, 600 )\n);\n")),(0,r.kt)("h2",{id:"stop-scanning"},"Stop Scanning"),(0,r.kt)("p",null,"To stop the scan process, call the ",(0,r.kt)("inlineCode",{parentName:"p"},"stopScan()")," method. This will stop the active scan process independent of the method you are using to scan (i.e. activity or viewport)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"Scanner.service.stopScan();\n")),(0,r.kt)("p",null,"This will stop the scan process and release any camera resources. "),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("p",null,"There are several events dispatched at various points of the scanning process, these are defined by the ",(0,r.kt)("inlineCode",{parentName:"p"},"ScannerEvent")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ScannerErrorEvent")," classes."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ScannerEvent.CODE_FOUND"),": Dispatched when a code was detected;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ScannerEvent.SCAN_START"),": Dispatched when a scanning process was started;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ScannerEvent.SCAN_STOPPED"),": Dispatched when a scanning process was stopped / terminated;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ScannerEvent.CANCELLED"),": Dispatched when the user cancels the scan activity;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ScannerErrorEvent.ERROR"),": Dispatched when an error occurred in the scan process;")),(0,r.kt)("p",null,"The most important is probably the ",(0,r.kt)("inlineCode",{parentName:"p"},"CODE_FOUND")," event that is dispatched with the scan result. This event has a ",(0,r.kt)("inlineCode",{parentName:"p"},"result")," property that contains information about the scan result as an instance of the ",(0,r.kt)("inlineCode",{parentName:"p"},"ScanResult")," class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'Scanner.service.addEventListener( ScannerEvent.CODE_FOUND, codeFoundHandler );\n\nfunction codeFoundHandler( event:ScannerEvent ):void\n{\n    var result:ScanResult = event.result;\n\n    trace( "code found: " + result.data  );\n}\n')),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("p",null,"When scanning there are some options that can be used. "),(0,r.kt)("h3",{id:"scanner-options"},"Scanner Options"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ScannerOptions")," class represents any options relating to the scanning algorithm to use, such as the list of symbol types to enable. An instance of this can be passed to any of the scan methods."),(0,r.kt)("p",null,"To create a ",(0,r.kt)("inlineCode",{parentName:"p"},"ScannerOptions")," you can use the properties on an instance of the class or use the builder methods."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var scanOptions:ScannerOptions = new ScannerOptions();\nscanOptions.symbologies = [ Symbology.QRCODE ];\n")),(0,r.kt)("p",null,"or "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var scanOptions:ScannerOptions = new ScannerOptions()\n    .setSymbologies( [ Symbology.QRCODE ] );\n")),(0,r.kt)("h3",{id:"camera-options"},"Camera Options"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"CameraOptions")," class represents any configuration options around the camera functionality, such as device position."),(0,r.kt)("p",null,"To create a ",(0,r.kt)("inlineCode",{parentName:"p"},"CameraOptions")," you can use the properties on an instance of the class or use the builder methods."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var cameraOptions:CameraOptions = new CameraOptions();\ncameraOptions.camera    = CameraOptions.CAMERA_REAR;\ncameraOptions.torchMode = CameraOptions.TORCH_AUTO;\n")),(0,r.kt)("p",null,"or "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var cameraOptions:CameraOptions = new CameraOptions()\n    .setCamera( CameraOptions.CAMERA_REAR )\n    .setTorchMode( CameraOptions.TORCH_AUTO );\n")),(0,r.kt)("h3",{id:"viewport-options"},"Viewport Options"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ViewportOptions")," class represents the options to define the area of the screen to use as the viewport for the ",(0,r.kt)("inlineCode",{parentName:"p"},"startScanInViewport()")," method."),(0,r.kt)("p",null,"The most important option here is the ",(0,r.kt)("inlineCode",{parentName:"p"},"frame")," which defines the area of the screen to place the camera preview. It should be in native pixel coordinates."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var viewportOptions:ViewportOptions = new ViewportOptions()\n        .setFrame( new Rectangle( 100, 100, 500, 300 ) );\n")),(0,r.kt)("h3",{id:"activity-options"},"Activity Options"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ActivityOptions")," class describes the appearance of the fullscreen UI elements for the ",(0,r.kt)("inlineCode",{parentName:"p"},"startScanActivity()")," method."),(0,r.kt)("p",null,"Options include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cancelLabel"),": The label to place on the cancel button;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"singleResult"),": If this option is true then the scanner will automatically stop and close the interface when a code is successfully scanned;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"colour"),": The colour for the background of the interface elements;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"textColour"),": The text colour for the text elements;")),(0,r.kt)("p",null,"For more details see the asdocs reference for the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.airnativeextensions.com/asdocs/scanner/com/distriqt/extension/scanner/ActivityOptions.html"},(0,r.kt)("inlineCode",{parentName:"a"},"ActivityOptions"))," class."))}h.isMDXComponent=!0},12083:function(e,n,t){n.Z=t.p+"assets/images/scan_activity-cd20c271aab808965aa19f5d2a45e77a.png"},50497:function(e,n,t){n.Z=t.p+"assets/images/scan_viewport-6a0c2b7067414c8567249fbab02a1488.png"}}]);
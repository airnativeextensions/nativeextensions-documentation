"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[79625],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=l(r),d=a,h=c["".concat(p,".").concat(d)]||c[d]||m[d]||i;return r?n.createElement(h,s(s({ref:t},u),{},{components:r})):n.createElement(h,s({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},20401:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const i={title:"Examples",sidebar_label:"Examples"},s=void 0,o={unversionedId:"facebookapi/core/graph-api/examples",id:"facebookapi/core/graph-api/examples",title:"Examples",description:"Some examples of using the Graph API",source:"@site/docs/facebookapi/core/graph-api/examples.md",sourceDirName:"facebookapi/core/graph-api",slug:"/facebookapi/core/graph-api/examples",permalink:"/docs/facebookapi/core/graph-api/examples",draft:!1,tags:[],version:"current",frontMatter:{title:"Examples",sidebar_label:"Examples"},sidebar:"facebookapi",previous:{title:"Batch",permalink:"/docs/facebookapi/core/graph-api/batch"},next:{title:"Overview",permalink:"/docs/facebookapi/core/app-links/overview"}},p={},l=[{value:"Get Current User Info",id:"get-current-user-info",level:2},{value:"Get User Permissions",id:"get-user-permissions",level:2},{value:"Get User Friends",id:"get-user-friends",level:2},{value:"Post Status Update",id:"post-status-update",level:2},{value:"Posting a Link",id:"posting-a-link",level:2},{value:"Posting an Image",id:"posting-an-image",level:2}],u={toc:l},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Some examples of using the Graph API"),(0,a.kt)("h2",{id:"get-current-user-info"},"Get Current User Info"),(0,a.kt)("p",null,"Requires the ",(0,a.kt)("inlineCode",{parentName:"p"},'"email"')," permission."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'var request:GraphRequest = new GraphRequestBuilder()\n    .setPath( "/me" )\n    .addField( "email" )\n    .addField( "name" )\n    .build();\n\nFacebook.instance.graphAPI.makeRequest( request );\n')),(0,a.kt)("h2",{id:"get-user-permissions"},"Get User Permissions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'new GraphRequestBuilder()\n    .setPath( "/me/permissions" )\n    .build();\n')),(0,a.kt)("h2",{id:"get-user-friends"},"Get User Friends"),(0,a.kt)("p",null,"Requires the ",(0,a.kt)("inlineCode",{parentName:"p"},'"user_friends"')," permission."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'var request:GraphRequest = new GraphRequestBuilder()\n    .setPath( "/me/friends" )\n    .addField( "name" )\n    .build();\n')),(0,a.kt)("h2",{id:"post-status-update"},"Post Status Update"),(0,a.kt)("p",null,"Requires the ",(0,a.kt)("inlineCode",{parentName:"p"},'"publish_actions"')," permission."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'new GraphRequestBuilder()\n    .setPath( "/me/feed" )\n    .setMethod( METHOD_POST )\n    .addParameter( "message", message )\n    .build();\n')),(0,a.kt)("h2",{id:"posting-a-link"},"Posting a Link"),(0,a.kt)("p",null,"Requires the ",(0,a.kt)("inlineCode",{parentName:"p"},'"publish_actions"')," permission."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'var request:GraphRequest = new GraphRequestBuilder()\n    .setPath( "/me/feed" )\n    .setMethod( GraphRequestBuilder.METHOD_POST )\n    .addParameter( "link", "https://airnativeextensions.com" )\n    .addParameter( "caption", "Posted through the Graph API from the Facebook API ANE" )\n    .build();\n\nFacebook.instance.graphAPI.makeRequest( request );\n')),(0,a.kt)("h2",{id:"posting-an-image"},"Posting an Image"),(0,a.kt)("p",null,"Requires the ",(0,a.kt)("inlineCode",{parentName:"p"},'"publish_actions"')," permission."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'var request:GraphRequest = new GraphRequestBuilder()\n    .setPath( "/me/photos" )\n    .setMethod( GraphRequestBuilder.METHOD_POST )\n    .setImage( _image.bitmapData )\n    .addParameter( "message", "Image posted through the Graph API from the Facebook API ANE" )\n    .build();\n\nFacebook.instance.graphAPI.makeRequest( request );\n')))}m.isMDXComponent=!0}}]);
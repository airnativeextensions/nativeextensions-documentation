"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[1869],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(n),g=a,f=p["".concat(s,".").concat(g)]||p[g]||u[g]||i;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},13165:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return d},default:function(){return u}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),l={title:"Alerts",sidebar_label:"Alerts"},o=void 0,s={unversionedId:"dialog/alerts",id:"dialog/alerts",isDocsHomePage:!1,title:"Alerts",description:"The alert dialog is a modal dialog that can display a title, a message and a series of actions.",source:"@site/docs/dialog/alerts.md",sourceDirName:"dialog",slug:"/dialog/alerts",permalink:"/docs/dialog/alerts",tags:[],version:"current",frontMatter:{title:"Alerts",sidebar_label:"Alerts"},sidebar:"dialog",previous:{title:"Toast",permalink:"/docs/dialog/toast"},next:{title:"Text View Alert",permalink:"/docs/dialog/text-view-alert"}},d=[{value:"Options",id:"options",children:[]},{value:"Text Fields",id:"text-fields",children:[]}],c={toc:d};function u(e){var t=e.components,l=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(71831).Z})),(0,i.kt)("p",null,"The alert dialog is a modal dialog that can display a title, a message and a series of actions.\nIt is the most common dialog that you will use to inform the user of critical actions and to\nget user feedback."),(0,i.kt)("p",null,"Alerts are created using an ",(0,i.kt)("inlineCode",{parentName:"p"},"AlertBuilder"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var alert:DialogView = Dialog.service.create( \n            new AlertBuilder()\n                .setTitle( "Alert" )\n                .setMessage( "Test Message" )\n                .addOption( "OK", DialogAction.STYLE_POSITIVE, 0 )\n                .build()\n            );\nalert.addEventListener( DialogViewEvent.CLOSED, alert_closedHandler );\nalert.show();\n\n...\n\nprivate function alert_closedHandler( event:DialogViewEvent ):void\n{\n    var alert:DialogView = DialogView(event.currentTarget);\n    alert.removeEventListener( DialogViewEvent.CLOSED, alert_closedHandler );\n    alert.dispose();\n}\n')),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("p",null,"You can add multiple options to get a user selection by calling the ",(0,i.kt)("inlineCode",{parentName:"p"},"addOption")," function\non the ",(0,i.kt)("inlineCode",{parentName:"p"},"AlertBuilder")," for each option and the closed event will indicate the index of\nthe option selected by the user. Each option can also have a style, allowing you to\nfurther indicate the result of the action to the user."),(0,i.kt)("p",null,"In the following example we add 3 options, one being destructive (which will show up red\non iOS)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var alert:DialogView = Dialog.service.create( \n            new AlertBuilder()\n                .setTitle( "Multiple Option Alert" )\n                .setMessage( "Test Message" )\n                .setCancelLabel( "Cancel" )\n                .addOption( "Option A", DialogAction.STYLE_DESTRUCTIVE )\n                .addOption( "Option B" ) \n                .addOption( "Option C" )\n                .build()\n            );\nalert.addEventListener( DialogViewEvent.CLOSED, alert_closedHandler );\nalert.show();\n\n...\n\nprivate function alert_closedHandler( event:DialogViewEvent ):void\n{\n    trace( "alert closed: " + event.index );\n    var alert:DialogView = DialogView(event.currentTarget);\n    alert.removeEventListener( DialogViewEvent.CLOSED, alert_closedHandler );\n    alert.dispose();\n}\n')),(0,i.kt)("h2",{id:"text-fields"},"Text Fields"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(55040).Z})),(0,i.kt)("p",null,"The alert dialog can also contain text inputs. These can be used to gather user input,\nsuch as a username and password. You add text fields by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"addTextField")," function\non the ",(0,i.kt)("inlineCode",{parentName:"p"},"AlertBuilder"),". The values for the text fields are then returned in the ",(0,i.kt)("inlineCode",{parentName:"p"},"values"),"\narray on the closed event."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var alert:DialogView = Dialog.service.create( \n        new AlertBuilder()\n            .setTitle( "Text Input Alert" )\n            .setMessage( "Enter your username and password" )\n            .addTextField( "", "Username" )\n            .addTextField( "", "Password", true )\n            .addOption( "OK", DialogAction.STYLE_POSITIVE )\n            .addOption( "Cancel", DialogAction.STYLE_CANCEL )\n            .build()\n        );\nalert.addEventListener( DialogViewEvent.CLOSED, textInputAlert_closedHandler );\nalert.show();\n\n...\n\nprivate function textInputAlert_closedHandler( event:DialogViewEvent ):void\n{\n    trace( "text input closed: " + event.index +"::"+ event.values.join(",") );\n    var alert:DialogView = DialogView(event.currentTarget);\n    alert.removeEventListener( DialogViewEvent.CLOSED, textInputAlert_closedHandler );\n    alert.dispose();\n}\n')))}u.isMDXComponent=!0},55040:function(e,t,n){t.Z=n.p+"assets/images/alerts-textinput-f6d241ead50b51c69aa672f62b664931.png"},71831:function(e,t,n){t.Z=n.p+"assets/images/alerts-2fd289385443894b490c92ed7071813f.png"}}]);
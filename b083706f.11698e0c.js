(window.webpackJsonp=window.webpackJsonp||[]).push([[577],{633:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return l}));var r=t(2),a=t(6),o=(t(0),t(904)),s={title:"iOS APNS Message",sidebar_label:"iOS APNS Message"},i={unversionedId:"pushnotifications/apple/ios-apns-message",id:"pushnotifications/apple/ios-apns-message",isDocsHomePage:!1,title:"iOS APNS Message",description:"There are many ways to send notifications to your devices.",source:"@site/docs/pushnotifications/apple/ios-apns-message.md",slug:"/pushnotifications/apple/ios-apns-message",permalink:"/docs/pushnotifications/apple/ios-apns-message",version:"current",sidebar_label:"iOS APNS Message",sidebar:"pushnotifications",previous:{title:"Pushy Payload",permalink:"/docs/pushnotifications/pushy/pushy-payload"},next:{title:"Firebase Cloud Message",permalink:"/docs/pushnotifications/firebase/firebase-cloud-message"}},c=[{value:"PHP Example",id:"php-example",children:[]}],p={rightToc:c};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"There are many ways to send notifications to your devices."),Object(o.b)("p",null,"The basic procedure is once your application has sent the device token (registration id) to your server,\nyour server will send a message to the appropriate service (APNS/GCM) which will deliver the notification\nto the registered device."),Object(o.b)("h3",{id:"php-example"},"PHP Example"),Object(o.b)("p",null,"The following is a very basic PHP example, sending a message to a single device."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-php"}),"<?php\n// Put your device token here (without spaces):\n$deviceToken = 'DEVICE_TOKEN';\n\n// Put your private key's passphrase here:\n$passphrase = 'passphrase';\n$pemfilename = 'ck.pem';\n\n// SIMPLE PUSH \n$body['aps'] = array(\n    'alert' => array(\n        'title' => \"You have a notification\",\n        'body' => \"Body of the message\",\n    ),\n    'badge' => 1,\n    'sound' => 'default',\n    ); // Create the payload body\n\n////////////////////////////////////////////////////////////////////////////////\n\n$ctx = stream_context_create();\nstream_context_set_option($ctx, 'ssl', 'local_cert', $pemfilename);\nstream_context_set_option($ctx, 'ssl', 'passphrase', $passphrase);\n\n$fp = stream_socket_client(\n    'ssl://gateway.sandbox.push.apple.com:2195', $err,\n    $errstr, 60, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, $ctx); // Open a connection to the APNS server\nif (!$fp)\n    exit(\"Failed to connect: $err $errstr\" . PHP_EOL);\necho 'Connected to APNS' . PHP_EOL;\n$payload = json_encode($body); // Encode the payload as JSON\n$msg = chr(0) . pack('n', 32) . pack('H*', $deviceToken) . pack('n', strlen($payload)) . $payload; // Build the binary notification\n$result = fwrite($fp, $msg, strlen($msg)); // Send it to the server\nif (!$result)\n    echo 'Message not delivered' . PHP_EOL;\nelse\n    echo 'Message successfully delivered' . PHP_EOL;\nfclose($fp); // Close the connection to the server\n")),Object(o.b)("p",null,"You run these scripts using php:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"php script.php\n")))}l.isMDXComponent=!0},904:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),l=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},f=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),f=r,b=u["".concat(s,".").concat(f)]||u[f]||d[f]||o;return t?a.a.createElement(b,i(i({ref:n},p),{},{components:t})):a.a.createElement(b,i({ref:n},p))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=f;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);
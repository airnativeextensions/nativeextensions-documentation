(window.webpackJsonp=window.webpackJsonp||[]).push([[520],{575:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return l}));var a=n(2),s=(n(0),n(807));const r={title:"Quests and Events",sidebar_label:"Quests and Events"},c={unversionedId:"gameservices/quests-and-events",id:"gameservices/quests-and-events",isDocsHomePage:!1,title:"Quests and Events",description:"Quests have been deprecated in Google Play Games. This functionality has been removed from the Play Games service so currently no services support Quests.",source:"@site/docs/gameservices/quests-and-events.md",slug:"/gameservices/quests-and-events",permalink:"/docs/gameservices/quests-and-events",version:"current",sidebar_label:"Quests and Events",sidebar:"gameservices",previous:{title:"Turn Based Multiplayer - Invitations",permalink:"/docs/gameservices/turn-based-multiplayer---invitations"},next:{title:"Screen Recording",permalink:"/docs/gameservices/screen-recording"}},i=[{value:"Loading Events",id:"loading-events",children:[]},{value:"Updating an Event",id:"updating-an-event",children:[]},{value:"Displaying the Quests UI",id:"displaying-the-quests-ui",children:[]},{value:"Loading Quests",id:"loading-quests",children:[]},{value:"Quest States",id:"quest-states",children:[]}],o={rightToc:i};function l({components:e,...t}){return Object(s.b)("wrapper",Object(a.a)({},o,t,{components:e,mdxType:"MDXLayout"}),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"Quests have been deprecated in Google Play Games. This functionality has been removed from the Play Games service so currently no services support Quests."),Object(s.b)("p",{parentName:"blockquote"},"We have left this functionality in the extension in case a service implements a quest like functionality in the future.")),Object(s.b)("p",null,"Player Events allow you to collect cumulative data generated by your players during gameplay and\nstore them in the game service servers for game analytics. You can flexibly define what player\ndata your game should collect; this might include metrics such as how often:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Players use a particular item"),Object(s.b)("li",{parentName:"ul"},"Players reach a certain level"),Object(s.b)("li",{parentName:"ul"},"Players perform some specific game action")),Object(s.b)("p",null,"You can use the events data as feedback on how to improve your game. For example, you can adjust\nthe difficulty level of certain levels in your game that players are finding too hard to complete."),Object(s.b)("p",null,"Quests complement the Player Events by allowing you to introduce new time-bound challenges (or quests)\nthat are based on events data. Quests allow you to re-engage players and incentivize them with some\nin-game reward or benefit if they succeed, without having to republish your entire game."),Object(s.b)("p",null,"You should check whether Quests and Events are supported on your device and service by checking the\n",Object(s.b)("inlineCode",{parentName:"p"},"isSupported")," flag:"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),"if (GameServices.service.quests.isSupported)\n{\n    // Quests and Events are supported\n}\n")),Object(s.b)("h1",{id:"integrating-player-events"},"Integrating Player Events"),Object(s.b)("p",null,"The first step is to define your events in the game service you are using. "),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"Google Play Games have deprecated this functionality")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Google Play",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"Go to the Events page for your game in the Developer Console"),Object(s.b)("li",{parentName:"ul"},'Click on the "Add new event" button and configure the event properties'),Object(s.b)("li",{parentName:"ul"},"Publish your event definitions"),Object(s.b)("li",{parentName:"ul"},"More information ",Object(s.b)("a",Object(a.a)({parentName:"li"},{href:"http://developers.google.com/games/services/common/concepts/quests"}),"here"))))),Object(s.b)("h2",{id:"loading-events"},"Loading Events"),Object(s.b)("p",null,"Loading the Player Events available to your player is a simple call to ",Object(s.b)("inlineCode",{parentName:"p"},"loadEvents")," using the quests functionality."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),"GameServices.service.quests.addEventListener( PlayerEventEvent.EVENTS_LOAD_SUCCESS, eventsLoadSuccessHandler );\nGameServices.service.quests.addEventListener( PlayerEventEvent.EVENTS_LOAD_ERROR,   eventsLoadErrorHandler );\n\nGameServices.service.quests.loadEvents();\n")),Object(s.b)("p",null,"Then in your event handlers:"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'private function eventsLoadSuccessHandler( event:PlayerEventEvent ):void\n{\n    trace( "EVENTS LOAD SUCCESS" );         \n    for each (var e:PlayerEvent in event.events)\n    {\n        message( "\\t event: ["+e.eventId+"] "+ e.name );\n    }\n}\n\nprivate function eventsLoadErrorHandler( event:PlayerEventEvent ):void\n{\n    trace( "EVENTS LOAD ERROR:" + event.message );\n}\n')),Object(s.b)("h2",{id:"updating-an-event"},"Updating an Event"),Object(s.b)("p",null,"Once you have loaded the Player Events you can increment an event when your events occur during game play:"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'var eventId:String = "some_event_id";\n\nGameServices.service.quests.incrementEvent( eventId );\n')),Object(s.b)("h1",{id:"integrating-quests"},"Integrating Quests"),Object(s.b)("p",null,"Similar to events, you will need to define your quests in the game service you are using."),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"Google Play Games have deprecated this functionality")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Google Play",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"Go to the Quests page for your game in the Developer Console"),Object(s.b)("li",{parentName:"ul"},'Click on the "Add new quest" button and configure the quest properties'),Object(s.b)("li",{parentName:"ul"},"Specify the events that represent player actions or milestones needed to complete the quest"),Object(s.b)("li",{parentName:"ul"},"Publish your quests"),Object(s.b)("li",{parentName:"ul"},"More information ",Object(s.b)("a",Object(a.a)({parentName:"li"},{href:"http://developers.google.com/games/services/common/concepts/quests"}),"here"))))),Object(s.b)("h2",{id:"displaying-the-quests-ui"},"Displaying the Quests UI"),Object(s.b)("p",null,"You can present a native UI to show your players the available quests within your game.\nThrough this UI your players can accept quests and start tracking events towards quests."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),"GameServices.service.quests.addEventListener( QuestEvent.QUESTS_UI_CLOSED, questsUIClosedHandler );\nGameServices.service.quests.displayUI();\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'private function questsUIClosedHandler( event:QuestEvent ):void\n{\n    trace( "QUESTS UI CLOSED" );\n}\n')),Object(s.b)("h2",{id:"loading-quests"},"Loading Quests"),Object(s.b)("p",null,"You can load the list of available quests and present them to your players as you require."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),"GameServices.service.quests.addEventListener( QuestEvent.QUESTS_LOAD_SUCCESS, questsLoadSuccessHandler );\nGameServices.service.quests.addEventListener( QuestEvent.QUESTS_LOAD_ERROR, questsLoadErrorHandler );\n\nGameServices.service.quests.loadQuests();\n")),Object(s.b)("p",null,"This will load an array of ",Object(s.b)("inlineCode",{parentName:"p"},"Quest")," objects and return them in the success event:"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'private function questsLoadSuccessHandler( event:QuestEvent ):void\n{\n    trace( "QUESTS LOAD SUCCESS" );\n    for each (var quest:Quest in event.quests)\n    {\n        trace( "\\t quest: ["+quest.questId+"] "+ quest.name );\n    }\n}\n\nprivate function questsLoadErrorHandler( event:QuestEvent ):void\n{\n    trace( "QUESTS LOAD ERROR: "+ event.message  );\n}\n')),Object(s.b)("h2",{id:"quest-states"},"Quest States"),Object(s.b)("p",null,'A quest is in an inactive state until your player "accepts" the quest. Once a quest is accepted\nany events that you track will then be counted towards the progress of the quest.'),Object(s.b)("p",null,"To accept a quest call the ",Object(s.b)("inlineCode",{parentName:"p"},"accept")," function with the quest id of interest."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),"GameServices.service.quests.addEventListener( QuestEvent.QUEST_ACCEPT_SUCCESS, questsAcceptSuccessHandler );\nGameServices.service.quests.addEventListener( QuestEvent.QUEST_ACCEPT_ERROR, questsAcceptErrorHandler );\n\nGameServices.service.quests.accept( questId );\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'private function questsAcceptSuccessHandler( event:QuestEvent ):void\n{\n    trace( "ACCEPT SUCCESS: " );\n}\n\nprivate function questsAcceptErrorHandler( event:QuestEvent ):void\n{\n    trace( "ACCEPT ERROR:" + event.message );\n}\n')),Object(s.b)("p",null,"Once a quest has been accepted, any events that occur that contribute to a quest will automatically\nbe added towards the players quest progress and when the conditions are met the quest will be marked\nas completed and a small service UI element will be displayed to the user."),Object(s.b)("p",null,"You should make sure you call the ",Object(s.b)("inlineCode",{parentName:"p"},"listenForCompletion")," function at some point before you increment\nany events and also add an event listener for the ",Object(s.b)("inlineCode",{parentName:"p"},"QuestEvent.QUEST_COMPLETED"),". This makes sure your\napplication has registered for quest completion events."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),"GameServices.service.quests.addEventListener( QuestEvent.QUEST_COMPLETED, questsCompletedHandler );\nGameServices.service.quests.addEventListener( QuestEvent.QUEST_CLAIM_SUCCESS, questsClaimSuccessHandler );\nGameServices.service.quests.addEventListener( QuestEvent.QUEST_CLAIM_ERROR, questsClaimErrorHandler );\n\n// Calling this enables the QUEST_COMPLETED event when your player completes a quest\nGameServices.service.quests.listenForCompletion();\n")),Object(s.b)("p",null,'Once a quest is completed your user can "claim" the reward. You can do this in your interface by\ncalling the ',Object(s.b)("inlineCode",{parentName:"p"},"GameServices.service.quests.claim()")," function when you require or the user can claim a\nreward through the native UI. You should account for both scenarios by making sure you always have\nan event listener for the ",Object(s.b)("inlineCode",{parentName:"p"},"QuestEvent.QUEST_CLAIM_SUCCESS")," event, and reward your player when this\nevent occurs."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'private function questsCompletedHandler( event:QuestEvent ):void\n{\n    var quest:Quest = event.quests[0];\n    trace( "QUEST COMPLETED: " + quest.questId + "::"+ quest.currentMilestone.milestoneId );\n    \n    // Call this when your user claims the reward\n    GameServices.service.quests.claim( quest.questId, quest.currentMilestone.milestoneId );\n}\n\nprivate function questsClaimSuccessHandler( event:QuestEvent ):void\n{\n    // Use the rewardData as required to give your player the quest reward\n    trace( "CLAIM SUCCESS: " + event.quests[0].currentMilestone.rewardData.toString() );\n}\n\nprivate function questsClaimErrorHandler( event:QuestEvent ):void\n{\n    trace( "CLAIM ERROR:" + event.message );\n}\n')))}l.isMDXComponent=!0},807:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return b}));var a=n(0),s=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=s.a.createContext({}),u=function(e){var t=s.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return s.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},v=s.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=u(n),v=a,b=p["".concat(c,".").concat(v)]||p[v]||d[v]||r;return n?s.a.createElement(b,i(i({ref:t},l),{},{components:n})):s.a.createElement(b,i({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,c=new Array(r);c[0]=v;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<r;l++)c[l]=n[l];return s.a.createElement.apply(null,c)}return s.a.createElement.apply(null,n)}v.displayName="MDXCreateElement"}}]);
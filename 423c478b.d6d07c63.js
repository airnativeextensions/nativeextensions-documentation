(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{1065:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-apns-f04624b845d50e0624d49fc3b45ef2a1.png"},1066:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-apns-remote_notif_simple-eb2c5f4d37a88b7a9680b9ad9f66a2fe.png"},1067:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-csr1-5570fa59e18fa166e0b5b6ab17ca0bc2.png"},1068:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-csr2-67c2182a49ac34c778c4d4daac430f49.png"},1069:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-csr3-6984fdfe83a83aa6a007d73c2dd01cb0.png"},1070:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-profile1-e9696778529364d10d9f338d2d0d10fd.png"},1071:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-profile2-1d4181af9aa9bf6366cb16ec882c522b.png"},1072:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-profile3-c0d3b6fd88aee14988f0a577458f3bf4.png"},1073:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-profile4-d283160387c3c426b09516f2ae827633.png"},1074:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-profile5-1f91b37effff30195b3ca12755621432.png"},1075:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-profile6-227da6560b055322d74eebb518adf7e1.png"},1076:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-profile7-ea964f6a3237596bbcd6b9f08d2bc8cf.png"},1077:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-profile8-eb5e536a16e9ad60eb190b5d51e7666d.png"},1078:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/pushnotifications-tutorial-profile9-f9958c259b55c6adc033e91472906320.png"},1079:function(e,t,i){"use strict";i.r(t),t.default=i.p+"assets/images/apns_critical_alerts-c264054e4f7e22484e9883bbd7429bce.jpg"},287:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return r})),i.d(t,"metadata",(function(){return s})),i.d(t,"rightToc",(function(){return l})),i.d(t,"default",(function(){return p}));var n=i(2),o=i(6),a=(i(0),i(886)),r={title:"Apple Push Notification Service",sidebar_label:"Apple Push Notification Service"},s={unversionedId:"pushnotifications/apple/apple-push-notification-service",id:"pushnotifications/apple/apple-push-notification-service",isDocsHomePage:!1,title:"Apple Push Notification Service",description:"Required ANEs",source:"@site/docs/pushnotifications/apple/apple-push-notification-service.md",slug:"/pushnotifications/apple/apple-push-notification-service",permalink:"/docs/pushnotifications/apple/apple-push-notification-service",version:"current",sidebar_label:"Apple Push Notification Service",sidebar:"pushnotifications",previous:{title:"Add the Extension",permalink:"/docs/pushnotifications/add-the-extension"},next:{title:"Firebase Cloud Messaging",permalink:"/docs/pushnotifications/firebase/firebase-cloud-messaging"}},l=[{value:"Required ANEs",id:"required-anes",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"APNS Data Packet",id:"apns-data-packet",children:[]},{value:"Caveats and Characteristics",id:"caveats-and-characteristics",children:[]},{value:"Certificates",id:"certificates",children:[{value:"Certificate Signing Request (CSR)",id:"certificate-signing-request-csr",children:[]},{value:"iOS Provisioning Portal",id:"ios-provisioning-portal",children:[]},{value:"Using the Certificate",id:"using-the-certificate",children:[]}]},{value:"Info Additions and Entitlements",id:"info-additions-and-entitlements",children:[{value:"Background notifications",id:"background-notifications",children:[]},{value:"Critical Alerts",id:"critical-alerts",children:[]}]}],c={rightToc:l};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"required-anes"},"Required ANEs"),Object(a.b)("p",null,"APNS is supported by all of the ANEs in the repository. It is integrated into the iOS SDK so requires no additional SDKs or frameworks so we have included it in every ANE.  "),Object(a.b)("p",null,"Make sure you have added the common ANEs from the ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"../add-the-extension"}),"Add the Extension")," section. This includes the Core and Android Support ANEs. There are no additional ANEs required to use APNS."),Object(a.b)("h1",{id:"setup"},"Setup"),Object(a.b)("p",null,"Apple Push Notification Service (APNS) is the push notification system for use on\niOS with iPhones, iPads and other such iOS devices."),Object(a.b)("p",null,"The system is quite complex and has a lot of different components as you can see\nin the diagram below."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1065).default})),Object(a.b)("p",null,"When the device finally receives the notification, the notification will be displayed\nto the user (depending on the options specified in the notification, more about these\nlater). The user can then respond to the notification as they see fit, dismissing it\nor opening your application."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1066).default})),Object(a.b)("p",null,"Your server will be required to implement a solution to gather device tokens and to\nsend the notification to the APNS server with the required devices specified. This\nsolution will not be part of this tutorial but we will show you everything up to and\nincluding sending a test notification."),Object(a.b)("h2",{id:"requirements"},"Requirements"),Object(a.b)("p",null,"Before we start, it\u2019s important to check that you have all of the following:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"An iOS device (they do not work in the simulator)"),Object(a.b)("li",{parentName:"ul"},"An iOS Developer program membership"),Object(a.b)("li",{parentName:"ul"},"A server connected to the internet, ideally that can run background processes\n(for testing this can simply be a local installation of Apache + PHP)"),Object(a.b)("li",{parentName:"ul"},"Access to an OSX machine.")),Object(a.b)("p",null,"It\u2019s important that you have all of these organised before starting the APNS setup.\nIt is potentially possible to do parts of this without an OSX machine but we won\u2019t\nbe showing that in this tutorial."),Object(a.b)("h2",{id:"apns-data-packet"},"APNS Data Packet"),Object(a.b)("p",null,"It\u2019s important to understand that at the very base of the APNS implementation is a\nvery simple JSON packet. They are intended to be small, delivering only the simplest\namount of information and can be no more than 256 bytes."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "aps":\n    {\n        "alert": "A notification message",\n        "sound": "default"\n    }\n}\n')),Object(a.b)("p",null,"The notification packet can contain a range of information that will determine what\nhappens on the phone when the packet is received."),Object(a.b)("p",null,"Details on the notification payload are best described in the ",Object(a.b)("em",{parentName:"p"},"\u201cLocal and Push Notification Programming Guide\u201d"),"\nas part of the iOS Developer Library Documentation. "),Object(a.b)("p",null,"You can find this ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CreatingtheNotificationPayload.html"}),"here"),"."),Object(a.b)("h2",{id:"caveats-and-characteristics"},"Caveats and Characteristics"),Object(a.b)("p",null,"Firstly and foremost, push notifications are not reliable and the APNS server does\nnot guarantee delivery of a notification that your server sends it. The delivery\ntime will also vary from a few seconds up to half an hour."),Object(a.b)("p",null,"Additionally a device may not be able to receive a notification, for instance it\nmay be on a network that blocks the ports used for push notification communication.\nOr it could be as simple as the device is switched off."),Object(a.b)("p",null,"Push notifications will become expensive if you don\u2019t prepare for it. You must take\ncare that your application when deployed to lots of users doesn\u2019t quickly use your\nnotification quotas. Be aware of what notifications are being sent to your\napplications and be prepared to pay if you don\u2019t."),Object(a.b)("p",null,"You must take these into consideration when designing your notifications system."),Object(a.b)("p",null,"Lastly, you must abide by the Apple App Store Review Guidelines for Push Notifications.\nThey are all fairly reasonable but it\u2019s always important to check before you design\nyour application requirements."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.apple.com/appstore/resources/approval/guidelines.html"}),"Review Guidelines"))),Object(a.b)("h2",{id:"certificates"},"Certificates"),Object(a.b)("p",null,"This is the painful part of the APNS setup, gathering all the required provisioning\nprofiles and certificates. Get a cup of coffee and take your time through the process\nand you won\u2019t end up pulling your hair out."),Object(a.b)("p",null,"There are two different provisioning profiles associated with an application,\nthe ",Object(a.b)("strong",{parentName:"p"},"development")," and the ",Object(a.b)("strong",{parentName:"p"},"distribution")," (or production) profiles.\nSimilarly there are two types of certificates for your application server to use\nto communicate with the APNS server:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Development - for use when you\u2019re running your application in debug mode and signed with the developer profile. With this certificate you can talk to the APNS sandbox environment to test your application."),Object(a.b)("li",{parentName:"ul"},"Production - for use when you are distributing your application either as an ad-hoc application or through the AppStore.")),Object(a.b)("p",null,"If you use the wrong certificate then the push notification will fail and your\napplication won\u2019t receive the notification. The process for creating these certificates\nis very similar for both cases so we\u2019ll just concentrate on the development profiles\nand certificates."),Object(a.b)("h3",{id:"certificate-signing-request-csr"},"Certificate Signing Request (CSR)"),Object(a.b)("p",null,"This process is very similar to when you first created your developer account in the\niOS developer program. These certificates are based off the classic form of\npublic-private key cryptography, but don\u2019t worry you don\u2019t need to know anything\nabout them to make this work. Just be aware that you will be creating certificates\nand exchanging them between the apple servers and yourself."),Object(a.b)("p",null,"Most importantly you will create a certificate that is to be used to communicate from\nyour server to the APNS servers. This is different and separate from your developer\ncertificates you use to sign your applications. It is however \u201cprivate\u201d and you should\nnot share the certificate with anyone not related to the development of these\npush notifications."),Object(a.b)("p",null,"To create these certificates you create a ",Object(a.b)("strong",{parentName:"p"},"\u201cCertificate Signing Request\u201d (CSR)")," and\nsend the CSR to a certificate issuing authority, in this case the APNS section of the\niOS developer portal. The authority then issues you with a certificate that you can\nuse to secure your communications."),Object(a.b)("p",null,"On OSX you will create your CSR by using the ",Object(a.b)("strong",{parentName:"p"},"Keychain Access")," application.\nYou will find this in the following location:"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Applications / Utilities / Keychain Access")),Object(a.b)("p",null,"Choose the option under the main application menu (as shown in the screenshot below):"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Keychain Access / Certificate Assistant / Request a Certificate From a Certificate Authority...")),Object(a.b)("p",null,Object(a.b)("img",{src:i(1067).default})),Object(a.b)("p",null,"You should then be presented with a window asking for some details about the certificate request."),Object(a.b)("p",null,"Here you should enter your email address, it\u2019s recommended you use the same email as\nyou use to sign up for the developer program but this is not essential, and a common\nname for your certificate. The common name just needs to be something descriptive to\nallow you to easily identify the certificate."),Object(a.b)("p",null,"Make sure you\u2019ve checked the Saved to disk option and then click Continue. Save the\nfile somewhere convenient, you will need it again soon. We suggest you change the name\nof the file to something like ",Object(a.b)("inlineCode",{parentName:"p"},"ApplicationPushNotifications.certSigningRequest"),"."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1068).default})),Object(a.b)("p",null,"Next we need to export the private key as a p12 file. To do this return to the Keychain\nAccess program and open the keys category. You should be able to see a public and a\nprivate key with the Common name you used in the previous step. You can also use the\nsearch in the top left to locate them."),Object(a.b)("p",null,"We export this certificate by right clicking on the private key and selecting export."),Object(a.b)("p",null,"You will need to enter a passphrase, which will be used to protect your private key.\nYou should enter something that is secure but also that you can easily recall. Normal\nrules with passwords apply here!"),Object(a.b)("p",null,Object(a.b)("img",{src:i(1069).default})),Object(a.b)("p",null,"Now we move on to the provisioning in the iOS portal."),Object(a.b)("h3",{id:"ios-provisioning-portal"},"iOS Provisioning Portal"),Object(a.b)("p",null,"Now you will need to log into your iOS Provisioning Portal with your iOS developer Apple ID: "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.apple.com/account/ios/profile/profileList.action"}),"https://developer.apple.com/account/ios/profile/profileList.action"))),Object(a.b)("p",null,"Here we are going to make a new application ID and use the CSR to create an SSL certificate\nfor your application server communications."),Object(a.b)("p",null,"You can update an existing application ID to include push notifications, as long as you\nfollow the steps after creating the application ID to enable push notifications in your\napplication and make sure you download the provisioning profile for the application again!\nIt will have changed and won\u2019t work if you don\u2019t update your profile."),Object(a.b)("p",null,"To make a new application ID, go to the App IDs section on the left and click the New App ID button."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1070).default})),Object(a.b)("p",null,"You will then be presented with the \u201cCreate App ID\u201d form. Enter your application details, for example:"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"Description:               Distriqt Test Application\nBundle Identifier:         com.distriqt.test\n")),Object(a.b)("p",null,"Take note of the ",Object(a.b)("strong",{parentName:"p"},"Bundle Seed ID (App ID Prefix)")," and the ",Object(a.b)("strong",{parentName:"p"},"Bundle Identifier (App ID Suffix)"),".\nWe will need these later."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1071).default})),Object(a.b)("p",null,"After you have created the application it will appear in your App ID list, with something like the following beside it. Note that Push Notifications are listed as \u201cConfigurable\u201d, both for development and production."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1072).default})),Object(a.b)("p",null,"Click Configure. You should then be presented with the Configure App ID page. Look for the section as shown below and click the checkbox to enable the App ID for Apple Push Notification service. This should activate the Configure actions on the right. Click the button beside the Development Push SSL Certificate. (You can come back to this same place to configure the production certificate at a later date)."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1073).default})),Object(a.b)("p",null,"This will now ask you to upload the CSR file we created earlier. This is the ApplicationPushNotifications.certSigningRequest file not the p12 file. Choose the file and click Generate."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1074).default})),Object(a.b)("p",null,'Your certificate should now get generated and after a while you\'ll get a message saying "Your APNs SSL Certificate has been generated. Please continue to the next step".'),Object(a.b)("p",null,Object(a.b)("img",{src:i(1075).default})),Object(a.b)("p",null,"You will now get to download the SSL certificate. Click download and save the certificate somewhere safe. It should be called aps_development.cer. We suggest you rename it to something matching the application that it\u2019s associated with."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1076).default})),Object(a.b)("p",null,"You should now see the Status for the Development Push SSL Certificate is green and labelled as Enabled."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1077).default})),Object(a.b)("p",null,"You should see the expiration date of the certificate listed. It is very important that you note this date and make sure you return and update the certificate before the date is reached. Otherwise you will experience a period where notifications will not work in your application!"),Object(a.b)("p",null,"Lastly while we\u2019re still in the Provisioning Portal lets create a provisioning profile for the application. Go to the Provisioning section and on the Development tab, click New Profile."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1078).default})),Object(a.b)("p",null,"Give the profile a name and select the App ID you\u2019ve just created, along with any devices you wish to test on. Make sure you select your developer certificate from the Certificates section. Click Submit and the profile will be generated."),Object(a.b)("p",null,"This is no different from any other provisioning profile, all we are doing is making sure we retrieve the profile after the application has been setup for push notifications."),Object(a.b)("p",null,"You may need to refresh the page if the profile still is in the Pending state."),Object(a.b)("p",null,"Click the Download action and save the provisioning profile file along with all your other development files. You won\u2019t need to use this file on your application server, you simply have to use this to develop your application."),Object(a.b)("h3",{id:"using-the-certificate"},"Using the Certificate"),Object(a.b)("p",null,"You should have 3 files saved somewhere at this point (ignoring the mobile provisioning file):"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"the Certificate Signing Request (CSR)"),Object(a.b)("li",{parentName:"ul"},"the private key - exported as a ",Object(a.b)("inlineCode",{parentName:"li"},"p12")," file"),Object(a.b)("li",{parentName:"ul"},"the SSL certificate downloaded from the iOS provisioning portal (",Object(a.b)("inlineCode",{parentName:"li"},"aps_development.cer"),")")),Object(a.b)("p",null,"These files are very important in the communication between your application server\nand the APNS servers. It\u2019s suggested you keep them in a safe place. You can throw\nthe CSR away if you wish but we\u2019ve always kept them. If you need to renew the\ncertificates at a later date you can use the same CSR and skip a few of the\nearlier steps."),Object(a.b)("p",null,"What we need to do now is convert the certificate and private key into a format that\nwe can use easily."),Object(a.b)("p",null,"Our test notification example for APNS uses PHP so we will convert them into a\nsingle file in the PEM format. We will use this PEM file later when we are sending\ntest notifications but here we will show you how to create it."),Object(a.b)("p",null,"We will be using the OpenSSL tools for this. Place the ",Object(a.b)("inlineCode",{parentName:"p"},"p12")," and ",Object(a.b)("inlineCode",{parentName:"p"},"cer")," files into a\ndirectory and open a Terminal window in that directory. We are going to create ",Object(a.b)("inlineCode",{parentName:"p"},"pem"),"\nfiles from each of the ",Object(a.b)("inlineCode",{parentName:"p"},"p12")," and ",Object(a.b)("inlineCode",{parentName:"p"},"cer")," files and then combine them into a single file."),Object(a.b)("p",null,"Convert the ",Object(a.b)("inlineCode",{parentName:"p"},"cer")," file to ",Object(a.b)("inlineCode",{parentName:"p"},"pem"),":"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"openssl x509 -in aps_developer_identity.cer -inform der -out YOUR_CERTIFICATE.pem\n")),Object(a.b)("p",null,"Convert the ",Object(a.b)("inlineCode",{parentName:"p"},"p12")," file into a ",Object(a.b)("inlineCode",{parentName:"p"},"pem")," file. "),Object(a.b)("p",null,"It will ask you for the password to the private key. This is the password you used\nwhen you exported the key from your Keychain. It should then ask you for a new\n\u201cPEM pass phrase\u201d, this is a separate password to the PEM file you are creating so\nagain use something secure. You must enter a passphrase. If you don\u2019t your private\nkey may not get included correctly in the final PEM."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"openssl pkcs12 -nocerts -out YOUR_PRIVATE_KEY.pem -in YOUR_PRIVATE_KEY.p12\n")),Object(a.b)("p",null,"Finally, combine the two files:"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"cat YOUR_CERTIFICATE.pem YOUR_PRIVATE_KEY.pem > ck.pem\n")),Object(a.b)("p",null,"This ",Object(a.b)("inlineCode",{parentName:"p"},"ck.pem")," file is what we will use in the php script later so keep this file handy."),Object(a.b)("p",null,"You can test the connection to the APNS sandbox (sandbox as we created the development\ncertificate through this process) at this point if you wish with the following command:"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"openssl s_client -connect gateway.sandbox.push.apple.com:2195 -cert YOUR_CERTIFICATE.pem -key YOUR_PRIVATE_KEY.pem\n")),Object(a.b)("p",null,"This should connect to the server and dump out a whole heap of information about\nthe process. Eventually after the successful connection you should be able to\ntype a few characters and the server should disconnect."),Object(a.b)("h2",{id:"info-additions-and-entitlements"},"Info Additions and Entitlements"),Object(a.b)("p",null,"Push notifications require a few additions to the Info plist and Entitlements section\nof your application to correctly configure your application for push notifications. "),Object(a.b)("p",null,"You should add the listing below to application descriptor iPhone node."),Object(a.b)("p",null,"You must replace the ",Object(a.b)("inlineCode",{parentName:"p"},"BUNDLE_SEED_ID")," and ",Object(a.b)("inlineCode",{parentName:"p"},"BUNDLE_IDENTIFIER")," with the information you\ngathered when setting up your application. Also make sure you set the environment\ncorrectly either using production or development, both are shown in the example\nbelow with the production version commented out. More on this below."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-xml"}),"<iPhone>\n    <InfoAdditions><![CDATA[\n        <key>UIPrerenderedIcon</key>\n        <true/>\n        \n        <key>UIDeviceFamily</key>\n        <array>\n            <string>1</string>\n            <string>2</string>\n        </array>\n    \n        \n    ]]></InfoAdditions>\n    <requestedDisplayResolution>high</requestedDisplayResolution>\n    <Entitlements><![CDATA[\n        \n        \x3c!-- DEVELOPMENT --\x3e\n        <key>get-task-allow</key>\n        <true/>\n        <key>aps-environment</key>\n        <string>development</string>\n        \n        \x3c!-- PRODUCTION --\x3e\n        \x3c!--\n        <key>get-task-allow</key>\n        <false/>\n        <key>aps-environment</key>\n        <string>production</string>\n        --\x3e\n        \n        <key>application-identifier</key>\n        <string>BUNDLE_SEED_ID.BUNDLE_IDENTIFIER</string>\n        <key>keychain-access-groups</key>\n        <array>\n            <string>BUNDLE_SEED_ID.*</string>\n        </array>\n        \n    ]]></Entitlements>\n</iPhone>\n")),Object(a.b)("p",null,"The first entitlement field is the ",Object(a.b)("inlineCode",{parentName:"p"},"aps-environment"),". This field indicates whether\nwe are using the development or the production environment. It must be either\n",Object(a.b)("inlineCode",{parentName:"p"},"development")," or ",Object(a.b)("inlineCode",{parentName:"p"},"production")," and depends on which configuration you are using.\nIf you are running a debug build you should use development. If you are looking\nto publish the application to the AppStore, you should use production."),Object(a.b)("p",null,"You should have noted the ",Object(a.b)("inlineCode",{parentName:"p"},"BUNDLE_SEED_ID")," (or App ID Prefix) and ",Object(a.b)("inlineCode",{parentName:"p"},"BUNDLE_IDENTIFIER"),"\nwhen you were setting up your application in the iOS developer center.\nThe seed id should be a unique ten character string and the identifier should be\nsimilar to your AIR application id."),Object(a.b)("h3",{id:"background-notifications"},"Background notifications"),Object(a.b)("p",null,"If you are planning to setup your application to receive background notifications\nthen you should include the UIBackgroundModes key:"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-xml"}),"        <key>UIBackgroundModes</key>\n        <array>\n            <string>remote-notification</string>\n        </array>\n")),Object(a.b)("p",null,"However it is not required if you do not wish to include it. "),Object(a.b)("p",null,"If it is enabled, you will be able to send silent notifications in the background\nto trigger an event when your application is running in the background.\nIf you do not include it, then you will only receive the notification events in\nthe background when the user clicks a notification."),Object(a.b)("h3",{id:"critical-alerts"},"Critical Alerts"),Object(a.b)("p",null,"Critical alerts are important notifications that will ignore Do Not Disturb mode, and ringer settings, so they cannot be muted."),Object(a.b)("p",null,"This is an opt-in service and developers must request approval from Apple in order to add this feature to an application. Generally only applications that send notifications related to health, public safety and home security are approved."),Object(a.b)("p",null,Object(a.b)("img",{src:i(1079).default})),Object(a.b)("p",null,"If you are approved by Apple then to enable critical alerts you will need to add the following to your ",Object(a.b)("inlineCode",{parentName:"p"},"Entitlements")," section:"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-xml"}),"<key>com.apple.developer.usernotifications.critical-alerts</key>\n<true/>\n")),Object(a.b)("p",null,"Additionally you will need to request authorisation from the user. This is handled as part of the normal authorisation process however you need to inform the extension that you require critical alerts by calling ",Object(a.b)("inlineCode",{parentName:"p"},"setShouldRequestCriticalAlerts()")," on your ",Object(a.b)("inlineCode",{parentName:"p"},"Service")," configuration:"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-actionscript"}),"var service:Service = new Service() \n    .setShouldRequestCriticalAlerts();\n\n// Other service options\n\n\n")))}p.isMDXComponent=!0},886:function(e,t,i){"use strict";i.d(t,"a",(function(){return u})),i.d(t,"b",(function(){return b}));var n=i(0),o=i.n(n);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,o=function(e,t){if(null==e)return{};var i,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var c=o.a.createContext({}),p=function(e){var t=o.a.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):s(s({},t),e)),i},u=function(e){var t=p(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,a=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(i),d=n,b=u["".concat(r,".").concat(d)]||u[d]||h[d]||a;return i?o.a.createElement(b,s(s({ref:t},c),{},{components:i})):o.a.createElement(b,s({ref:t},c))}));function b(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=i.length,r=new Array(a);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var c=2;c<a;c++)r[c]=i[c];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,i)}d.displayName="MDXCreateElement"}}]);
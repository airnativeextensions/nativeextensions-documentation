(window.webpackJsonp=window.webpackJsonp||[]).push([[333],{387:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return u}));var a=t(2),r=(t(0),t(448));const o={title:"Key-Value Storage",sidebar_label:"Key-Value Storage"},l={unversionedId:"cloudstorage/key-value-storage",id:"cloudstorage/key-value-storage",isDocsHomePage:!1,title:"Key-Value Storage",description:"The key-value storage system can be broken down into several main concepts:",source:"@site/docs/cloudstorage/key-value-storage.md",slug:"/cloudstorage/key-value-storage",permalink:"/docs/cloudstorage/key-value-storage",version:"current",sidebar_label:"Key-Value Storage",sidebar:"cloudstorage",previous:{title:"Add the Extension",permalink:"/docs/cloudstorage/add-the-extension"},next:{title:"Document Store",permalink:"/docs/cloudstorage/document-store"}},i=[{value:"Example",id:"example",children:[]}],c={rightToc:i};function u({components:e,...n}){return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The key-value storage system can be broken down into several main concepts:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"setting a value;"),Object(r.b)("li",{parentName:"ul"},"getting a value;"),Object(r.b)("li",{parentName:"ul"},"listen for changes;")),Object(r.b)("p",null,"This represents all the functionality you will need to implement to be able to successfully\nstore values in the cloud. Firstly to set a value, you call ",Object(r.b)("inlineCode",{parentName:"p"},"KeyValueStore.setString"),", which\ntakes a ",Object(r.b)("inlineCode",{parentName:"p"},"key")," and a ",Object(r.b)("inlineCode",{parentName:"p"},"value")," as parameters. "),Object(r.b)("p",null,"You can then retrieve the value using ",Object(r.b)("inlineCode",{parentName:"p"},"KeyValueStore.getString")," providing the same ",Object(r.b)("inlineCode",{parentName:"p"},"key")," as\na parameter which will then return the value set previously."),Object(r.b)("p",null,"The extension will dispatch events when the values are changed (on another device) and when\nother system events occur:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Changed: Indicates a value has changed and the event will contain an array of keys that changed",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"AIR: ",Object(r.b)("inlineCode",{parentName:"li"},"KeyValueStoreEvent.CHANGED")),Object(r.b)("li",{parentName:"ul"},"Unity: ",Object(r.b)("inlineCode",{parentName:"li"},"OnChanged")))),Object(r.b)("li",{parentName:"ul"},"Over Quota: Your app's key-value store has exceeded its space quota on the server",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"AIR: ",Object(r.b)("inlineCode",{parentName:"li"},"KeyValueStoreEvent.OVER_QUOTA")),Object(r.b)("li",{parentName:"ul"},"Unity: ",Object(r.b)("inlineCode",{parentName:"li"},"OnOverQuota")))),Object(r.b)("li",{parentName:"ul"},"Account Changed: The user's account was changed",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"AIR: ",Object(r.b)("inlineCode",{parentName:"li"},"KeyValueStoreEvent.ACCOUNT_CHANGED")),Object(r.b)("li",{parentName:"ul"},"Unity: ",Object(r.b)("inlineCode",{parentName:"li"},"OnAccountChanged")))),Object(r.b)("li",{parentName:"ul"},"Initial Sync: The initial data synchronisation from the server was received",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"AIR: ",Object(r.b)("inlineCode",{parentName:"li"},"KeyValueStoreEvent.INITIAL_SYNC")),Object(r.b)("li",{parentName:"ul"},"Unity: ",Object(r.b)("inlineCode",{parentName:"li"},"OnInitialSync"))))),Object(r.b)("p",null,"More information see the ",Object(r.b)("inlineCode",{parentName:"p"},"KeyValueStoreEvent")," class documentation."),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)("p",null,"The following example shows the core concepts, setting then retrieving a value and listening\nto the ",Object(r.b)("inlineCode",{parentName:"p"},"KeyValueStoreEvent.CHANGED")," (",Object(r.b)("inlineCode",{parentName:"p"},"OnChanged")," on Unity) event."),Object(r.b)("p",null,"AIR: "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-actionscript"}),'CloudStorage.service.keyValueStore.addEventListener( KeyValueStoreEvent.CHANGED, keyStore_changedHandler );\nCloudStorage.service.keyValueStore.synchronise();\n\n// Set a value\nCloudStorage.service.keyValueStore.setString( "KEY_FOR_VALUE", newValue );\n\n// Retrieve the value\nvar value:String = CloudStorage.service.keyValueStore.getString( "KEY_FOR_VALUE" );\n\n\nfunction keyStore_changedHandler( event:KeyValueStoreEvent ):void\n{\n    trace( "KeyStore CHANGED" );\n    // event.changedKeys contains an array of changed keys\n}\n')),Object(r.b)("p",null,"Unity:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-csharp"}),'CloudStorage.Instance.OnChanged += Instance_OnChanged;\nCloudStorage.Instance.Synchronise();\n\n// Set a value\nCloudStorage.Instance.SetString( "KEY_FOR_VALUE", "some_value" );\n\n// Retrieve the value\nstring value = CloudStorage.Instance.GetString( "KEY_FOR_VALUE" )\n\n\n\nprivate void Instance_OnChanged(KeyValueStoreEvent e)\n{\n    Debug.Log("OnChanged");\n    // e.changedKeys contains an array of changed keys\n    foreach (string key in e.changedKeys)\n    {\n        Debug.Log("OnChanged: " + key);\n    }\n}\n')))}u.isMDXComponent=!0},448:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return g}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=r.a.createContext({}),s=function(e){var n=r.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},b=function(e){var n=s(e.components);return r.a.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),b=s(t),d=a,g=b["".concat(l,".").concat(d)]||b[d]||p[d]||o;return t?r.a.createElement(g,i(i({ref:n},u),{},{components:t})):r.a.createElement(g,i({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[77537],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},w="mdxType",v={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),w=s(n),d=a,b=w["".concat(c,".").concat(d)]||w[d]||v[d]||r;return n?i.createElement(b,o(o({ref:t},p),{},{components:n})):i.createElement(b,o({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[w]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},70288:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>v,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var i=n(87462),a=(n(67294),n(3905));const r={title:"Create a WebView",sidebar_label:"Create a WebView"},o=void 0,l={unversionedId:"nativewebview/create-a-webview",id:"nativewebview/create-a-webview",title:"Create a WebView",description:"Once you have initialised the extension, creating a web view is simply a matter of calling the createWebView() function with your parameters.",source:"@site/docs/nativewebview/create-a-webview.md",sourceDirName:"nativewebview",slug:"/nativewebview/create-a-webview",permalink:"/docs/nativewebview/create-a-webview",draft:!1,tags:[],version:"current",frontMatter:{title:"Create a WebView",sidebar_label:"Create a WebView"},sidebar:"nativewebview",previous:{title:"Initialise the Extension",permalink:"/docs/nativewebview/initialise-the-extension"},next:{title:"WebView Information",permalink:"/docs/nativewebview/webview-information"}},c={},s=[{value:"Web View Options",id:"web-view-options",level:2},{value:"Link Target Action",id:"link-target-action",level:3}],p={toc:s},w="wrapper";function v(e){let{components:t,...n}=e;return(0,a.kt)(w,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Once you have initialised the extension, creating a web view is simply a matter of calling the ",(0,a.kt)("inlineCode",{parentName:"p"},"createWebView()")," function with your parameters."),(0,a.kt)("p",null,"The following example creates a ",(0,a.kt)("inlineCode",{parentName:"p"},"WebView")," of size 400x600 and loads a URL. It also demonstrates some of the events dispatched by the WebView."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"var viewPort:Rectangle = new Rectangle( 0, 0, 400, 600 );\n            \nvar webView:WebView = NativeWebView.service.createWebView( viewPort ) ;\n")),(0,a.kt)("p",null,"You can then attach listeners and load content into the view"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'webView.addEventListener( NativeWebViewEvent.LOCATION_CHANGE, webView_locationChangeHandler );\nwebView.addEventListener( NativeWebViewEvent.COMPLETE, webView_completeHandler );\nwebView.addEventListener( NativeWebViewEvent.ERROR, webView_errorHandler );\n\nwebView.loadURL( "https://airnativeextensions.com" );\n')),(0,a.kt)("p",null,"The events give you information about the content in the view"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'function webView_locationChangeHandler( event:NativeWebViewEvent ):void\n{\n    trace( "location change: " + event.data );\n}\n\nfunction webView_completeHandler( event:NativeWebViewEvent ):void\n{\n    trace( "load complete: " + event.data );\n}\n\nfunction webView_errorHandler( event:NativeWebViewEvent ):void\n{\n    trace( "error: " + event.data );\n}\n')),(0,a.kt)("h2",{id:"web-view-options"},"Web View Options"),(0,a.kt)("p",null,"When creating a ",(0,a.kt)("inlineCode",{parentName:"p"},"WebView")," you can specify some options as to how the view will handle certain content and interactions."),(0,a.kt)("p",null,"To do so, create an instance of the ",(0,a.kt)("inlineCode",{parentName:"p"},"WebViewOptions")," class and set the options as required. ",(0,a.kt)("em",{parentName:"p"},"Some of these options are platform dependent so make sure you read the documentation in the ",(0,a.kt)("inlineCode",{parentName:"em"},"WebViewOptions")," class.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"var options:WebViewOptions = new WebViewOptions();\n\noptions.mediaPlaybackRequiresUserAction = true;\noptions.allowInlineMediaPlayback = true;\noptions.backgroundEnabled = true;\noptions.allowZooming = true;\noptions.cachePolicy = CachePolicy.LOAD_NO_CACHE;\noptions.scrollBarStyle = WebViewOptions.SCROLLBAR_LIGHT;\n")),(0,a.kt)("p",null,"This then gets passed as the second parameter to the ",(0,a.kt)("inlineCode",{parentName:"p"},"createWebView()")," function:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"var webView:WebView = NativeWebView.service.createWebView( viewPort, options );\n")),(0,a.kt)("h3",{id:"link-target-action"},"Link Target Action"),(0,a.kt)("p",null,"The link target action option determines how links with ",(0,a.kt)("inlineCode",{parentName:"p"},'"_blank"')," targets are handled. In a normal browser situation these would open a new tab/window however in our environment you have the following options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"LinkTargetAction.SYSTEM_BROWSER"),": New windows / popups from blank targets will open in the system browser;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"LinkTargetAction.CURRENT_WEBVIEW"),": Blank targets will load in the current webview;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"LinkTargetAction.BLOCK"),": Blank targets will be blocked, the ",(0,a.kt)("inlineCode",{parentName:"li"},"NativeWebViewEvent.LINK_BLOCKED")," event will be dispatched if you wish to handle them in your code.")),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'var options:WebViewOptions = new WebViewOptions();\noptions.linkTargetAction = LinkTargetAction.BLOCK;\n\nvar webView:WebView = NativeWebView.service.createWebView( viewPort, options );\nwebView.addEventListener( NativeWebViewEvent.LINK_BLOCKED, linkBlockedHandler );\n\n\nfunction linkBlockedHandler( event:NativeWebViewEvent ):void \n{\n    trace( "Link was blocked: " + event.data );\n}\n')))}v.isMDXComponent=!0}}]);
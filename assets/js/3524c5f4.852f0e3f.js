"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[2951],{3905:(e,n,i)=>{i.d(n,{Zo:()=>m,kt:()=>u});var t=i(67294);function a(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function c(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){a(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,t,a=function(e,n){if(null==e)return{};var i,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var o=t.createContext({}),s=function(e){var n=t.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):c(c({},n),e)),i},m=function(e){var n=s(e.components);return t.createElement(o.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var i=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=s(i),y=a,u=d["".concat(o,".").concat(y)]||d[y]||p[y]||r;return i?t.createElement(u,c(c({ref:n},m),{},{components:i})):t.createElement(u,c({ref:n},m))}));function u(e,n){var i=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=i.length,c=new Array(r);c[0]=y;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[d]="string"==typeof e?e:a,c[1]=l;for(var s=2;s<r;s++)c[s]=i[s];return t.createElement.apply(null,c)}return t.createElement.apply(null,i)}y.displayName="MDXCreateElement"},67846:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var t=i(87462),a=(i(67294),i(3905));const r={title:"DynamicLinks - Receive Dynamic Links",sidebar_label:"Receive Dynamic Links"},c=void 0,l={unversionedId:"firebase/dynamiclinks/receive-dynamic-links",id:"firebase/dynamiclinks/receive-dynamic-links",title:"DynamicLinks - Receive Dynamic Links",description:"Receive Dynamic Links",source:"@site/docs/firebase/dynamiclinks/receive-dynamic-links.md",sourceDirName:"firebase/dynamiclinks",slug:"/firebase/dynamiclinks/receive-dynamic-links",permalink:"/docs/firebase/dynamiclinks/receive-dynamic-links",draft:!1,tags:[],version:"current",frontMatter:{title:"DynamicLinks - Receive Dynamic Links",sidebar_label:"Receive Dynamic Links"},sidebar:"firebase",previous:{title:"Create Dynamic Links",permalink:"/docs/firebase/dynamiclinks/create-dynamic-links"},next:{title:"Testing",permalink:"/docs/firebase/dynamiclinks/testing"}},o={},s=[{value:"Receive Dynamic Links",id:"receive-dynamic-links",level:2},{value:"Initialising Core callbacks",id:"initialising-core-callbacks",level:2}],m={toc:s},d="wrapper";function p(e){let{components:n,...i}=e;return(0,a.kt)(d,(0,t.Z)({},m,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"receive-dynamic-links"},"Receive Dynamic Links"),(0,a.kt)("p",null,"Receiving dynamic links is simply a matter of listening for the ",(0,a.kt)("inlineCode",{parentName:"p"},"DynamicLinkEvent.RECEIVED")," event."),(0,a.kt)("p",null,"When you add a listener for this event the extension will check for any dynamic links\nthat may have started your application and dispatch them, so you should be prepared to",(0,a.kt)("br",{parentName:"p"}),"\n","receive an event shortly after adding the listener:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},"FirebaseDynamicLinks.service.addEventListener( DynamicLinkEvent.RECEIVED, dynamicLink_receivedHandler );\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"DynamicLinkEvent")," contains a ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," parameter which will be an instance of the ",(0,a.kt)("inlineCode",{parentName:"p"},"PendingDynamicLinkData")," class. The ",(0,a.kt)("inlineCode",{parentName:"p"},"PendingDynamicLinkData")," contains information about the link including the ",(0,a.kt)("inlineCode",{parentName:"p"},"link")," parameter and additional information such as the ",(0,a.kt)("inlineCode",{parentName:"p"},"matchType"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'function dynamicLink_receivedHandler( event:DynamicLinkEvent ):void\n{\n    trace( "dynamicLink_receivedHandler(): " + event.data.link );\n}\n')),(0,a.kt)("h2",{id:"initialising-core-callbacks"},"Initialising Core callbacks"),(0,a.kt)("p",null,"In order to receive events from start up you will need to ensure you call ",(0,a.kt)("inlineCode",{parentName:"p"},"Core.init()")," before initialising any of the Firebase functionality."))}p.isMDXComponent=!0}}]);
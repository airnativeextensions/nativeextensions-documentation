"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[50134],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=u(n),h=a,d=f["".concat(c,".").concat(h)]||f[h]||p[h]||i;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},40974:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],l={title:"Querying Data",sidebar_label:"Querying Data"},c=void 0,u={unversionedId:"health/queries",id:"health/queries",title:"Querying Data",description:"To query data you will create a StatisticsQuery and then pass it to the execute() method. This will query the data specified and when complete call a callback function with the result.",source:"@site/docs/health/queries.md",sourceDirName:"health",slug:"/health/queries",permalink:"/docs/health/queries",draft:!1,tags:[],version:"current",frontMatter:{title:"Querying Data",sidebar_label:"Querying Data"},sidebar:"health",previous:{title:"Authorisation",permalink:"/docs/health/authorisation"},next:{title:"changelog",permalink:"/docs/health/changelog"}},s={},p=[],f={toc:p};function h(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To query data you will create a ",(0,i.kt)("inlineCode",{parentName:"p"},"StatisticsQuery")," and then pass it to the ",(0,i.kt)("inlineCode",{parentName:"p"},"execute()")," method. This will query the data specified and when complete call a callback function with the result."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"var query:StatisticQuery = ...;\n\nHealth.instance.execute( query, callback );\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"callback")," function should be of the form:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"function( result:HealthQueryResult, error:Error ):void\n{\n    // Process query result\n}\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"HealthQueryResult")," contains the result of the query including an array of ",(0,i.kt)("inlineCode",{parentName:"p"},"Statistic")," objects in the ",(0,i.kt)("inlineCode",{parentName:"p"},"result.statistics")," parameter. If an error occurred then the ",(0,i.kt)("inlineCode",{parentName:"p"},"error")," parameter will be non-null and contain the details of the error."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var now:Date = new Date();\nvar startDate:Date = new Date( 2023, 0, 1 );\n\nvar stepQuery:StatisticsQuery = new StatisticsQuery( HealthType.STEP_COUNT )\n        .withStartDate( startDate )\n        .withEndDate( now );\n\nHealth.instance.execute(\n        stepQuery,\n        function ( result:HealthQueryResult, error:Error ):void\n        {\n            if (error != null)\n            {\n                trace( "ERROR: " + error.message );\n                return;\n            }\n            // result will contain query data\n            for each (var stat:Statistic in result.statistics)\n            {\n                trace( stat.startDate.toString() + "::" + stat.sum );\n            }\n        }\n);\n')))}h.isMDXComponent=!0}}]);
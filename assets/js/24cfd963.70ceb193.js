"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[22070],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var s=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,s,a=function(e,n){if(null==e)return{};var t,s,a={},i=Object.keys(e);for(s=0;s<i.length;s++)t=i[s],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)t=i[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=s.createContext({}),l=function(e){var n=s.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=l(e.components);return s.createElement(d.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},p=s.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(t),m=a,S=p["".concat(d,".").concat(m)]||p[m]||c[m]||i;return t?s.createElement(S,r(r({ref:n},u),{},{components:t})):s.createElement(S,r({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=p;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var l=2;l<i;l++)r[l]=t[l];return s.createElement.apply(null,r)}return s.createElement.apply(null,t)}p.displayName="MDXCreateElement"},695:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return r},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return l},default:function(){return c}});var s=t(87462),a=t(63366),i=(t(67294),t(3905)),r={title:"SMS",sidebar_label:"SMS"},o=void 0,d={unversionedId:"message/sms",id:"message/sms",isDocsHomePage:!1,title:"SMS",description:"Sending an SMS with UI",source:"@site/docs/message/sms.md",sourceDirName:"message",slug:"/message/sms",permalink:"/docs/message/sms",tags:[],version:"current",frontMatter:{title:"SMS",sidebar_label:"SMS"},sidebar:"message",previous:{title:"Email",permalink:"/docs/message/email"},next:{title:"Migrating to AndroidX",permalink:"/docs/message/migrating-to-androidx"}},l=[{value:"Sending an SMS with UI",id:"sending-an-sms-with-ui",children:[]},{value:"Android Advanced SMS operations",id:"android-advanced-sms-operations",children:[{value:"Manifest Additions",id:"manifest-additions",children:[]},{value:"Requesting Authorisation",id:"requesting-authorisation",children:[]},{value:"Sending an SMS",id:"sending-an-sms",children:[]},{value:"Subscription Info",id:"subscription-info",children:[]},{value:"Events",id:"events",children:[]}]}],u={toc:l};function c(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,s.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"sending-an-sms-with-ui"},"Sending an SMS with UI"),(0,i.kt)("p",null,"The example below shows how to send an SMS using the native UI:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'if (Message.service.smsManager.isSMSSupported)\n{\n    Message.service.smsManager.addEventListener( MessageSMSEvent.MESSAGE_SMS_CANCELLED, smsEventHandler );\n    Message.service.smsManager.addEventListener( MessageSMSEvent.MESSAGE_SMS_SENT, smsEventHandler );\n    Message.service.smsManager.addEventListener( MessageSMSEvent.MESSAGE_SMS_SENT_ERROR, smsEventHandler );\n                    \n    var sms:SMS = new SMS();\n    sms.address = "0444444444";\n    sms.message = "Sending an SMS with the distriqt Message ANE";\n    \n    Message.service.smsManager.sendSMSWithUI( sms, false );\n}\n\n...\n\nprivate function smsEventHandler( event:MessageSMSEvent ):void\n{\n    trace( event.type +"::"+ event.details + "::"+event.sms.toString() );\n}\n')),(0,i.kt)("h2",{id:"android-advanced-sms-operations"},"Android Advanced SMS operations"),(0,i.kt)("p",null,"On Android you can request permission to directly send and receive SMS messages without\nuser interaction. "),(0,i.kt)("h3",{id:"manifest-additions"},"Manifest Additions"),(0,i.kt)("p",null,"The Message ANE requires a few additions to the manifest to be able to start certain activities and to get permission to send and receive SMS. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest android:installLocation="auto">\n    \n    <uses-permission android:name="android.permission.SEND_SMS" /> \n    <uses-permission android:name="android.permission.READ_SMS" /> \n    <uses-permission android:name="android.permission.RECEIVE_SMS" />\n\n    \x3c!-- To access SIM subscriptions --\x3e\n    <uses-permission android:name="android.permission.READ_PHONE_STATE" />\n\n\n    <application>\n\n        \x3c!-- TO RECEIVE SMS --\x3e\n        <receiver android:name="com.distriqt.extension.message.receivers.MessageSMSReceiver" android:exported="true" > \n            <intent-filter android:priority="1000"> \n                <action android:name="android.provider.Telephony.SMS_RECEIVED" />\n            </intent-filter> \n        </receiver>\n\n    </application>\n\n</manifest>\n')),(0,i.kt)("h3",{id:"requesting-authorisation"},"Requesting Authorisation"),(0,i.kt)("p",null,"Firstly you must request authorisation to send and receive messages. "),(0,i.kt)("p",null,"On Android these permissions are listed through the manifest additions.\nOn older versions of Android these permissions are accepted when the user installs the application.\nMore modern versions (Marshmallow 6 ","[v23]","+) require that you request the permissions similar to iOS.\nYou will still need to list them in your manifest and then follow the same code below as for iOS, except that on Android you will be able to ask multiple times.\nYou should respect the ",(0,i.kt)("inlineCode",{parentName:"p"},"SHOULD_EXPLAIN")," status by displaying additional information to your user about why you require this functionality."),(0,i.kt)("p",null,"The following code will work across both platforms:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"Message.service.smsManager.addEventListener( AuthorisationEvent.CHANGED, authorisationStatus_changedHandler );\n\nswitch (Message.service.smsManager.authorisationStatus())\n{\n    case AuthorisationStatus.SHOULD_EXPLAIN:\n    case AuthorisationStatus.NOT_DETERMINED:\n        // REQUEST ACCESS: This will display the permission dialog\n        Message.service.smsManager.requestAuthorisation();\n        return;\n    \n    case AuthorisationStatus.DENIED:\n    case AuthorisationStatus.UNKNOWN:\n    case AuthorisationStatus.RESTRICTED:\n        // ACCESS DENIED: You should inform your user appropriately\n        return;\n        \n    case AuthorisationStatus.AUTHORISED:\n        // AUTHORISED: SMS will be available\n        break;                      \n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'private function authorisationStatus_changedHandler( event:AuthorisationEvent ):void\n{\n    trace( "authorisationStatus_changedHandler: "+event.status );\n}\n')),(0,i.kt)("h3",{id:"sending-an-sms"},"Sending an SMS"),(0,i.kt)("p",null,"Once you have authorisation, sending an SMS is a simple matter of calling ",(0,i.kt)("inlineCode",{parentName:"p"},"sendSMS"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'if (Message.service.smsManager.isSMSSupported)\n{\n    var sms:SMS = new SMS();\n    sms.address = "0444444444";\n    sms.message = "Testing Message ANE";\n    \n    Message.service.smsManager.sendSMS( sms );\n}\n')),(0,i.kt)("h3",{id:"subscription-info"},"Subscription Info"),(0,i.kt)("p",null,"In some devices there are multiple SIM cards and you may wish to specify the subscription to use to send the SMS."),(0,i.kt)("p",null,"Firstly you must add the additional permission to ",(0,i.kt)("inlineCode",{parentName:"p"},"READ_PHONE_STATE")," to be able to access the subscription information."),(0,i.kt)("p",null,"Then call ",(0,i.kt)("inlineCode",{parentName:"p"},"getSubscriptions()")," to retrieve an array of ",(0,i.kt)("inlineCode",{parentName:"p"},"SubscriptionInfo")," objects representing the different sims."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var subs:Array = Message.service.smsManager.getSubscriptions();\nfor each (var sub:SubscriptionInfo in subs)\n{\n    trace( "SIM: ["+sub.id+"] " + sub.displayName + "/"+sub.carrierName);\n}\n')),(0,i.kt)("p",null,"When sending an SMS you can specify the subscription id to use to send the SMS:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},"Message.service.smsManager.sendSMS( sms, sub.id );\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: This is only supported on Android API v22+. If it is not supported (or if you haven't requested the additional permission) ",(0,i.kt)("inlineCode",{parentName:"p"},"getSubscriptions()")," will return an empty array and the default sim will be used to send messages.")),(0,i.kt)("h3",{id:"events"},"Events"),(0,i.kt)("p",null,"You can listen for several events, as defined in the ",(0,i.kt)("inlineCode",{parentName:"p"},"MessageSMSEvent")," class, see the documentation\nin that class for more information on the events."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'Message.service.smsManager.addEventListener( MessageSMSEvent.MESSAGE_SMS_CANCELLED,     smsEventHandler );\nMessage.service.smsManager.addEventListener( MessageSMSEvent.MESSAGE_SMS_DELIVERED,     smsEventHandler );\nMessage.service.smsManager.addEventListener( MessageSMSEvent.MESSAGE_SMS_RECEIVED,      smsEventHandler );\nMessage.service.smsManager.addEventListener( MessageSMSEvent.MESSAGE_SMS_SENT,          smsEventHandler );\nMessage.service.smsManager.addEventListener( MessageSMSEvent.MESSAGE_SMS_SENT_ERROR,    smsEventHandler );\n\n\nfunction smsEventHandler( event:MessageSMSEvent ):void\n{\n    trace( event.type +"::"+ event.details + "::"+event.sms.toString() );\n}\n')))}c.isMDXComponent=!0}}]);
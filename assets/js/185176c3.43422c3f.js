"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[1890],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},75897:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"Basics",sidebar_label:"Basics"},o=void 0,s={unversionedId:"facebookapi/core/graph-api/basics",id:"facebookapi/core/graph-api/basics",title:"Basics",description:"The Graph API implementation involves several classes. A builder class GraphRequestBuilder",source:"@site/docs/facebookapi/core/graph-api/basics.md",sourceDirName:"facebookapi/core/graph-api",slug:"/facebookapi/core/graph-api/basics",permalink:"/docs/facebookapi/core/graph-api/basics",draft:!1,tags:[],version:"current",frontMatter:{title:"Basics",sidebar_label:"Basics"},sidebar:"facebookapi",previous:{title:"Overview",permalink:"/docs/facebookapi/core/graph-api/overview"},next:{title:"Batch",permalink:"/docs/facebookapi/core/graph-api/batch"}},l={},p=[{value:"Events",id:"events",level:2},{value:"Callbacks",id:"callbacks",level:2},{value:"Builder",id:"builder",level:2},{value:"Fields and Parameters",id:"fields-and-parameters",level:3},{value:"Image Data",id:"image-data",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Graph API implementation involves several classes. A builder class ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequestBuilder"),"\nis used to create a ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequest")," which is then passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"makeRequest")," function\nto actually perform the request."),(0,r.kt)("p",null,"The simplest example of this is retrieving the current user's information:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var request:GraphRequest = new GraphRequestBuilder()\n    .setPath( "/me" )\n    .build();\n\nFacebook.instance.graphAPI.makeRequest( request );\n')),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequest")," will dispatch status events indicating the completion or failure of the\nrequest:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphRequestEvent.COMPLETE"),": dispatched on successful completion"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphRequestEvent.ERROR"),": dispatched if there was an error")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"request.addEventListener( GraphRequestEvent.COMPLETE, request_completeHandler );\nrequest.addEventListener( GraphRequestEvent.ERROR, request_errorHandler );\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"function request_completeHandler( event:GraphRequestEvent ):void \n{\n    // event.data will contain the Facebook response\n    trace( JSON.stringify(event.data) );\n}\n\nfunction request_errorHandler( event:GraphRequestEvent ):void \n{\n    // event.errorCode and event.errorMessage will contain details on the error\n    trace( event.errorMessage );\n}\n")),(0,r.kt)("h2",{id:"callbacks"},"Callbacks"),(0,r.kt)("p",null,"As an alternative to events, you can add a callback function to a request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'var request:GraphRequest = new GraphRequestBuilder()\n    .setPath( "/me" )\n    .setCompleteCallback(\n            function( data:Object ):void \n            {\n                log( "request complete: " + JSON.stringify(data) );\n            }\n    )\n    .setErrorCallback(\n            function( code:int, message:String ):void \n            {\n                log( "request error: " + code + "::"+ message );\n            }\n    )\n    .build();\n')),(0,r.kt)("p",null,"These functions must be of the specific format above, i.e. for the complete callback:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"function( data:Object ):void \n{\n    // process completion data\n}\n")),(0,r.kt)("p",null,"And the error callback:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"function( errorCode:int, errorMessage:String ):void \n{\n    // process request error\n}\n")),(0,r.kt)("h2",{id:"builder"},"Builder"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphRequestBuilder")," is your main interface to constructing requests."),(0,r.kt)("p",null,"You must specify at least the Graph API endpoint you wish to query using the ",(0,r.kt)("inlineCode",{parentName:"p"},"setPath")," function."),(0,r.kt)("h3",{id:"fields-and-parameters"},"Fields and Parameters"),(0,r.kt)("p",null,"Most commands will have a list of optional parameters and/or fields. For example, the ",(0,r.kt)("inlineCode",{parentName:"p"},"/me"),"\nendpoint you can use the fields to add additional information you wish to retrieve. If you\nhave requested the email permission for example, you can add the ",(0,r.kt)("inlineCode",{parentName:"p"},'"email"')," field to return the\nusers email address. To add a field use the ",(0,r.kt)("inlineCode",{parentName:"p"},"addField")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"addFields")," function on the builder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'new GraphRequestBuilder()\n    .setPath( "/me" )\n    .addField( "email" )\n    .build();\n')),(0,r.kt)("p",null,"Parameters are often additional information passed along with the request, for example a\nlink passed along with a post request. To add a parameter use the ",(0,r.kt)("inlineCode",{parentName:"p"},"addParameter")," function\non the builder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'new GraphRequestBuilder()\n    .setPath( "/me/feed" )\n    .setMethod( GraphRequestBuilder.METHOD_POST )\n    .addParameter( "link", "https://airnativeextensions.com" )\n    .build();\n')),(0,r.kt)("h3",{id:"image-data"},"Image Data"),(0,r.kt)("p",null,"If you wish to add image data to a post you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"setImage")," function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'new GraphRequestBuilder()\n    .setPath( "/me/photos" )\n    .setMethod( GraphRequestBuilder.METHOD_POST )\n    .setImage( yourBitmapData )\n    .addParameter( "message", "Image posted through the Graph API from the Facebook API ANE" )\n    .build();\n')))}d.isMDXComponent=!0}}]);
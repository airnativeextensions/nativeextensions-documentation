"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[99097],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),p=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),f=r,g=u["".concat(l,".").concat(f)]||u[f]||d[f]||o;return t?i.createElement(g,a(a({ref:n},c),{},{components:t})):i.createElement(g,a({ref:n},c))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:r,a[1]=s;for(var p=2;p<o;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},69773:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var i=t(87462),r=(t(67294),t(3905));const o={title:"Setup Licensing",sidebar_label:"Setup Licensing"},a=void 0,s={unversionedId:"expansionfiles/setup-licensing",id:"expansionfiles/setup-licensing",title:"Setup Licensing",description:"Before you start adding license verification to your application, you need to set",source:"@site/docs/expansionfiles/setup-licensing.md",sourceDirName:"expansionfiles",slug:"/expansionfiles/setup-licensing",permalink:"/docs/expansionfiles/setup-licensing",draft:!1,tags:[],version:"current",frontMatter:{title:"Setup Licensing",sidebar_label:"Setup Licensing"},sidebar:"expansionfiles",previous:{title:"Request Authorisation",permalink:"/docs/expansionfiles/request-authorisation"},next:{title:"Uploading Expansion Files",permalink:"/docs/expansionfiles/uploading-expansion-files"}},l={},p=[],c={toc:p},u="wrapper";function d(e){let{components:n,...o}=e;return(0,r.kt)(u,(0,i.Z)({},c,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Before you start adding license verification to your application, you need to set\nup your Google Play publishing account, your development environment, and any test\naccounts required to verify your implementation."),(0,r.kt)("p",null,"Follow the guide from Google to go through the process of setting up a publisher\naccount (just the first section until you get your licensing public key): "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://developer.android.com/google/play/licensing/setting-up.html"},"Setting up for Licensing"))),(0,r.kt)("p",null,"Once you have completed this you will need to copy the base64 encoded string\nrepresentation of your public key for licensing. You can obtain the app's public\nkey for licensing in the Services & APIs page (under All Applications)"),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(71671).Z,width:"734",height:"361"})),(0,r.kt)("p",null,"You will also need to create a salt value which will be used to encrypt and decrypt\nthe data as it is written to or read from storage. The salt should be an array of\n20 randomly generated integer values."),(0,r.kt)("p",null,"The two values (base64 public license key and your salt values) should be passed\nto the ",(0,r.kt)("inlineCode",{parentName:"p"},"setup")," function as in the following example."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'public static const BASE64_PUBLIC_KEY   : String = "YOUR_LICENSING_PUBLIC_KEY";\npublic static const SALT        : Vector.<int> = Vector.<int>( [ 1, 43, -12, -1, 54, 98, -100, -12, 43, 2, -8, -4, 9, 5, -106, -108, -33, 45, -1, 84 ]); \n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},'ExpansionFiles.init( "APP_KEY" );\n                \ntrace( "ExpansionFiles Supported: " + ExpansionFiles.isSupported );\ntrace( "ExpansionFiles Version:   " + ExpansionFiles.service.version );\n\nif (ExpansionFiles.isSupported)\n{\n    ExpansionFiles.service.setup( BASE64_PUBLIC_KEY, SALT );\n}\n')))}d.isMDXComponent=!0},71671:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/licensing_public_key-48e373c5bd4ace9729145c09717373fa.png"}}]);
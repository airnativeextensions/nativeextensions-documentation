"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[30257],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(n),p=o,m=d["".concat(c,".").concat(p)]||d[p]||h[p]||s;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:o,a[1]=i;for(var u=2;u<s;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},22448:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var r=n(87462),o=(n(67294),n(3905));const s={title:"Authorisation",sidebar_label:"Authorisation"},a=void 0,i={unversionedId:"detectscreenshot/authorisation",id:"detectscreenshot/authorisation",title:"Authorisation",description:"On Android there is no direct way to detect screenshots so instead this extension uses a common technique of observing the user's media library",source:"@site/docs/detectscreenshot/authorisation.md",sourceDirName:"detectscreenshot",slug:"/detectscreenshot/authorisation",permalink:"/docs/detectscreenshot/authorisation",draft:!1,tags:[],version:"current",frontMatter:{title:"Authorisation",sidebar_label:"Authorisation"},sidebar:"detectscreenshot",previous:{title:"AIR",permalink:"/docs/detectscreenshot/add-the-extension"},next:{title:"Usage",permalink:"/docs/detectscreenshot/usage"}},c={},u=[{value:"Requesting Authorisation",id:"requesting-authorisation",level:2},{value:"Event based",id:"event-based",level:3},{value:"Callback based",id:"callback-based",level:3},{value:"Imports",id:"imports",level:2}],l={toc:u},d="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"On Android there is no direct way to detect screenshots so instead this extension uses a common technique of observing the user's media library\nand watching for additions to places where screenshots are normally stored. This approach however requires authorisation to read the user's media. "),(0,o.kt)("p",null,"On iOS this process is not needed and it will always return authorised."),(0,o.kt)("h2",{id:"requesting-authorisation"},"Requesting Authorisation"),(0,o.kt)("p",null,"To this end the extension provides several helpers to check and request authorisation. "),(0,o.kt)("p",null,"On Android these permissions are listed through the manifest additions.\nOn older versions of Android these permissions are accepted when the user installs the application.\nMore modern versions (Marshmallow 6 ","[v23]","+) require that you request the user grants the permissions.\nYou will need to list the permissions in your manifest and then follow the code below. "),(0,o.kt)("p",null,"You should respect the ",(0,o.kt)("inlineCode",{parentName:"p"},"SHOULD_EXPLAIN")," status by displaying additional information to your user about why you require this functionality."),(0,o.kt)("h3",{id:"event-based"},"Event based"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'DetectScreenshot.instance.addEventListener( AuthorisationEvent.CHANGED, authorisationStatus_changedHandler );\n\nswitch (DetectScreenshot.instance.authorisationStatus())\n{\n    case AuthorisationStatus.SHOULD_EXPLAIN:\n    case AuthorisationStatus.NOT_DETERMINED:\n        // REQUEST ACCESS: This will display the permission dialog\n        DetectScreenshot.instance.requestAuthorisation();\n        return;\n    \n    case AuthorisationStatus.DENIED:\n    case AuthorisationStatus.UNKNOWN:\n    case AuthorisationStatus.RESTRICTED:\n        // ACCESS DENIED: You should inform your user appropriately\n        return;\n        \n    case AuthorisationStatus.AUTHORISED:\n        // AUTHORISED\n        break;                      \n}\n\nfunction authorisationStatus_changedHandler( event:AuthorisationEvent ):void\n{\n    trace( "authorisationStatus_changedHandler: "+event.status );\n}\n')),(0,o.kt)("h3",{id:"callback-based"},"Callback based"),(0,o.kt)("p",null,"Alternatively you can use a callback function for the ",(0,o.kt)("inlineCode",{parentName:"p"},"requestAuthorisation()")," method:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'DetectScreenshot.instance.requestAuthorisation(\n    function ( status:String ):void\n    {\n        trace( "requestAuthorisation(): status=" + status );\n    } );\n')),(0,o.kt)("h2",{id:"imports"},"Imports"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},"import com.distriqt.extension.detectscreenshot.DetectScreenshot;\nimport com.distriqt.extension.detectscreenshot.AuthorisationStatus;\n")))}h.isMDXComponent=!0}}]);
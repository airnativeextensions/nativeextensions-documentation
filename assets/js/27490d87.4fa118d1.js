"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[87420],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),s=d(n),m=o,f=s["".concat(p,".").concat(m)]||s[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=s;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},11749:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a={},c=void 0,p={unversionedId:"battery/changelog",id:"battery/changelog",isDocsHomePage:!1,title:"changelog",description:"2020.03.23 [v4.0.008]",source:"@site/docs/battery/changelog.md",sourceDirName:"battery",slug:"/battery/changelog",permalink:"/docs/battery/changelog",tags:[],version:"current",frontMatter:{},sidebar:"battery",previous:{title:"Battery Info",permalink:"/docs/battery/battery-info"}},d=[],l={toc:d};function u(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h6",{id:"20200323-v40008"},"2020.03.23 ","[v4.0.008]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Android X migration (resolves #8)\n")),(0,i.kt)("h6",{id:"20190816-v30003"},"2019.08.16 ","[v3.0.003]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Android 64bit support (resolves #7)\nAdded macOS implementation\nAdded Windows implementation \nUpdated minimum iOS version to 9.0\n")),(0,i.kt)("h6",{id:"20181022-v20004"},"2018.10.22 ","[v2.0.004]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Removed application key requirement\n")),(0,i.kt)("h6",{id:"20170710-v20002"},"2017.07.10 ","[v2.0.002]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Updated for compatibility with new Core library (for Notifications/PushNotifications fix)\n")),(0,i.kt)("h6",{id:"20161222-v20001"},"2016.12.22 ","[v2.0.001]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Updating documentation\n")),(0,i.kt)("h6",{id:"20161222-v20001-1"},"2016.12.22 ","[v2.0.001]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Updates for iOS 10 and Android 7.0\nUpdating documentation\n")),(0,i.kt)("h6",{id:"20150609"},"2015.06.09"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Android: Windows: Fix for bug in AIR packager resulting in missing resources (resolves #3)\n")),(0,i.kt)("h6",{id:"20150603"},"2015.06.03"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Android: x86 Support\nAndroid: Added checks to avoid exception (#2)\nUpdated internal event formatting \n")),(0,i.kt)("h6",{id:"20150227"},"2015.02.27"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Changed class structure to support FlashBuilder 4.6\n")),(0,i.kt)("h6",{id:"20150202"},"2015.02.02"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Added check for .debug suffix in application id\n")),(0,i.kt)("h6",{id:"20141218"},"2014.12.18"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"iOS: Included arm64 support (resolves #1) \nAndroid: Corrected application id check when doesn't contain air prefix \n")),(0,i.kt)("h6",{id:"20141205"},"2014.12.05"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Corrected missing EventDispatcher functions from base class\niOS: Implemented autoreleasepools for all c function calls\n")),(0,i.kt)("h6",{id:"20141127"},"2014.11.27"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"New application based key check, removing server checks\n")),(0,i.kt)("h6",{id:"20141022"},"2014.10.22"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"iOS Update for iOS 8\n")))}u.isMDXComponent=!0}}]);
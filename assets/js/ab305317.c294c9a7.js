"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[73652],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=i.createContext({}),l=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return i.createElement(u.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),c=l(n),d=a,m=c["".concat(u,".").concat(d)]||c[d]||h[d]||o;return n?i.createElement(m,s(s({ref:t},p),{},{components:n})):i.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r[c]="string"==typeof e?e:a,s[1]=r;for(var l=2;l<o;l++)s[l]=n[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},12221:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var i=n(87462),a=(n(67294),n(3905));const o={title:"Request Authorisation",sidebar_label:"Request Authorisation"},s=void 0,r={unversionedId:"nativemaps/request-authorisation",id:"nativemaps/request-authorisation",title:"Request Authorisation",description:"Displaying maps does not require any particular authorisation / permission from the user.",source:"@site/docs/nativemaps/request-authorisation.mdx",sourceDirName:"nativemaps",slug:"/nativemaps/request-authorisation",permalink:"/docs/nativemaps/request-authorisation",draft:!1,tags:[],version:"current",frontMatter:{title:"Request Authorisation",sidebar_label:"Request Authorisation"},sidebar:"nativemaps",previous:{title:"Initialise the Extension",permalink:"/docs/nativemaps/initialise-the-extension"},next:{title:"Create a Map",permalink:"/docs/nativemaps/create-a-map"}},u={},l=[{value:"Requesting Authorisation",id:"requesting-authorisation",level:2},{value:"Android",id:"android",level:3},{value:"iOS",id:"ios",level:3},{value:"Implementation",id:"implementation",level:3},{value:"Usage Description",id:"usage-description",level:2}],p={toc:l},c="wrapper";function h(e){let{components:t,...o}=e;return(0,a.kt)(c,(0,i.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Displaying maps does not require any particular authorisation / permission from the user.\nYou can use most of the functionality of this ANE without requesting authorisation at all."),(0,a.kt)("p",null,"The exception here is if you plan to display the user's location on the map using the ",(0,a.kt)("inlineCode",{parentName:"p"},"showUserLocation()"),"\nfunction."),(0,a.kt)("h2",{id:"requesting-authorisation"},"Requesting Authorisation"),(0,a.kt)("p",null,"The extension provides several helpers to check and request access to the user's location. "),(0,a.kt)("p",null,"You will need to ensure you have added the additional configuration items to your application before attempting to use the user location. This is detailed ",(0,a.kt)("a",{parentName:"p",href:"/docs/nativemaps/add-the-extension#user-location"},"here")),(0,a.kt)("h3",{id:"android"},"Android"),(0,a.kt)("p",null,"On older versions of Android these permissions are accepted when the user installs the application.\nMore modern versions (Marshmallow 6 ","[v23]","+) require that you request the permissions similar to iOS.\nYou will still need to list them in your manifest and then follow the same code below as for iOS, except that on Android you will be able to ask multiple times.\nYou should respect the ",(0,a.kt)("inlineCode",{parentName:"p"},"SHOULD_EXPLAIN")," status by displaying additional information to your user about why you require this functionality."),(0,a.kt)("h3",{id:"ios"},"iOS"),(0,a.kt)("p",null,"On iOS the user must be asked at runtime, which you only get one chance to ask,\nafter which you must direct the user to manually change the permissions in the settings."),(0,a.kt)("p",null,"There are two types of permission on iOS ",(0,a.kt)("inlineCode",{parentName:"p"},"ALWAYS")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"IN_USE"),". "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ALWAYS"),", indicates that you wish to continue tracking the user's location while your application is in the background.\nFor most cases, this will be excessive for a mapping application and we suggest you only request\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"IN_USE")," permission, which allows your application access to the user's permission while\nyour application is active."),(0,a.kt)("h3",{id:"implementation"},"Implementation"),(0,a.kt)("p",null,"The following code will work across both platforms:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-actionscript"},'switch (NativeMaps.service.authorisationStatus())\n{\n    case AuthorisationStatus.ALWAYS:\n    case AuthorisationStatus.IN_USE:\n        trace( "User allowed access: " + NativeMaps.service.authorisationStatus() );\n        break;\n    \n    case AuthorisationStatus.NOT_DETERMINED:\n    case AuthorisationStatus.SHOULD_EXPLAIN:\n        NativeMaps.service.requestAuthorisation( AuthorisationStatus.IN_USE );\n        break;\n    \n    case AuthorisationStatus.RESTRICTED:\n    case AuthorisationStatus.DENIED:\n    case AuthorisationStatus.UNKNOWN:\n        trace( "User denied access" );\n        break;\n}\n')),(0,a.kt)("h2",{id:"usage-description"},"Usage Description"),(0,a.kt)("p",null,"You can customise the usage description messages as you see fit to suit your application. These messages are displayed in the main body area of the iOS authorisation dialog with the title and buttons being standard (and not customisable)."),(0,a.kt)("p",null,"The image below is an example of the authorisation dialog. The content ",(0,a.kt)("em",{parentName:"p"},'"Access to photo library is required to save images."')," is the usage description message you can set."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(73453).Z,width:"573",height:"357"})),(0,a.kt)("p",null,"You set these values through adding the usage description keys to your application descriptor's info additions or simply by setting up your configuration options in your ",(0,a.kt)("inlineCode",{parentName:"p"},"apm")," project."))}h.isMDXComponent=!0},73453:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/ios-permission-dialog-fb435e911b1ce9d2619a0dff5db7e237.png"}}]);
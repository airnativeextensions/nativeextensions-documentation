"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[72199],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=c(n),u=r,g=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(g,o(o({ref:t},s),{},{components:n})):a.createElement(g,o({ref:t},s))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[m]="string"==typeof e?e:r,o[1]=p;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},73673:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={title:"Printing",sidebar_label:"Printing"},o=void 0,p={unversionedId:"epos/printing",id:"epos/printing",title:"Printing",description:"Once you have created your EposPrinter instance and initiated a connection you can print to the connected device by using a series of commands.",source:"@site/docs/epos/printing.md",sourceDirName:"epos",slug:"/epos/printing",permalink:"/docs/epos/printing",draft:!1,tags:[],version:"current",frontMatter:{title:"Printing",sidebar_label:"Printing"}},l={},c=[{value:"Image",id:"image",level:2},{value:"Cutting",id:"cutting",level:2},{value:"Print",id:"print",level:2},{value:"Clear Command Buffer",id:"clear-command-buffer",level:2},{value:"Example",id:"example",level:2}],s={toc:c},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Once you have created your ",(0,r.kt)("inlineCode",{parentName:"p"},"EposPrinter")," instance and initiated a connection you can print to the connected device by using a series of commands."),(0,r.kt)("h2",{id:"image"},"Image"),(0,r.kt)("p",null,"To send an image to the printer use the ",(0,r.kt)("inlineCode",{parentName:"p"},"addImage()")," method.\nThis method adds a raster image print command to the command buffer. You will need to load your image into a ",(0,r.kt)("inlineCode",{parentName:"p"},"BitmapData")," instance and pass this (along with any options) to the ",(0,r.kt)("inlineCode",{parentName:"p"},"addImage()")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var image:BitmapData = (new EmbeddedImage() as Bitmap).bitmapData;\n\nprinter.addImage( image );\n")),(0,r.kt)("p",null,"You can also specify some options for the image if required:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var options:ImageOptions = new ImageOptions();\noptions.x = 10;\noptions.y = 10;\n\nprinter.addImage( image, options );\n")),(0,r.kt)("p",null,"The image should contain a single pixel for each dot on the printer. We have found a 500 pixel wide image works well with the ",(0,r.kt)("inlineCode",{parentName:"p"},"TM_T88VII")," printer."),(0,r.kt)("h2",{id:"cutting"},"Cutting"),(0,r.kt)("p",null,"To trigger a cut of the paper, call the ",(0,r.kt)("inlineCode",{parentName:"p"},"addCut()")," method and pass the cut type.  The cut types are defined by the constants in the ",(0,r.kt)("inlineCode",{parentName:"p"},"EposCut")," class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"printer.addCut( EposCut.CUT_FEED );\n")),(0,r.kt)("h2",{id:"print"},"Print"),(0,r.kt)("p",null,"Once you have assembled your commands, call the ",(0,r.kt)("inlineCode",{parentName:"p"},"sendData()")," method to send your print commands to the printer. Calling this method will start the print process."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"printer.sendData();\n")),(0,r.kt)("h2",{id:"clear-command-buffer"},"Clear Command Buffer"),(0,r.kt)("p",null,"Once you have completed your print you should clear the command buffer by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"clearCommandBuffer()"),". This will ensure the command buffer is empty before any further prints are done. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"printer.clearCommandBuffer();\n")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"The following example prints an image and cuts the paper."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-actionscript"},"var image:BitmapData = (new EmbeddedImage() as Bitmap).bitmapData;\n\nprinter.addImage( image );\nprinter.addCut( EposCut.CUT_FEED );\nprinter.sendData();\nprinter.clearCommandBuffer();\n")))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[96750],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),s=d(n),m=o,f=s["".concat(p,".").concat(m)]||s[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=s;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},55925:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a={},c=void 0,p={unversionedId:"vibration/changelog",id:"vibration/changelog",isDocsHomePage:!1,title:"changelog",description:"2021.03.23 [v5.0.072]",source:"@site/docs/vibration/changelog.md",sourceDirName:"vibration",slug:"/vibration/changelog",permalink:"/docs/vibration/changelog",tags:[],version:"current",frontMatter:{},sidebar:"vibration",previous:{title:"Haptic Engine",permalink:"/docs/vibration/haptic-engine"}},d=[],l={toc:d};function u(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h6",{id:"20210323-v50072"},"2021.03.23 ","[v5.0.072]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Unity Plugin release\nAdded Haptic Engine functionality for iOS\n\n")),(0,i.kt)("h6",{id:"20210323-v50070"},"2021.03.23 ","[v5.0.070]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Unity Plugin release\nAdded Haptic Engine functionality for iOS\n\n")),(0,i.kt)("h6",{id:"20200320-v40023"},"2020.03.20 ","[v4.0.023]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Android X migration (resolves #18)\n")),(0,i.kt)("h6",{id:"20190815-v30021"},"2019.08.15 ","[v3.0.021]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Android: Updated to VibrationEffect on API v26+ \nAndroid 64bit update (resolves #17)\nUpdated minimum iOS version to 9.0\n")),(0,i.kt)("h6",{id:"20190311-v21017"},"2019.03.11 ","[v2.1.017]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Updated minimum iOS version to 8.0 (resolves #13)\nEmbedded iOS bitcode\nRemoved application keys \n")),(0,i.kt)("h6",{id:"20180730-v20011"},"2018.07.30 ","[v2.0.011]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Added haptic feedback\n")),(0,i.kt)("h6",{id:"20180721-v16005"},"2018.07.21 ","[v1.6.005]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Updated build to latest Android and iOS versions, removed application key requirement\n")),(0,i.kt)("h6",{id:"20170710-v16003"},"2017.07.10 ","[v1.6.003]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Updated for compatibility with new Core library (for Notifications/PushNotifications fix)\n")),(0,i.kt)("h6",{id:"20161230-v16002"},"2016.12.30 ","[v1.6.002]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Update documentation\n")),(0,i.kt)("h6",{id:"20161230-v16002-1"},"2016.12.30 ","[v1.6.002]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Updated SDKs + new documentation\n")),(0,i.kt)("h6",{id:"20150616"},"2015.06.16"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Removed debug code from AS lib\niOS: Updated to latest common lib\nAndroid: Windows: Fix for bug in AIR packager resulting in missing resources\nAndroid: x86 Support\n")),(0,i.kt)("h6",{id:"20150413"},"2015.04.13"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Android: Removed potentially conflicting resources (#5)\n")),(0,i.kt)("h6",{id:"20150413-1"},"2015.04.13"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Android x86 Support\nMoved to new structure to support FlashBuilder 4.6 (resolves #4)\n")),(0,i.kt)("h6",{id:"20150203"},"2015.02.03"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Added check for .debug suffix in application id\n")),(0,i.kt)("h6",{id:"20141222"},"2014.12.22"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"iOS: Included arm64 support (resolves #1)\nAndroid: Corrected application id check when doesn't contain air prefix\n")),(0,i.kt)("h6",{id:"20141208"},"2014.12.08"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Corrected missing EventDispatcher functions from base class\niOS: Implemented autoreleasepools for all C function calls\n")),(0,i.kt)("h6",{id:"20141202"},"2014.12.02"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"New application based key check, removing server checks\n")),(0,i.kt)("h6",{id:"20141119"},"2014.11.19"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Android isSupported \n- Android: Fixed the isSupported flag to correctly check the hasVibrator function (Fixes #289)\n")))}u.isMDXComponent=!0}}]);
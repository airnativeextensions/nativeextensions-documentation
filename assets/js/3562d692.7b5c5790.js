"use strict";(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[64818],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(r),f=a,b=d["".concat(p,".").concat(f)]||d[f]||u[f]||o;return r?n.createElement(b,i(i({ref:t},l),{},{components:r})):n.createElement(b,i({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},57662:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return l},default:function(){return d}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],c={title:"Parse WebP Data",sidebar_label:"Parse WebP Data"},p=void 0,s={unversionedId:"webp/parse-webp-data",id:"webp/parse-webp-data",title:"Parse WebP Data",description:"If you load data from a URL or other data source you can use the parseWebP",source:"@site/docs/webp/parse-webp-data.md",sourceDirName:"webp",slug:"/webp/parse-webp-data",permalink:"/docs/webp/parse-webp-data",tags:[],version:"current",frontMatter:{title:"Parse WebP Data",sidebar_label:"Parse WebP Data"},sidebar:"webp",previous:{title:"Load a WebP File",permalink:"/docs/webp/load-a-webp-file"},next:{title:"changelog",permalink:"/docs/webp/changelog"}},l=[],u={toc:l};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you load data from a URL or other data source you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"parseWebP"),"\nfunction to decode the WebP data into useable bitmap pixel data."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-actionscript"},'// For this example load data from a file into a ByteArray\nvar file:File = File.applicationDirectory.resolvePath( "image.webp" );\nvar fs:FileStream = new FileStream();\nfs.open( file, FileMode.READ );\nvar data:ByteArray = new ByteArray();\nfs.readBytes( data, 0, fs.bytesAvailable );\nfs.close();\n\nvar decodedData:ByteArray = new ByteArray();\n\n//\n// Use WebP to decode the data\nvar success:Boolean = WebP.service.parseWebP( data, decodedData );\n\nif (success) \n{\n    var rect:Rectangle = new Rectangle( 0, 0, WebP.service.width, WebP.service.height );\n    var bd:BitmapData = new BitmapData( WebP.service.width, WebP.service.height, true );\n    bd.setPixels( rect, decodedData );\n    \n    // Use the BitmapData as required\n}\n')))}d.isMDXComponent=!0}}]);
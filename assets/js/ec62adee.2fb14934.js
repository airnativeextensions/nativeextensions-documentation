(self.webpackChunknativeextensions_documentation=self.webpackChunknativeextensions_documentation||[]).push([[42677],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),y=l(t),f=i,d=y["".concat(c,".").concat(f)]||y[f]||p[f]||s;return t?r.createElement(d,a(a({ref:n},u),{},{components:t})):r.createElement(d,a({ref:n},u))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,a=new Array(s);a[0]=y;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var l=2;l<s;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},91316:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},metadata:function(){return o},toc:function(){return c},default:function(){return u}});var r=t(22122),i=t(19756),s=(t(67294),t(3905)),a={title:"Analytics Sessions",sidebar_label:"Sessions"},o={unversionedId:"flurry/analytics-sessions",id:"flurry/analytics-sessions",isDocsHomePage:!1,title:"Analytics Sessions",description:"A session represents a single use of the application, so you should start and end a",source:"@site/docs/flurry/analytics-sessions.md",sourceDirName:"flurry",slug:"/flurry/analytics-sessions",permalink:"/docs/flurry/analytics-sessions",version:"current",sidebar_label:"Sessions",frontMatter:{title:"Analytics Sessions",sidebar_label:"Sessions"},sidebar:"flurry",previous:{title:"Initialise the Extension",permalink:"/docs/flurry/initialise-the-extension"},next:{title:"Analytics Events",permalink:"/docs/flurry/analytics-events"}},c=[],l={toc:c};function u(e){var n=e.components,t=(0,i.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"A session represents a single use of the application, so you should start and end a\nsession each time your application is activated. Make sure you only add the activation\nhandler after you've initialised the Flurry extension, or else implement a check to\nmake sure this process has been performed."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-actionscript"},'var config:FlurryAnalyticsConfig = new FlurryAnalyticsConfig();\nFlurry.service.analytics.initialiseWithKeys( "IOS_FLURRY_KEY", "ANDROID_FLURRY_KEY", config );\nFlurry.service.analytics.startSession();\n\naddEventListener( Event.ACTIVATE, activateHandler );\naddEventListener( Event.DEACTIVATE, deactivateHandler );\n\n\nfunction activateHandler( event:Event ):void\n{\n    if (Flurry.isSupported)\n    {\n        Flurry.service.analytics.startSession();\n    }\n}\n\nfunction deactivateHandler( event:Event ):void\n{\n    if (Flurry.isSupported)\n    {\n        Flurry.service.analytics.endSession();\n    }\n}\n')))}u.isMDXComponent=!0}}]);